{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Training","n":1}}},{"i":2,"$":{"0":{"v":"Security Journey","n":0.707}}},{"i":3,"$":{"0":{"v":"Training Security Journey Yellow Belt","n":0.447},"1":{"v":"\n## Module 1: Intro\n- ![](/assets/images/2022-04-25-14-00-43.png)\n- ![](/assets/images/2022-04-25-14-00-59.png)\n- ![](/assets/images/2022-04-25-14-01-13.png)\n- ![](/assets/images/2022-04-25-14-01-28.png)\n- ![](/assets/images/2022-04-25-14-01-44.png)\n- ![](/assets/images/2022-04-25-14-02-00.png)\n\n---\n\n## Module 2: Secure Design, Part 1\n- Why care?\n  - ![](/assets/images/2022-04-25-14-08-36.png)\n- Defense in depth\n  - ![](/assets/images/2022-04-25-14-09-51.png)\n  - Have different layers, to help prevent attackers from getting in\n  - ![](/assets/images/2022-04-25-14-10-30.png)  \n  - RASP : runtime application self-protection\n  - PSIRT : Product Security Incident Response Team\n- Less attack surface means less space for attacker to work with\n- Only use interfaces that are needed, review on a schedule\n- Avoid security by obscurity\n  - ![](/assets/images/2022-04-25-14-29-57.png)\n  - ![](/assets/images/2022-04-25-14-30-23.png)\n  - Threat model your entire design\n  - Keep security simple\n  - ![](/assets/images/2022-04-25-14-33-20.png)\n- Make security usable\n  - ![](/assets/images/2022-04-25-14-34-20.png)\n  - ![](/assets/images/2022-04-25-14-36-32.png)\n- Key Takeaways\n    1. Defense in depth provides a multi-layered application defense.​\n    2. Minimization of attack surface results in less total methods an attacker can try to exploit.\n    3. Security by obscurity is no security at all.\n    4. Simple security is better than complex.\n    5. Usable security has the best chance of user involvement.\n\n---\n\n## Module 3: Secure Design, Part 2\n- Secure Design Principle\n  - ![](/assets/images/2022-04-25-14-42-54.png)\n- Why care?\n  - Secure design equals less vulnerabilities\n- Fail securely\n  - Application: analyze design to esnure security relevant exceptions result in disallowing operation\n- Run with least privilege\n  - Grant users or apps only the **exact access** they need to perform their official duties\n    - Adjust privileges as needed, build secure from the beginning\n  - Review privilege levels\n- Separation of duties\n  - ![](/assets/images/2022-04-25-14-48-13.png)\n  - Application: use more than 1 admin with different roles\n- Don't trust services and infrastructure\n  - Application: Use input validation and output encoding for interactions with all external requests\n- Establish secure defaults\n  - ![](/assets/images/2022-04-25-14-51-31.png)\n  - Force the change of the default password at time of installation\n  - Application: \n    - ![](/assets/images/2022-04-25-14-52-30.png)\n    - Don't give them an insecure option  \n- Key Takeaways\n  1. Fail securely by limiting the access provided in a failure.​\n  2. Run applications and services with the least possible privilege for them to still function.​\n  3. Separate duties across multiple admin’s, and do not have a single admin with all the power.​\n  4. Internal services and infrastructure should not be trusted. Trust only after verifying.\n  5. When in doubt, provide a secure default to the user.\n\n---\n\n## Module 4: Input Validation\n- What is it?\n  - Checking potentially dangerous data to ensure that the inputs are safe before processing\n- Why care?\n  - ![](/assets/images/2022-04-25-15-01-12.png)\n- Goals of input validation\n  - ![](/assets/images/2022-04-25-15-01-41.png)\n- Syntactic AND Semantic\n  - Syntactic - enforce correct syntax of structured fields\n  - Semantic - enforce correctness of values ina specific business context\n- Dangerous and safe lists\n  - ![](/assets/images/2022-04-25-15-03-50.png)\n  - A bad list is constantly changing\n  - A safe list is more controlled\n- Client-side and server-side validation\n  - ![](/assets/images/2022-04-25-15-05-27.png)\n  - Choose server-side because we control the server, the user cannot turn it off\n  - Client-side validation can increase performance\n- Regular expressions and input validation\n  - ![](/assets/images/2022-04-25-15-09-02.png)\n  - Many frameworks have input validation\n- Implementing input validation\n  - ![](/assets/images/2022-04-25-15-27-02.png)\n- Input validation mitigations\n  - ![](/assets/images/2022-04-25-15-29-07.png)\n- Key Takeaways\n  1. The different input validation types are syntactic, semantic, safe list, dangerous list, client-side, and server-side.\n  2. Each of the web application frameworks provide methods to validate input.\n  3. Proper input validation includes framework data type validation, schema, type conversion, value range checks, arrays of allowed values, and regular expressions.\n  4. Validate all input. Trust no input, regardless of its origin.\n\n---\n\n## Module 5: Output Encoding\n- ![](/assets/images/2022-04-25-15-38-44.png)\n- Why care?\n  - ![](/assets/images/2022-04-25-15-39-51.png)\n- Contextual output encoding\n  - ![](/assets/images/2022-04-25-15-42-02.png)\n- Goals\n  - ![](/assets/images/2022-04-25-15-43-18.png)\n- Tips\n  - ![](/assets/images/2022-04-25-15-47-59.png)\n  - Work smarter not harder & context matters!\n- Key Takeaways\n    1. Encoding is translating special characters into some equivalent form that is no longer dangerous in the target interpreter.\n    2. Escaping is adding a special character before the character/string to avoid it being misinterpreted.\n    3. Contextual output encoding is enforcing output encoding at every level of a user interface, and encoding at the last moment before untrusted data is dynamically added to HTML.\n    4. The primary goal of output encoding and escaping is the prevention of XSS and command, XML, and LDAP injection.\n    5. Remember the OWASP Java Encoder and .NET AntiXSSEncoder, and consider what encoding your existing framework provides.\n    6. Input validation and output encoding work hand in hand to protect your application.\n\n---\n\n## Module 6: Authentication Theory\n- Why care?\n  - ![](/assets/images/2022-04-25-15-56-59.png)\n- Identity\n  - ![](/assets/images/2022-04-25-15-58-12.png)\n- Authentication\n  - ![](/assets/images/2022-04-25-15-58-43.png)\n- Threats\n  - ![](/assets/images/2022-04-25-16-00-12.png)\n  - ![](/assets/images/2022-04-25-16-00-53.png)\n- Weaknesses\n  - ![](/assets/images/2022-04-25-16-02-15.png)\n  - ![](/assets/images/2022-04-25-16-02-31.png)\n- Authentication Data\n  - ![](/assets/images/2022-04-25-16-03-53.png)\n- Memorized Secrets\n  - aka password\n- One-Time Password\n  - Valid for only one login session or transaction\n- Recovery keys\n  - Secrets stored by user and the system, an unlock key\n- Biometrics\n  - physical characteristics of a person as an auth source\n- Cryptographic\n  - A binary string used a secret parameter\n  - Needs to be protected\n- Factors of Authentication categories\n  - Something you know\n  - Something you have\n  - Something you are\n  - ![](/assets/images/2022-04-25-16-08-08.png)\n- Key Takeaways\n    1. Digital identity is a set of attributes that uniquely describe a person and authentication is verifying the identity of a user, process, or device before allowing access to resources in an information system.\n    2. There are many types of authentication specific threats and weaknesses, and it is important to consider each during threat modeling.\n    3. The authentication process relies upon memorized secrets, one-time passwords, biometrics, recovery keys, and cryptographic keys.\n    4. Single-factor authentication is something you know; two-factor is something you know + something you have / are; multi-factor is multiple pieces of evidence across all three categories.\n\n---\n\n## Module 7: Authorization Theory\n- ![](/assets/images/2022-04-25-16-20-20.png)\n- Why care?\n  - ![](/assets/images/2022-04-25-16-20-37.png)\n- Access control example\n  - ![](/assets/images/2022-04-25-16-22-39.png)\n- Authorization threats\n  - ![](/assets/images/2022-04-25-16-23-10.png)\n  - ![](/assets/images/2022-04-25-16-23-38.png)\n- Authorization weaknesses\n  - ![](/assets/images/2022-04-25-16-25-04.png)\n  - ![](/assets/images/2022-04-25-16-25-14.png)\n- Subjects and objects\n  - ![](/assets/images/2022-04-25-16-25-45.png)\n- Types of authorization\n  - DAC\n    - ![](/assets/images/2022-04-25-16-26-45.png)\n    - Seen a lot in file system permissions\n    - Users and file are defined\n  - MAC\n    - ![](/assets/images/2022-04-25-16-27-40.png)\n    - Users and documents each have a particular level asigned to them\n      - Unclassified\n      - Confidential\n      - Secret\n      - Top Secret\n  - RBAC\n    - ![](/assets/images/2022-04-25-16-30-43.png)\n  - ABAC\n    - ![](/assets/images/2022-04-25-16-31-32.png)\n- Design principles\n  - ![](/assets/images/2022-04-25-16-32-43.png)\n- Key Takeaways\n  1. Authorization is the access privileges granted to a user, program, or process or the act of granting those privileges.\n  2. Authorization specific threats include elevation of privilege, disclosure of confidential data, data tampering, and token stealing.\n  3. Authorization weaknesses include improper or incorrect authorization, authorization bypass, and improper access control.\n  4. DAC is discretionary, MAC is mandatory, RBAC is role based, and ABAC is attribute and policy based.\n  5. Review the authorization design principles when making any changes to an authorization policy or enforcement point.\n\n---\n\n## Module 8: Logging & Exception Handling\n- ![](/assets/images/2022-04-25-16-45-24.png)\n- Why care?\n  - ![](/assets/images/2022-04-25-16-45-33.png)\n- Logging threats\n  - Repudiation\n    - Proof that \"I\" did something terrible on the system\n  - Information disclosure\n    - PII written in logs...a big NO NO\n- Logging weaknesses\n  - ![](/assets/images/2022-04-25-16-52-18.png)\n  - ![](/assets/images/2022-04-25-16-52-29.png)\n- Which events to log\n  - ![](/assets/images/2022-04-25-16-54-33.png)\n- Where to record\n  - ![](/assets/images/2022-04-25-16-55-34.png) \n    - Don't record on file system in Prod\n    - DB's can scale better, set permissions accordingly\n    - SIEM, tech-based solutiuon to consolidate logs into one place\n- Common Event Format (CEF)\n  - ![](/assets/images/2022-04-25-17-00-26.png)\n- Event attributes\n  - ![](/assets/images/2022-04-25-17-00-39.png)\n- Data to exclude\n  - ![](/assets/images/2022-04-25-17-00-59.png)\n  - **NEVER log these!!!**\n- Protection of log data at rest\n  - ![](/assets/images/2022-04-25-17-02-46.png)\n  - Tamper detection, like a car alarm\n- Protection of log data in transit\n  - ![](/assets/images/2022-04-25-17-04-28.png)\n- Monitoring of events\n  - ![](/assets/images/2022-04-25-17-05-16.png)\n- Security concerns for exceptions\n  - ![](/assets/images/2022-04-25-17-06-52.png)\n- Logging design principles\n  - ![](/assets/images/2022-04-25-17-07-43.png)\n- Key Takeaways\n  1. The threats and weaknesses that impact logging are repudiation, information exposure, omission of security relevant info, insufficient logging, excessive data, and unchecked errors.\n  2. Examples of events to include are input/output validation, authentication, authorization, and session management failures.\n  3. Exclude any PII or sensitive information from log files.\n  4. Protect log data by limiting access, storing read-only, and using secure transmission protocols.\n  5. Log the right stuff, save logs for forensics, use a standard format, log high-value transactions, and establish monitoring and alerting.\n\n--- \n\n## Module 9: Cryptography\n- ![](/assets/images/2022-04-26-17-46-26.png)\n- Why care?\n  - To protect data in transit and at rest\n- Key\n  - ![](/assets/images/2022-04-26-17-48-33.png)\n  - Locks or unlocks data that is encrypted or decrypted\n- Cipher\n  - ![](/assets/images/2022-04-26-17-49-00.png)\n  - An algorithm that performs encryption or decryption\n- Symmetric Encryption & Decryption\n  - Same key used for encryption and decryption\n  - Shared key\n  - Examples: VPN\n- Asymmetric Encryption\n  - Public/private key\n  - Keys can be different\n  - Examples: PGP or GPG email encryption\n- Certificate\n  - ![](/assets/images/2022-04-26-17-54-34.png)\n  - Prvoes that a the webserver is bound to a particular domain name because it is signed by a trusted third party the browser has a trust relationship with cryptographically\n- Hashing\n  - Hashed value, smaller representation of the original value\n- Digital Signature\n  - ![](/assets/images/2022-04-26-17-57-24.png)\n  - Asymmetric\n  - Proves the authenticity\n- Symmetric and asymmetric ciphers\n  - ![](/assets/images/2022-04-26-17-59-24.png)\n- Cryptographic guidance\n  > Another resource comes from the National Institute of Standards and Technology (NIST) that's part of the United States government. It is called the Approved Security Functions for FIPS 140-2, Security Requirements for Cryptographic Modules. FIPS 140-2 is the US government and some other government standards for testing cryptography. They do have a set of best possible things that you should be using today. They update it frequently.\n\n- Key Takeaways\n  1. Basic cryptographic terms include key, cipher, certificate, plaintext, ciphertext, and hashing.\n  2. Encryption uses a key to transform plaintext into ciphertext, while decryption uses a key to transform ciphertext into plaintext.\n  3. Symmetric uses the same key, and asymmetric uses a public and private key pair.\n  4. Digital signatures prove authenticity.\n  5. Rolling your own crypto is a terrible idea because you too can create an algorithm that you yourself cannot break.​\n\n---\n\n## Module 10: Risk Management for AppSec\n- ![](/assets/images/2022-04-26-18-15-16.png)\n- Why care?\n  - ![](/assets/images/2022-04-26-18-15-28.png)\n- Risk Management Process\n  - ![](/assets/images/2022-04-26-18-20-29.png)\n- Risk Management Principles\n  - ![](/assets/images/2022-04-26-18-21-52.png)\n  1. ![](/assets/images/2022-04-26-18-22-22.png)\n  2. ![](/assets/images/2022-04-26-18-22-37.png)\n  3. ![](/assets/images/2022-04-26-18-22-47.png)\n  4. ![](/assets/images/2022-04-26-18-22-56.png)\n  5. ![](/assets/images/2022-04-26-18-23-05.png)\n  6. ![](/assets/images/2022-04-26-18-23-12.png)\n  7. ![](/assets/images/2022-04-26-18-23-21.png)\n  8. ![](/assets/images/2022-04-26-18-23-32.png)\n  9. ![](/assets/images/2022-04-26-18-23-41.png)\n  10. ![](/assets/images/2022-04-26-18-23-48.png)\n\n- Key Takeaways\n  1. Risk management is the program and supporting processes to manage information security risk to operations, assets, individuals, and other organizations\n  2. The risk management process includes identify the risk, analyze the risk, evaluate or rank the risk, treat the risk, and monitor and review the risk\n  3. Apply the principles of effective cybersecurity risk management to minimize the unknown risk in your application security program.\n\n---\n\n## Module 11: The Hacker Mindset\n- ![](/assets/images/2022-04-27-16-47-24.png)\n- Thacker attitude\n  - ![](/assets/images/2022-04-27-16-51-35.png)\n- Hacker view\n  - No such thing as 100% secure\n  - Least resistance\n  - Outside box thinking\n- Applying hacker mindset\n  - ![](/assets/images/2022-04-27-16-55-12.png)\n- Key Takeaways\n  1. A “hacker” is any skilled computer expert that uses their technical knowledge to overcome a problem.\n  2. The word “hacker” does not imply any criminal intent.\n  3. The hacker mindset includes recognizing that the world is full of fascinating problems waiting to be solved, avoiding solving the same issues and boredom, embracing freedom and competence.\n  4. Apply the hacker mindset to your job role by extending competence, using threat modeling/vuln scanning/pen testing, and utilize a white-hat hacking approach.\n\n---\n\n## Module 12: OWASP Top 10 Part 1\n![](/assets/images/2022-04-27-17-00-44.png)\n- A01 Broken Access Control\n  - ![](/assets/images/2022-04-27-17-11-24.png)\n  - Includes privileges\n  - Risks\n    - Unauthorized info disclosure\n    - Modification/destruction of data\n    - Elevation of privilege\n  - Mitigations\n    - ![](/assets/images/2022-04-27-17-19-22.png)\n    - JWT token, the server must invalidate it after logging out to prevent replay attacks\n- A02 Cryptographic failures\n  - ![](/assets/images/2022-04-27-17-22-23.png)\n  - Risks\n    - ![](/assets/images/2022-04-27-17-22-44.png)\n  - Mitigations\n    - ![](/assets/images/2022-04-27-17-23-02.png)\n    - If we don't need the data, we should get rid of it\n    - MAC - message authentication code\n- A03 Injection\n  - ![](/assets/images/2022-04-27-17-24-43.png)\n  - The attacker is trying to get their data to execute as a command on your system and then return some result\n  - Risks\n    - ![](/assets/images/2022-04-27-17-26-04.png)\n    - Exfiltration leads to a breach\n  - Mitigations\n    - ![](/assets/images/2022-04-27-17-26-52.png)\n    - ORM's are not necessarily 100% safe\n- Key Takeaways\n  1. The OWASP Top 10 list is best used as an awareness tool for securing web applications.\n  2. Implement access control using a deny by default approach.\n  3. Classify data by sensitivity and implement appropriate cryptographic controls.\n  4. Use an ORM (Object Relational Mapper), input validation, and escape characters to mitigate injection attacks.\n\n## Module 13: OWASP Top 10 Part 2\n- A04 Insecure Design\n  - ![](/assets/images/2022-04-27-17-47-01.png)\n  - Need to start planning for security upfront!!!\n  - Risks\n    - Leads to exploitation of all other OWASP Top 10 issues\n  - Mitigations\n    - ![](/assets/images/2022-04-27-17-50-30.png)\n    - Secure Development Lifecycle\n    - Embrace Threat Modeling\n- A05 Security Misconfigurations\n  - ![](/assets/images/2022-04-27-17-53-12.png)\n  - Someone makes a mistake\n  - Risks\n    - Data exposure\n  - Mitigations\n    - Harden builds\n    - Consistent\n    - Minimal\n      - Only install what's absolutely needed, minimize attack surface area\n    - Automated\n      - Implement an automated process to verify the configuration and settings\n- A06 Vulnerable and Outdated Components\n  - ![](/assets/images/2022-04-27-17-56-59.png)\n  - Risks\n    - ![](/assets/images/2022-04-27-17-57-47.png)\n  - Mitigations\n    - ![](/assets/images/2022-04-27-17-58-46.png)\n- A07 Identification and Authentication Failures\n  - ![](/assets/images/2022-04-27-17-59-53.png)\n  - Identification = telling information\n  - Authentication = proving the info is correct\n  - Risks\n    - System access\n    - Admin access\n  - Mitigations\n    - ![](/assets/images/2022-04-27-18-03-26.png)\n- Key Takeaways\n  1. Establish and use a secure development lifecycle and embrace Threat Modeling.\n  2. Implement an automated process to verify the configuration and settings.\n  3. Use Software Composition Analysis, continuously inventory, and monitor libraries and components.\n  4. Utilize Multi-Factor Authentication, replace default credentials, and implement weak password checks.\n\n---\n\n## Module 14: OWASP Top 10 Part 3\n- A08 Software and Data Integrity Failures\n  - ![](/assets/images/2022-04-28-08-39-31.png)\n  - Not protecting our infrastructure or code from integrity violations\n  - Risks\n    - Unauthorized accessed\n    - Malicious code inclusion\n    - RCE (remote code execution) from insecure deserialization\n  - Mitigations\n    - Digital signatures\n      - Ensures updates into our packages haven't been modified and are coming from a trusted, verified source\n    - SCA (Software composition analysis)\n      - A tool to scan our dependencies and package to make sure vulnerabilities were not introduced\n    - Peer code review\n    - Data integrity checks\n      - Make sure serialized objects when deserialized come in just like the way it was sent and hasn't been manipulated\n- A09 Security Logging and Monitoring Failures\n  - ![](/assets/images/2022-04-28-08-48-17.png)\n  - Could be insufficient logging\n  - Risks\n    - Successful attacks start with vulnerability probing. Remaining undetected raises chances of success\n  - Mitigations\n    - ![](/assets/images/2022-04-28-08-58-47.png)\n- A10 Server-side Request Forgery\n  - ![](/assets/images/2022-04-28-09-00-35.png)\n  - Newer\n  - Has caused several big breaches \n  - Attacker can manipulate some URLs the app is taking in as input, to fetch some resource\n  - ![](/assets/images/2022-04-28-09-03-18.png)\n  - ![](/assets/images/2022-04-28-09-05-05.png)\n    - Attack web server itself\n    - Attack internal system\n      - Points towards another server within our trusted network\n    - Attack to point towards a third-party system\n  - Risks\n    - ![](/assets/images/2022-04-28-09-07-53.png)\n      - Attacker can view a map of the network\n  - Mitigations\n    - ![](/assets/images/2022-04-28-09-09-07.png)\n- Key Takeaways\n  1. Use digital signatures, Software Composition Analysis, code reviews, and data integrity checks to prevent software and data integrity failures.\n  2. Ensure to log all login, access control, and server-side input validation failures and generate an audit trail for high-value transactions.\n  3. Prevent Server-Side Request Forgery (SSRF) with a zero-trust architecture and do not accept untrusted input to fetch resources.\n\n---\n\n## Module 15: Buffer Overflows & Remote Code Execution\n- Occurs when a program attempts to put more data into a buffer than that buffer can hold\n- If the attacker can drop to a shell, they can run commands on the server\n- Why Care?\n  - ![](/assets/images/2022-04-30-14-27-09.png)\n- Classic buffer overflow\n  - ![](/assets/images/2022-04-30-14-29-16.png)\n- Buffer overflow Threats\n  - ![](/assets/images/2022-04-30-14-29-32.png)\n- Types of buffer overflow\n  - ![](/assets/images/2022-04-30-14-32-54.png)\n- Mitigations\n  - ![](/assets/images/2022-04-30-14-35-36.png)\n  - ![](/assets/images/2022-04-30-14-36-09.png)\n- Key Takeaways\n  1. A buffer overflow occurs when a program attempts to put more data in a buffer than the buffer is setup to hold.\n  2. Remote code execution is when an attacker executes any command on a target machine or in a target process across the Internet.\n  3. A stack based overflow changes an instruction on the stack, a heap based overflow changes a buffer stored in the heap, and an integer overflow increments larger than what an integer can hold, causing unexpected results.\n  4. Mitigate buffer overflows through language choice, safe C libraries, ASLR, NX, and least privilege. \n\n--- \n## Module 16: Denial of Service\n- Denial of Service: An attempt to make a machine or network resource unavailable to its intended users\n- Distrubuted DoS: coming from multiple sources, multiple compromised systems are used to target a single system\n- \n- Why care?\n  - ![](/assets/images/2022-04-30-14-41-24.png)\n- Threats\n  - ![](/assets/images/2022-04-30-14-43-48.png)\n- Types\n  - ![](/assets/images/2022-04-30-14-45-20.png)\n  - ![](/assets/images/2022-04-30-14-45-49.png)\n  - ![](/assets/images/2022-04-30-14-46-09.png)\n  - ![](/assets/images/2022-04-30-14-48-08.png)\n  - ![](/assets/images/2022-04-30-14-50-09.png)\n  - ![](/assets/images/2022-04-30-14-50-19.png)\n  - ![](/assets/images/2022-04-30-14-50-56.png)\n    - ![](/assets/images/2022-04-30-14-51-52.png)\n\n## Module 17: XXS Part 1\n- What is Cross-Site Scripting (XSS)?\n  - ![](/assets/images/2022-04-30-15-11-57.png)\n- Why care?\n  - ![](/assets/images/2022-04-30-15-12-08.png)\n- Threats\n  - ![](/assets/images/2022-04-30-15-12-44.png)\n- Stored or persistent XSS\n  - ![](/assets/images/2022-04-30-15-14-49.png)\n- Example\n  - ![](/assets/images/2022-04-30-15-15-55.png)\n  - ![](/assets/images/2022-04-30-15-17-12.png)\n- Key Takeaways\n  1. Cross site scripting (XSS) is a type of injection attack in which malicious scripts are injected into otherwise benign and trusted web sites.\n  2. The prevalence of XSS has been stable for many years and is still a major threat.\n  3. Stored or Persistent XSS is when a malicious script is permanently stored, causing a victim to retrieve it when requesting information.\n\n---\n\n## Module 18: XSS Part 2\n- Reflected or non-persistent XSS\n  - ![](/assets/images/2022-04-30-15-22-12.png)\n  - Not stored in a Database\n- Reflected XSS example\n  - ![](/assets/images/2022-04-30-15-22-37.png)\n- DOM based XSS\n  - ![](/assets/images/2022-04-30-15-26-56.png)\n- Sources and Sinks\n  - ![](/assets/images/2022-04-30-15-28-11.png)\n- ![](/assets/images/2022-04-30-15-30-49.png)\n- Mitigations\n  - ![](/assets/images/2022-04-30-15-31-07.png)\n- Key Takeaways\n  1. Reflected or non-persistent XSS is when an injected script is delivered via an e-mail or other web site and takes the victim to the vulnerable site, which reflects the attack back to the victim’s browser.\n  2. DOM Based XSS is when an injected script is inserted into the Document Object Model environment and executes in the victim’s browser.\n  3. Stored XSS has a large target range and the vuln exists server side; reflected has a small target range, also existing server side; DOM based has a small target range, and can impact both server and client.\n  4. Practice proper mitigations to mitigate XSS, including using frameworks to escape output, review client side for use of sources and sinks, and enact a Content Security Policy to control where JavaScript may originate.\n\n---\n\n## Module 19: Injection: SQL and Command\n- ![](/assets/images/2022-04-30-15-39-23.png)\n- Why care?\n  - ![](/assets/images/2022-04-30-15-39-33.png)\n- Types of Injection\n  - ![](/assets/images/2022-04-30-15-39-48.png)\n- Threats\n  - ![](/assets/images/2022-04-30-15-42-37.png)\n  - Simple command injection\n    - ![](/assets/images/2022-04-30-15-45-59.png)\n  - SQL Injection\n    - ![](/assets/images/2022-04-30-15-46-18.png)\n- Mitigations\n  - ![](/assets/images/2022-04-30-15-47-12.png)\n  - ![](/assets/images/2022-04-30-15-47-20.png)\n- Key Takeaways\n  1. Injection is tricking an application into including unintended commands in the data sent to an interpreter.\n  2. The major types of injection attacks are SQL, OS Command, LDAP, and XSS.\n  3. Mitigate injection in your applications with proper input validation, safe API, and contextual output encoding.\n\n---\n\n## Module 20: Cross Site Request Forgery \n- What is it?\n  - ![](/assets/images/2022-04-30-15-53-51.png)\n- Why care?\n  - ![](/assets/images/2022-04-30-15-54-00.png)\n- Example\n  - ![](/assets/images/2022-04-30-15-55-58.png)\n  - ![](/assets/images/2022-04-30-15-57-05.png)\n  - ![](/assets/images/2022-04-30-15-57-13.png)\n  - ![](/assets/images/2022-04-30-15-57-19.png)\n- Synchronizer Tokens\n  - ![](/assets/images/2022-04-30-15-58-14.png)\n- SameSite Cookies\n  - ![](/assets/images/2022-04-30-16-00-01.png)\n- ![](/assets/images/2022-04-30-16-01-44.png)\n- Key Takeaways\n  1. Cross Site Request Forgery is an attack that forces an end user to execute unwanted actions on a web application in which they're currently authenticated.\n  2. The risk presented by CSRF is a successful attack can force the user to transfer funds, change their email address, and so forth. If the victim is an admin, CSRF can compromise the entire web application.\n  3. Mitigate CSRF by adding an unpredictable CSRF token with each request, using framework-provided CSRF defenses, and consider an alternate CSRF Defense like requiring user interaction.\n\n--- \n\n## Module 21: Insecure Communications\n- ![](/assets/images/2022-05-01-15-08-56.png)\n- Why care?\n  - ![](/assets/images/2022-05-01-15-09-03.png)\n- Networking sniffing\n  - ![](/assets/images/2022-05-01-15-09-29.png)\n    - Looks into the packet\n- Threat\n  - ![](/assets/images/2022-05-01-15-10-12.png)\n- Some solutions\n  - VPN\n  - TRansport Layer Security\n    - ![](/assets/images/2022-05-01-15-11-52.png)\n- Protocol choices through cipher suites from Mozilla\n  - ![](/assets/images/2022-05-01-15-14-53.png)\n- Key Takeaways\n  1. Insecure communications are the transmission of sensitive or private data in cleartext in a communication channel that can be sniffed by attackers.\n  2. The threat presented by insecure communications is the failure to adequately encrypt network traffic using strong cryptography resulting in customer data exposure and compromise.\n  3. Consider key exchange, authentication, bulk encryption, and message authentication code when determining if a communication's authentication and encryption are adequate.\n  4. When securing network communications, use TLS, serve all pages over HTTPS, use HTTP Strict Transport Security Header, and mark cookies as secure.\n\n---\n\n## Module 22: Social Engineering\n- ![](/assets/images/2022-05-01-15-19-46.png)\n  - Wolf in sheep's clothing\n- Why care?\n  - ![](/assets/images/2022-05-01-15-19-56.png)\n  - Developers are targeted, they have access to the source code and sys admin's\n- Goal of human attack\n  - Trick user into\n    - Clicking a link\n    - Telling a secret\n    - Open a (physical) door\n- The human factor\n  - ![](/assets/images/2022-05-01-15-22-51.png)\n- Social engineering vectors\n  - ![](/assets/images/2022-05-01-15-23-13.png)\n- Tactics\n  - ![](/assets/images/2022-05-01-15-23-31.png)\n- Social engineering process\n  - Gather info > establish rapport > Exploitation > Execution\n  - Gather info\n    - ![](/assets/images/2022-05-01-15-27-27.png)\n    - Salespeople like to share info\n  - Establish rapport\n    - ![](/assets/images/2022-05-01-15-27-56.png)\n  - Exploitation\n    - ![](/assets/images/2022-05-01-15-28-45.png)\n  - Execution\n    - ![](/assets/images/2022-05-01-15-28-58.png)\n- Key Takeaways\n  1. Human beings without knowledge of social engineering are potentially the weakest links in a system.\n  2. Social engineers utilize baiting, spear-phishing, pretexting, shoulder surfing, quid pro quo, phishing, tailgating, dumpster diving, and whaling.\n  3. The social engineering process includes gathering information, establishing rapport, exploitation, and execution.\n  4. The various scenarios considered included tailgating at the office, engineers receiving phishing emails, talking about confidential information in a public place, and trickery through impersonation.\n\n---\n\n## Module 23: AppSec in an Agile World, Part 1\n- Why care?\n  - ![](/assets/images/2022-05-01-15-37-18.png)\n- Agile basic terms\n  - ![](/assets/images/2022-05-01-15-37-51.png)\n  - ![](/assets/images/2022-05-01-15-38-23.png)\n- Agile Manifesto\n  - ![](/assets/images/2022-05-01-15-39-07.png)\n- Agile principles impacting security\n  - ![](/assets/images/2022-05-01-15-39-34.png)\n  - ![](/assets/images/2022-05-01-15-41-49.png)\n  - ![](/assets/images/2022-05-01-15-42-58.png)\n  - ![](/assets/images/2022-05-01-15-43-07.png)\n  - ![](/assets/images/2022-05-01-15-43-15.png)\n  - ![](/assets/images/2022-05-01-15-43-21.png)\n- Key Takeaways\n  1. Agile is the way of the future for software development, and building security in is the only avenue for real security success.\n  2. Each of the principles from the Agile Manifesto impact security, and must be considered to build a secure product or application.\n  3. The Agile methodology does not include security by default, but the phases of the secure development life cycle map to the stages of Agile.\n\n---\n\n## Module 24: AppSec in an Agile World, Part 2\n- Security needs to be baked in but also include a \"Security Focused\" sprint every 3-6 sprints\n- ![](/assets/images/2022-05-02-17-36-22.png)\n- Planning\n  - Security requirements\n  - Security stories\n- Develop\n  - Threat modeling and mitigation\n  - Security code review\n  - Secure coding\n  - Static analysis\n- Test\n  - Dynamic analysis\n  - Vulnerability scanning\n- Release\n  - 3rd Party software\n  - PSIRT\n- Definition of done and security\n  - ![](/assets/images/2022-05-02-17-40-01.png)\n- Security focused sprint\n  - ![](/assets/images/2022-05-02-17-41-09.png)\n- Key Takeaways\n  1. Agile is the way of the future for software development, and building security in is the only avenue for real security success.\n  2. SDL for Agile focuses on security activities performed in standard and security sprints.\n  3. The security activities of a standard sprint include security stories, threat modeling, static analysis, security code review, dynamic analysis, vulnerability scanning, and 3rd party software.\n  4. Your Agile Definition of Done must include security activities.\n  5. The security activities of a security sprint include privacy assessment, product security baseline, attack surface reduction, and penetration testing.\n\n--- \n\n## Module 25: AppSec in a DevOps World\n- ![](/assets/images/2022-05-02-17-48-45.png)\n- Why care?\n  - ![](/assets/images/2022-05-02-17-47-38.png)\n- All things continuous\n  - ![](/assets/images/2022-05-02-17-50-39.png)\n- DevSecOps\n  - ![](/assets/images/2022-05-02-17-54-07.png)\n- Key Takeaways\n  1. DevOps is a software development methodology focused on extreme code velocity.\n  2. All things continuous include integration, delivery, and deployment.\n  3. DevSecOps includes:\n\n---\n\n## Module 26: Security Behaviors in DevOps\n- ![](/assets/images/2022-05-02-17-59-03.png)\n- Embedding security habits\n  - ![](/assets/images/2022-05-02-17-59-37.png)\n- Security behaviors and habits\n  - ![](/assets/images/2022-05-02-18-00-11.png)\n  - ![](/assets/images/2022-05-02-18-00-21.png)\n  - ![](/assets/images/2022-05-02-18-00-26.png)\n  - ![](/assets/images/2022-05-02-18-00-33.png)\n  - ![](/assets/images/2022-05-02-18-00-39.png)\n  - ![](/assets/images/2022-05-02-18-00-46.png)\n  - ![](/assets/images/2022-05-02-18-00-55.png)\n  - ![](/assets/images/2022-05-02-18-01-01.png)\n- Key Takeaways\n  1. Build security in / start left\n  2. Uncover security design problems\n  3. React to automated security bugs\n  4. Detect security flaws in other’s code\n  5. Work towards eradication of 3rd party software vulns\n  6. Be mean to your code\n  7. Respond in a timely and organized fashion\n\n---\n\n## Module 27: Security Requirements and User Stories\n- ![](/assets/images/2022-05-04-16-35-13.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-16-35-23.png)\n- Uses of security reqs\n  - ![](/assets/images/2022-05-04-16-41-58.png)\n- Positive impact\n  - ![](/assets/images/2022-05-04-16-42-10.png)\n- Source of security reqs\n  - ![](/assets/images/2022-05-04-16-42-27.png)\n- 3 phases\n  - ![](/assets/images/2022-05-04-16-42-49.png)\n- Reference Standard: ASVS\n  - ![](/assets/images/2022-05-04-16-43-18.png)\n- Key Takeaways\n  1. Security requirements are a statement of needed security functionality that ensures one of the many different security properties of software is being satisfied.\n  2. Security requirements positively impact development as a roadmap of product/application security improvements, a method to make security repeatable and standard, and as a clear definition of what developers and system architects /designers need to build.\n  3. Trusted sources for requirements include industry standards, applicable laws, and vulnerability history.\n\n---\n\n## Module 28: Threat Modeling Basics\n- ![](/assets/images/2022-05-04-16-57-24.png)\n- Basic application security hygiene\n  - ![](/assets/images/2022-05-04-16-57-46.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-16-58-54.png)\n- Benefits\n  - ![](/assets/images/2022-05-04-16-59-07.png)\n- We all do threat modeling, we just don't think about it\n- Security feedback loop\n  - ![](/assets/images/2022-05-04-17-00-36.png)\n- Threat modeleing in SDL\n  - ![](/assets/images/2022-05-04-17-00-54.png)\n- Process\n  - ![](/assets/images/2022-05-04-17-01-24.png)\n- A \"good\" threat model\n  - ![](/assets/images/2022-05-04-17-01-47.png)\n  - ![](/assets/images/2022-05-04-17-02-04.png)\n- Tools\n  - ![](/assets/images/2022-05-04-17-02-33.png)\n- Key Takeaways\n  1. Threat modeling is an approach for analyzing the design of a feature, application, or product, and eliminating potential security flaws.\n  2. Engineers and testers need threat modeling to improve product security, and threat modeling is a skill they already have.\n  3. The benefits of threat modeling are building security in, identifying security problems early, and encouraging the security mindset.\n  4. The threat modeling process includes scope, draw, analyze, mitigate, and document.\n\n--- \n\n## Module 29: Threat Modeling Process\n- Why care?\n  - ![](/assets/images/2022-05-04-17-55-29.png)\n- 4 questions to ask\n  - ![](/assets/images/2022-05-04-17-55-46.png)\n- The process\n  - ![](/assets/images/2022-05-04-17-56-18.png)\n  - Focus at the Feature/Module level to begin\n- Attack Surface Analysis\n  - ![](/assets/images/2022-05-04-17-57-49.png)\n- Step 2: Draw a Data Flow Diagram (DFD)\n  - ![](/assets/images/2022-05-04-17-58-32.png)\n  - ![](/assets/images/2022-05-04-17-59-07.png)\n- Step 3: Analyze the DFD\n  - ![](/assets/images/2022-05-04-17-59-34.png)\n  - STRIDE\n  - Threat prioritization\n    - ![](/assets/images/2022-05-04-18-01-09.png)\n- Step 4: Mitigate\n  - ![](/assets/images/2022-05-04-18-01-27.png)\n- Step 5: Document\n  - ![](/assets/images/2022-05-04-18-03-05.png)\n- Key Takeaways\n  1. The four questions of threat modeling are “what are we building”, “what can go wrong”, “what are we going to do about that”, and “did we do a good enough job”.\n  2. The threat modeling process is light weight, including:\n     1. ▶ Step 1: Scope\n     2. ▶ Step 2: Draw\n     3. ▶ Step 3: Analyze\n     4. ▶ Step 4: Mitigate\n     5. ▶ Step 5: Document\n  3. Use STRIDE to enumerate threats in a DFD and apply compensating controls to mitigate threats.\n\n--- \n\n## Module 30: Threat Modeling Examples\n- Why care?\n  - ![](/assets/images/2022-05-04-18-07-26.png)\n- Never use telnet for anything\n- Insecure example with telnet\n  - ![](/assets/images/2022-05-04-18-07-57.png)\n  - STRIDE\n    - ![](/assets/images/2022-05-04-18-08-09.png)\n  - Threats\n    - ![](/assets/images/2022-05-04-18-08-21.png)\n  - Mitigations\n    - ![](/assets/images/2022-05-04-18-08-49.png)\n  - A web app\n    - ![](/assets/images/2022-05-04-18-09-27.png)\n  - Client-side JS\n    - ![](/assets/images/2022-05-04-18-09-38.png)\n  - STRIDE\n    - ![](/assets/images/2022-05-04-18-10-12.png)\n    - User could disable JS on their side\n    - Mitigate: perform auth on the server-side; move trust boundary\n  - Library Web app: authentication\n    - ![](/assets/images/2022-05-04-18-11-08.png)\n    - STRIDE\n      - ![](/assets/images/2022-05-04-18-11-19.png)\n    - Threats\n      - ![](/assets/images/2022-05-04-18-11-35.png)\n    - Mitigations\n      - ![](/assets/images/2022-05-04-18-12-14.png)\n- Key Takeaways\n  1. Threat modeling examples provide you a working demonstration of how to implement the threat modeling process.\n  2. The data flow diagram for the telnet, client-side, and library threat models is the collection point for how a feature or application works.\n  3. STRIDE is applied to the data flow diagram as a starting point for the threats that exist.\n  4. Documented threats require mitigations; mitigations are the changes to the design that improve security.\n\n---\n\n## Module 31: Static Application Security Testing (SAST)\n- ![](/assets/images/2022-05-04-18-25-48.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-18-25-55.png)\n- Focus\n  - ![](/assets/images/2022-05-04-18-26-09.png)\n- Benefits\n  - ![](/assets/images/2022-05-04-18-27-10.png)\n- False positives and negatives\n  - ![](/assets/images/2022-05-04-18-27-29.png)\n  - No tools are perfect!\n- Traits\n  - ![](/assets/images/2022-05-04-18-27-45.png)\n  - Whitebox, access to source code\n- How SAST works\n  - ![](/assets/images/2022-05-04-18-31-08.png)\n- Classes of SAST findings\n  - ![](/assets/images/2022-05-04-18-31-53.png)\n- Use cases\n  - ![](/assets/images/2022-05-04-18-32-06.png)\n- Developer workflow\n  - ![](/assets/images/2022-05-04-18-32-20.png)\n- SAST offerings\n  - ![](/assets/images/2022-05-04-18-32-38.png)\n- Key Takeaways\n  1. No single tool provides an application security silver bullet; choose a suite of tools that best meets your needs.\n  2. SAST is static application security testing; a set of technologies that analyze application source code, byte code for security vulnerabilities.\n  3. The use cases for SAST are One off, Nightly, CI/CD and Desktop / IDE integrated\n  4. The SAST workflow for a developer includes Scan, Triage, Fix and Document.\n  5. There are multiple options in the open source and commercial space for SAST tools.\n\n---\n\n## Module 32: Dynamic Application Security Testing\n- ![](/assets/images/2022-05-04-18-37-33.png)\n- Fuzzing\n  - ![](/assets/images/2022-05-04-18-37-41.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-18-37-49.png)\n- Focus of DAST\n  - ![](/assets/images/2022-05-04-18-38-26.png)\n- Focus of fuzzing\n  - ![](/assets/images/2022-05-04-18-38-48.png)\n- DAST and SDL\n  - ![](/assets/images/2022-05-04-18-39-05.png)\n- Benefits\n  - ![](/assets/images/2022-05-04-18-39-17.png)\n- Traits\n  - ![](/assets/images/2022-05-04-18-39-31.png)\n- How DAST works\n  - ![](/assets/images/2022-05-04-18-39-52.png)\n- Classes of DAST findings\n  - ![](/assets/images/2022-05-04-18-41-16.png)\n- Classes of fuzz findings\n  - ![](/assets/images/2022-05-04-18-41-32.png)\n- Use cases\n  - ![](/assets/images/2022-05-04-18-41-46.png)\n- Developer workflow\n  - ![](/assets/images/2022-05-04-18-42-02.png)\n- DAST offerings\n  - ![](/assets/images/2022-05-04-18-42-19.png)\n- Fuzzing offerings\n  - ![](/assets/images/2022-05-04-18-42-35.png)\n- Key Takeaways\n  1. No single tool provides an application security silver bullet; choose a suite of tools that best meets your needs.\n  2. DAST is dynamic application security testing; a set of technologies that detect security vulnerabilities in an application in its running state.\n  3. Fuzzing is an automated software testing technique that involves providing invalid, unexpected, or random data as inputs.\n  4. The use cases for DAST/Fuzz are One off, Nightly, and CI/CD.\n  5. The DAST/Fuzz workflow for a developer is Define, Execute, Triage, Remediate, and Rescan.\n  6. There are multiple options in the open source and commercial space for DAST/Fuzz tools.\n\n---\n\n## Module 33: Next Gen AppSec Tools\n- ![](/assets/images/2022-05-04-19-19-03.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-19-18-52.png)\n- IAST\n  - ![](/assets/images/2022-05-04-19-19-34.png)\n  - Focus\n    - Web apps\n  - Agent that runs in app\n    - ![](/assets/images/2022-05-04-19-20-06.png)\n- RASP\n  - ![](/assets/images/2022-05-04-19-20-21.png)\n  - Focus\n    - ![](/assets/images/2022-05-04-19-20-37.png)\n  - ![](/assets/images/2022-05-04-19-20-48.png)\n    - Can block attacks and deny\n- Next gen and SDL\n  - ![](/assets/images/2022-05-04-19-21-03.png)\n- SCA\n  - ![](/assets/images/2022-05-04-19-21-42.png)\n  - Focus\n    - ![](/assets/images/2022-05-04-19-21-53.png)\n  - ![](/assets/images/2022-05-04-19-22-01.png)\n- CWPP\n  - ![](/assets/images/2022-05-04-19-22-46.png)\n  - Focus\n    - ![](/assets/images/2022-05-04-19-22-57.png)\n  - ![](/assets/images/2022-05-04-19-23-06.png)\n- Next Gen and SDL\n  - ![](/assets/images/2022-05-04-19-23-44.png)\n- IAST & RASP offerings\n  - ![](/assets/images/2022-05-04-19-24-12.png)\n- SCA & CWPP\n  - ![](/assets/images/2022-05-04-19-24-34.png)\n- Key Takeaways\n  1. IAST is interactive application security testing, and is used to discover vulnerabilities from the inside of the application in test.\n  2. RASP is runtime application self protection, and is used to detect and block vulnerabilities from the inside of the application in production.\n  3. SCA is software composition analysis, and is used to detect known vulnerable components so they can be upgraded or replaced. CWPP is a set of technologies that secure virtual machines, containers and serverless workloads in public and private clouds. The next generation of AppSec tools provide new capabilities, and should be examined for inclusion in your program.\n\n---\n\n## Module 34: Vulnerability Scanning\n- ![](/assets/images/2022-05-04-19-31-11.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-19-31-25.png)\n- Focus\n  - ![](/assets/images/2022-05-04-19-31-37.png)\n- In the SDL\n  - ![](/assets/images/2022-05-04-19-31-53.png)\n- Benefits\n  - ![](/assets/images/2022-05-04-19-33-58.png)\n- Traits\n  - ![](/assets/images/2022-05-04-19-35-21.png)\n  - A credentialed vulnerability scan means you tell the vulnerability scanner how you log in to the system. By giving it an actual username and password that works, when it does the scan, it not only looks at the system from the outside, it logs into the system and scans it from the inside to see if there are any problems.\n- Process\n  - ![](/assets/images/2022-05-04-19-36-05.png)\n- How scanning works\n  - ![](/assets/images/2022-05-04-19-38-10.png)\n- Classes of findings\n  - ![](/assets/images/2022-05-04-19-38-31.png)\n- Workflow\n  - ![](/assets/images/2022-05-04-19-39-38.png)\n- Offerings\n  - ![](/assets/images/2022-05-04-19-39-49.png)\n- Key Takeaways\n  1. No single tool provides an application security silver bullet; choose a suite of tools that best meets your needs.\n  2. Vulnerability scanning is a comprehensive evaluation of a system for exposed vulnerabilities without their direct exploitation.\n  3. A vulnerability scanner checks if the remote host is alive, and then performs firewall detection, TCP / UDP Port Scan, OS Detection, TCP / UDP Service Discovery, and finally Vulnerability assessment.\n  4. Vulnerability scans are performed as one-offs, against nightly builds, and integrated into CI/CD.\n  5. A developer uses a vulnerability scanner by scan definition, execution, report, triage, remediate of issues, and rescan.\n\n---\n\n## Module 35: Pen Testing & Bug Bounty\n- Pen Testing\n  - ![](/assets/images/2022-05-04-19-51-28.png)\n- Bug bounty\n  - ![](/assets/images/2022-05-04-19-51-38.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-19-51-54.png)\n- Focus\n  - ![](/assets/images/2022-05-04-19-52-11.png)\n- In the SDL\n  - ![](/assets/images/2022-05-04-19-53-05.png)\n- Benefits\n  - ![](/assets/images/2022-05-04-19-53-20.png)\n- How pen testing work\n  - ![](/assets/images/2022-05-04-19-53-42.png)\n  - Documentation is very important\n- Process\n  - ![](/assets/images/2022-05-04-19-54-53.png)\n- How to choose a pen testing company\n  - ![](/assets/images/2022-05-04-19-55-50.png)\n- How bug bounty works\n  - ![](/assets/images/2022-05-04-19-56-11.png)\n- Basics of bug bounty\n  - ![](/assets/images/2022-05-04-19-56-56.png)\n- Process\n  - ![](/assets/images/2022-05-04-19-57-30.png)\n- Offerings\n  - ![](/assets/images/2022-05-04-19-57-47.png)\n- Key Takeaways\n  1. Penetration testing is an authorized simulated attack on a computer system, performed to evaluate the security of the system.\n  2. Bug bounty is a crowdsourcing initiative that rewards individuals for discovering and reporting software bugs.\n  3. The benefits of pen testing and bug bounty are they find missed vulnerabilities, test internal response, and augment internal efforts with outside experts.\n  4. The pen testing process includes evaluate and choose a partner, scope and goal setting, discovery, exploitation, and documentation.\n  5. The bug bounty process includes establish goals, set scope, engage participants, review and prioritize submissions, pay for results, and fix.\n\n--- \n\n## Module 36: Secure Code Review, Part 1\n- ![](/assets/images/2022-05-04-20-02-03.png)\n- Why care?\n  - ![](/assets/images/2022-05-04-20-02-22.png)\n- Purpose\n  - ![](/assets/images/2022-05-04-20-03-00.png)\n- Process\n  - ![](/assets/images/2022-05-04-20-03-16.png)\n- Checklist\n  - ![](/assets/images/2022-05-04-20-03-52.png)\n  - It's important to remember the question we're asking here is what you, as a developer, need to ask of the code you're reviewing at the moment. Take the question, and then look at the code and say, \"How do I answer that question?\" If you find enough evidence that the question is true, and there are ways to achieve it, you're good; it's not a finding.\n- ![](/assets/images/2022-05-04-20-05-51.png)\n- ![](/assets/images/2022-05-04-20-05-57.png)\n- ![](/assets/images/2022-05-04-20-06-04.png)\n- ![](/assets/images/2022-05-04-20-06-10.png)\n- Key Takeaways\n  1. Secure code review is an examination of source code intended to find mistakes overlooked in development, improving the overall quality of software.\n  2. The purpose of a secure code review is to refactor, detect and fix errors, and expose vulnerabilities.\n  3. The process for performing secure code review includes analyze, review, triage, remediate, review again, and close.\n  4. Ask security questions each time you review code; consider input validation, server side validation, output encoding, and default/hard coded credentials.\n\n---\n\n## Module 37: Secure Code Review Part 2\n- Why care?\n  - ![](/assets/images/2022-05-04-20-14-06.png)\n  - Secure code review is all about discovering potential vulnerabilities in the code we write. There will be problems with security in the code we write, the code we review. We go through this process to try to eliminate those as early as possible.\n\nWe're setting up the process for outlining a blueprint of the types of questions you need to be asking about the code that you're reviewing for security purposes. As a developer, ask these questions about your code. Does my code do this? If it doesn't, then there's a problem.\n\n\nAre all SQL queries parameterized?\n\nI'm looking at a particular snippet of code; it's making a database call, and I need to examine that code to conclude if they are using parameters in that SQL query. Are they using string concatenation? If I see string concatenation, that means there's potential for SQL injection, and then that's a high priority finding.\n\n\nWe have a series of questions related to user management and authentication. Question number one, is authentication implemented in a central way that applies to all pages?\n\nI'm looking at a snippet of code, and I'm looking to determine if authentication is being performed. Is it being done in a centralized way? The reason I'm looking for that is if authentication is being implemented differently for different parts of an application, then that tells me I need to take a closer look at how they're doing each of those individual ways. There could very easily be problems in the first one and no problems in the second one. We're calling for a standard approach because then you have one implementation, then I can spend a lot of time reviewing the code for that one implementation, and know that it's used across the entire application.\n\nA second question related to user management and authentication is, what functionality can be accessed without authentication?\n\nAs I'm looking at this piece of code, I'm looking to see if it requires authentication. If it requires authentication and doesn't, that's a big deal; we want to get that fixed. I'm trying to determine if authentication is needed for the piece of code I'm looking at.\n\nThe third question, are security checks placed before processing inputs?\n\nWe want to ensure we're doing input validation even on authentication data because an attack can be disguised as a legitimate input. We're looking at this code to determine if input validation is done first, and then authentication checks are being processed, or is it reversed? If they're making authentication decisions first, we want to ensure that input validation is applied earlier.\n\nOur final question related to this topic, if passwords are operated upon in this section of code, is a password complexity check enforced on the password?\n\nIf this application or product requires password complexity, it must be checked in the authentication routine. We want to look at that code to see if it is enforcing the complexity the way we expect it to according to our organizational policy.\n\n\nNow we come to session management. The first question we want to ask is, are sessions handled correctly and securely?\n\nWe're looking to see, first of all, does the application have sessions? Often, we get session management from whatever framework, whatever language we're relying upon, but not necessarily all the time. We have to ask that; it seems like a simple question. But we do have to say, is there an approach for sessions? Is it being done securely? Some of the flags that can be set for cookies we want to ensure are done. Those are the types of things we're doing when we do that overarching view of session management. If we find that some of those things are not being done, those will be findings.\n\nThe obvious next question, is session data validated?\n\nWe've seen lots of times where applications use sessions, but they never check them. They're going through all the trouble of creating a session ID value, and then that session ID gets sent back to the server, then they determine if it's valid or not. That's something I'm looking for when I'm looking at session management code.\n\nFinally, are sessions stored in a secure manner?\n\nThat's another piece we need to look at from a session management perspective. The session ID is very valuable, because if an attacker gets access to that session ID, they may get into the application. We want to see how those things are being stored on the server-side. If they're being stored on the client-side, we want to take a closer look to determine if they're being stored, should they be stored, or where they are being stored? And if they are, is it truly secure?\n\nWith session management, we're looking at how session sharing is done. How is the system going to relate to multiple users logging in at the same time? Or the same user logging in multiple times across different devices? We're looking to see if the application is passing session parameters and URLs, which is bad because they can get recorded at other places we don't intend. Are they using unencrypted session keys? Weak session IDs are a problem. We want to look at how they're generating their session IDs to say, if you have a session ID at one, then that tells me the next one's probably going to be two, which would be bad because I can guess the session ID you're using along the way.\n\n\nLet's move on to authorization. The first question is, are authorization checks granular (page and directory level)? And for all resources?\n\nThis gets back to the same issue we talked about with authentication. Is there a centralized approach to authorization? Is it being done granularly at the page, at the directory level? Is it being applied to all resources? We're coming back around to, is it central? If not, we need to look at all the schemes used for authorization throughout the code.\n\nThe next question is, is authorization based on clearly defined roles?\n\nI'm looking at the code; I'm looking to see if they're doing role checks and if it's being done predictably and consistently. Are there 17 different roles defined in this small block of 100 lines of code? If there are, that's probably an issue, and we probably need to reevaluate. Things might be working correctly, but there's probably a bigger challenge in how they've approached the architecture.\n\nNext, is there execution stopped/terminated after invalid requests, i.e., when the authentication/authorization check fails?\n\nWe're going through, and we're saying, \"what happens in this code block if authorization does fail?\" The determination is, \"Hey, you don't have access.\" We're tracing to ensure that there isn't some potential back door where somebody could drop through an authorization check and have access when they shouldn't have it.\n\nThe next question, are the checks correctly implemented?\n\nIn our block of code, when there's an authorization check, we're going to look at that piece of code to say, \"Hey, are they doing what we expected them to do?\" Are they checking against the policy? This is how we do authorization for our application and our product.\n\nOur final question related to authorization is, is the check applied on all the required files and folders?\n\nThis is an authorization from a file-level access perspective, something your application is controlling, whether one user can store files that only they have access to. We have to check the code to ensure there isn't some scenario where someone could access a file they're not supposed to.\n\n\nNext up is cryptography. Our first question is, is the password stored in an encrypted format? With authentication and cryptography working together, when we have passwords, we have to store them securely. We're looking to see how the application or product is storing the representation of the password. We're looking to confirm they're using a password hash, the proper salt, randomness, and the right algorithm to hash the stored passwords.\n\nWe want to ask the same question of database credentials, so are database credentials stored in an encrypted format? With this, it may mean we're looking at configuration files that are part of the application or product that we're doing the code review on. Because we're saying secure code review, that also means we can go into the configuration files. They're part of the code review process. We want to confirm that there are no database credentials stored in plain text anymore.\n\nNow we get to the movement of data. Is the data sent on encrypted channels? That's going to come out in the code. There's going to be code to send data, whether it's the result of a request coming into a web application or whether it's a product communicating with a client or another version of the product somewhere. Data will be sent; we're looking to see in the code if we're doing encryption on the information sent from point A to point B.\n\nWhen we get to PII and sensitive information, is that sent over the network in encrypted form? Whenever I look at a block of code, I'm always looking for personally identifiable information that could be in play, because if I see that, that means we have to be careful. We have to dial in and focus on this block of code because PII ultimately leads to data breaches if there are vulnerabilities in that code. It means we have to be more on guard when we see that type of data processed. The other thing is to verify the data is sent in an encrypted form.\n\nNext, we want to ask, are the application's cryptographic functions the most recent versions of the protocols? If you see DES encryption, which is ancient, if you see MD5 as a hash, that is a gigantic finding. That's the type of thing we want to answer with this question, are there old versions of protocols that need to get ripped out that are relied upon in this block of code?\n\nFinally, are plain text secrets stored in memory for extended periods of time? We're using passwords or keys in our systems. The question is, is this block of code using and storing that value and leaving it in memory? Or does it use it and then dispose of it, so that it doesn't even exist in memory? We can do a lot of really secure things, but if we leave the keys on the counter, and the house is unlocked---someone's going to drive off with your car.\n\n\nWe now come to logging and error handling. Are logs logging personal information, passwords, or other sensitive information? When I do a code review, I always look for how logging is performed. Then I start to scan all the created logs because a lot of times, as developers, we'll leave debug logs in for our benefit, and we don't always remember to delete them. When I'm looking at someone else's code, I'm always on guard to look for places where personal information is logged. Are there log statements that don't even need to be there anymore? I'm a firm believer in, keep it as simple as possible. If we don't need all these extra debug things there, let's take them out when we're done doing our debugging.\n\nNext, do audit logs log connection attempts, both successful and failures? I'm looking for the way the system application product relates to individual connections. Suppose the code is processing a connection request coming inbound. Is it properly auditing what's happening, both from a positive perspective when somebody was supposed to get in, and from a negative perspective, when someone wasn't supposed to get access?\n\nOur third and final question, is the password disclosed to the user or written to a file, logs, or console? With this one, we're paying attention to when we see a password. We want to check whether the password is never written out to the user directly in a plain text, unscrambled format. That could be an authentication page, where we want to make sure that there are stars, for example, in place of the password. We want to make sure there's never a case where we can give the user their password because it's stored in our system. If we ever see that in code, that is a gigantic finding. We never want to print out a password for somebody into their view. From a log file, console perspective, people will accidentally write a password as part of a log record. That's a big no-no, and if we see that, we need to get that fixed fast.\n\n\nWe've talked a little bit about configuration files, but the key question we want to ask about security configuration is, is there any sensitive data in configuration files? We mentioned earlier that configuration files are part of our code. In this step, you should be searching the configuration files for any sensitive information like passwords, database strings, or keys; things that you can see printed out that would be stored in the source code control system. When they're in the source code control system with sensitive information included, anybody who has access to that code will see the actual values, such as a password.\n\n\nRace conditions are where you have two threads trying to access the same variable or the same piece of data. They can get into some security challenges when it isn't predictable as far as which thread gets to update the piece of information, and if things aren't being done correctly. This can impact C and C++; it can also impact Java and C# if you get into the nitty-gritty details of dealing with threads. Most of the other languages will obstruct you away from that, which is a nice thing.\n\nThe second one I want to consider here is buffer overruns specific to the world of C and C++. Buffer overflows and buffer overruns result from not doing proper input validation when you take a piece of data from the user or the network. The guidance here is you want, in your C and C++ context, to be looking at where data is coming from and ensuring it's properly validated. Use routines in your program, which will not allow you to put too much data into a buffer, causing the buffer overrun.\n\nOne of the interesting takeaways from the secure code review modules is just how much there is to remember, which could feel intimidating. That's why we created the checklist. If any of these questions are not asked and answered securely, it introduces vulnerabilities. The checklist is the solution to this problem because, as a developer, you don't want to remember all of these things, but you should understand what they are. I want the checklist to go through and ensure that I connect with each of them, check it off, and make sure there isn't an actual problem in the code I'm reviewing.\n\nKey Takeaways\nAsk security questions each time you review code.\nConsider: parameterized SQL queries, user management and authentication, session management, authorization, cryptography, logging/error handling, and security configuration.","n":0.011}}},{"i":4,"$":{"0":{"v":"White Belt","n":0.707},"1":{"v":"\n---\n---\n#### All images are owned by Security Journey\n- This is strictly to capture my notes\n---\n---\n# Module 1: Intro\n- Security level\n    - recognition of an achievement\n- Showing how to use the Dojo\n- 20-30 questions per Assessment\n- Experiments are available, live-code editor\n- __Tip 1:__ Embrace the game elements of the platform, have fun with it\n- __Tip 2:__ Create a plan that works for you\n- __Tip 3:__ Remember, security is a journey, not a destination, you never learn everything\n\n# Module 2: Intro to Security\n- Connected world, simple software error could lead to loss in lots of money\n- coveted assets and clients data need to be protected\n\n- People, Process, Tools\n    - All neccessary to be secure\n- Attackers\n    - There are many different types\n- Finding, fixing and preventing security problems\n\n- Threat - possible danger that might breach security, could become a risk\n- Risk\n- Attack surface\n    - All the different interfaces that an attacker can approach \n\n- Builder\n    - Developer building something\n- Breaker\n    - People who are trying to break into something\n- Defender\n    - People looking to overall secure something\n\n- Need to have Shared Responsibility, security awareness\n\n# Module 3: Core Security Concepts\n![](/assets/images/2022-02-08-13-48-13.png)\n\n# Module 4: Attacks\n\n### Anatomy of an Attack\n![](/assets/images/2022-02-22-10-00-23.png)\n\n- Attackers will take measures to clean up and cover their tracks\n\n### Types of attacks\n![](/assets/images/2022-02-22-10-02-27.png)\n- Buffer overflow = privileged access \n- (Distributed) Denial of Service = getting system offline\n    - Typically only takes a single packet and can be repeated\n    - DDoS, a more coordinated attack, floods the network\n- Social Engineer\n    - Human-based attack, tricking people with stories\n    ![](/assets/images/2022-02-22-10-16-55.png)\n\n### Results of Attacks\n- System or App compromised\n- Data breach\n    - Customer and user info can be shared to people that have no right to see it\n- Malware and ransomware\n\n# Module 5: Adversaries\n- Knowing about the adversaries helps us defend against them\n![](/assets/images/2022-02-22-10-31-31.png)\n\n### Motivations\n- Financial gain\n- Espionage\n    - Could be theft of intellectual property\n- Fun\n- Grudge\n\n### Cybercrime Revenues\n![](/assets/images/2022-02-22-10-36-28.png)\n\n### Depths of Internet\n- Surface net\n- Deep net\n    - Not search engine accessbile\n- Dark net\n    - No search engine, usually need special applications to access\n    - Typically illicit activity\n### Cost of Dark Net on Data\n- Data is worth a loooooot!\n![](/assets/images/2022-02-22-10-39-26.png)\n\n### Advanced Persistent Threat (APT)\n![](/assets/images/2022-02-22-10-40-31.png)\n- Typically funded by governments\n- Target specific econ sectors\n- Use public and non-public malware\n- Specific attack vectors\n    - Helps to figure out where they are coming from \n\n### Why care?\n- Helps keep us protected\n\n# Module 6: Data Breaches\n### Why care?\n- If a company's data has been breached it will make headlines and make this known to many people\n    - People can look for this\n    - Make's companies look bad too\n### Business impact\n![](/assets/images/2022-02-22-10-47-16.png)\n\n### Common \"story\" of a data breach\n- Attacker researches target\n- Attacks\n- Exfiltration\n\n### Data breaches average cost\n![](/assets/images/2022-02-22-10-49-09.png)\n- The longer it goes undetected, the more time a malicious person has\n\n### Verizon DBIR\n![](/assets/images/2022-02-22-10-50-00.png)\n\n### Learning - Case Studies\n- On average there are 2000 data breaches a year\n#### Equifax\n- Lack of patching\n- Lateral movement\n- Exfiltration\n- Lack of disclosure\n    - The company waited waaaay too long to share with public\n- Lessons learned\n![](/assets/images/2022-02-22-10-54-30.png)\n#### PDL/OxyData\n- These companies scrape data from internet and put into one location\n- 1.2 billion people\n- Elastic search server was publicly available\n- Lessons learned\n![](/assets/images/2022-02-22-10-56-53.png)\n- Still don't know who's behind this\n#### Marriot\n- Scope - 383 million people\n- After acquiring a reservation system, there was a vulnerability in that system\n![](/assets/images/2022-02-22-10-59-18.png)\n\n> Patching should be done regularly, especially after a vulnerability has been announced in a third-party application or platform you use.\n\n# Module 7: Security Business Case\n\n### Why care?\n- Customers trust you with their data with the expecation that you'll protect their data!\n\n### Customer Mindset\n![](/assets/images/2022-02-22-11-13-25.png)\n- 81% of people would stop using a company after a breach\n- 55% would be turned off of a company if their personal data was shared without their permission\n    - What amount of info is actually pertinent\n\n### Shifting left and shifting right\n- Security should really be a part of the SDLC (Shift left)\n- Being more reactive (Shift right) vs. proactive (Shift left)\n![](/assets/images/2022-02-22-11-16-28.png)\n\n### Security excuses\n- **Excuse:** Resources are tight\n    - More resources will be req. later if not fixed\n- **Excuse:** Need to ship product\n    - Product needs to be shipped securely!\n- **Excuse:** Competitive pressure\n    - Differenitated from competitors when it's secure\n- **Excuse:** Methodology does not support security\n    - It needs to be a part of every step of the process\n\n### Value model for security\n- Keep business available for daily operations\n![](/assets/images/2022-02-22-11-20-06.png)\n\n![](/assets/images/2022-02-22-11-20-45.png)\n\n# Module 8: Security Myths\n\n### Why care?\n- Myths are a misdirection of facts, many will argue against security by claiming these myths are truth\n\n**Myth** | **Real**\n---|---\nSecurity is someone else's problem | Security is *everyone's* problem\nNobody would want to attack us | Many will attack you\nSecurity is too expensive | Your customers are worth the investment in security\nNo one would ever do that | Attackers will do something you did NOT expect\nOnly critical apps require security | All apps need security\nCompliance = Security | Compliance DOES NOT EQUAL security\nA single incidient does *little* damage | 1 incident can ruin a customer relationship\nThe firewall/WAF will protect | The app needs to **protect itself**\nTLS = secure | TLS only protects confidentiality and integrity\nSecurity through obscurity (hiding something) | There is NO security through obscurity\nTools solve security | Tools are not the end all be all\nPen testing or scanning solves all woes | Testing is necessary, but you cannot hack yourself secure\n\n- Your customers' data is valuable!!!!!\n- It is 100% worth to protect it!\n- Attackers will go for the weaker link\n- Public facing (on Internet) require protection\n- People, process AND tools need to **work together**\n- When problems are IDd they need to be fixed\n- How are we approaching security as people and our culture\n\n# Module 9: Threat Landscape\n### Why Care?\n- There are new threats, people and products every day and it's expanding all the time\n\n### Internet of Things\n- These don't have the best security because they're newer\n\n### Cloud\n- Who *owns* the data, the company, you???\n\n### Mobile\n- Because there are soooo many people that have them, they are not as tech savy\n\n### Newer Internet security threats\n- Crypto jacking\n- Supply chain attacks\n    - Modify new libraries, people can get into the system and place malware\n- Hardware attacks; meltdown and spectre\n\n### Weak or poorly crypotography\n- Weak\n    - Data can be copied and then decrypted\n- Unencrypted\n\n### Week authentication\n- No enforcements of password length or strength\n- Failure to enforce account lockouts\n- Lack of cryptography in transit protecting auth data\n- Weak password hash storage\n    - Keeping in DB, could be in plain text\n\n### Data breach\n- Accidental disclosure\n    - Accidentally sending an email \n- Improper access control\n- Web app attacks\n\n### APIs\n![](/assets/images/2022-02-23-15-06-11.png)\n\n### Threats to IoT\n![](/assets/images/2022-02-23-15-08-26.png)\n\n### Threats to Cloud\n![](/assets/images/2022-02-23-15-10-21.png)\n\n### Threats to Mobile\n![](/assets/images/2022-02-23-15-11-39.png)\n\n### Defender's Dilemma\n- Attacker only needs to be right 1 time\n- Defenders need to be better than the attacker\n\n\n# Module 10: Software Supply Chain\n\n### Why care?\n- Open source and third-party software can contain known security vulnerabilities\n![](/assets/images/2022-02-23-15-21-26.png)\n![](/assets/images/2022-02-23-15-27-15.png)\n![](/assets/images/2022-02-23-15-27-38.png)\n\n![](/assets/images/2022-02-23-15-30-41.png)\n![](/assets/images/2022-02-23-15-31-07.png)\n\n# Module 11: Security Culture and Mindset\n### Why care?\n- There is a direct correlation between the strength of your security culture and the security of your apps and products\n- It impacts everyone\n    - Everyone needs to think like a Security Person and applies knowledge of security to their daily work\n### Security Plan\n![](/assets/images/2022-02-23-15-57-08.png)\n- A good starting point\n\n### Security Mindset\n![](/assets/images/2022-02-23-15-58-38.png)\n![](/assets/images/2022-02-23-16-01-46.png)\n![](/assets/images/2022-02-23-16-02-45.png)\n\n### Security Champion\n![](/assets/images/2022-02-23-16-04-47.png)\n\n# Module 12: Prioritizing Security\n### Why care?\n- Everyone needs to protect data!\n- Customers **demand** security!!!\n- Vulnerabilities continue to rise\n- Competitive advantage\n\n### Role Behaviors\n![](/assets/images/2022-02-23-16-13-24.png)\n- Threat modeling: figure out all potential problems that could happen. In the design phase\n![](/assets/images/2022-02-23-16-16-30.png)\n- All testers should have a basic understand of pen testing skills\n![](/assets/images/2022-02-23-16-19-19.png)\n![](/assets/images/2022-02-23-16-21-40.png)\n![](/assets/images/2022-02-23-16-23-01.png)\n\n# Module 13: Translating Security\n### Why care?\n- Business and security teams appear to have different priorities and don't always speak the same language \n### Languages\n![](/assets/images/2022-02-23-16-29-49.png)\n![](/assets/images/2022-02-23-16-31-49.png)\n![](/assets/images/2022-02-23-16-34-47.png)\n\n# Module 14: Secured Development Lifecycle\n- Standardizes best secure practices\n### Why care?\n- Standardizes org's approach to product and application security\n ![](/assets/images/2022-02-28-10-44-29.png)\n- Will be more expensive in the short term \n\n![](/assets/images/2022-02-28-10-45-36.png)\n\n- SDL's across the industry are very simliar\n![](/assets/images/2022-02-28-10-47-11.png)\n![](/assets/images/2022-02-28-10-47-39.png)\n![](/assets/images/2022-02-28-10-49-15.png)\n- Threat modeling - Part of the design process\n![](/assets/images/2022-02-28-10-57-44.png)\n![](/assets/images/2022-02-28-10-58-59.png)\n![](/assets/images/2022-02-28-11-02-43.png)\n![](/assets/images/2022-02-28-11-03-45.png)\n\n# Module 15: Privacy and Customer Data Protection\n### Why care?\n- Customers will go elsewhere if there's a breach\n\n### Privacy vs. Security\n- **Security**\n: Safeguarding of data\n- **Privacy**\n: Safeguarding of user identity\n    - Shutting the blinds of a house\n\n### Personally Identifiable Information\n- PII\n![](/assets/images/2022-02-28-11-16-16.png)\n### Personal Health Information\n- PII can be in PHI\n- Medical History\n- Lab results\n- Insurance information\n\n### Risks of losing PII and PHI\n![](/assets/images/2022-02-28-11-17-12.png)\n\n### Three states of digital data\n- In-Use\n    - Actively being accessed\n    - Is ready to be accessed in memory\n- In transit\n    - Moving from one system to another\n- At rest\n    - Not currently being used, maybe a backup, database\n\n### Customer Data\n- Can be stored anywhere\n    - Databases\n    - Cloud\n    - Log files\n    - Backups\n\n### Privacy legislation: GDPR and CCPA\n- These are the 2 dominant laws to protect us\n- **GDPR**\n: Founded by the European Union, gives you the right to correct *inaccurate* data that you save, requires *explicit* consent\n- **CCPA**\n: Founded in California, requires a privacy notice on a site\n- Both of them give the right to:\n    - Access\n    - Delete\n    - Opt-out\n    - Be forgotten\n### Privacy legislation: COPPA and HIPPA\n- **COPPA**\n: Protecting the youth, 13 and under, protects them and their privacy, parents consent\n- **HIPPA**\n: Protects PHI\n\n### Privacy by design\n![](/assets/images/2022-02-28-11-29-03.png)\n- Being proactive\n\n### Tips to protect privacy and customer data\n- Minimize use, if it's not needed, then don't collect it\n![](/assets/images/2022-02-28-11-30-32.png)\n\n# Module 16: Dealing with Vulnerabilities\n### Why care?\n- Need to have a process in place to clean up\n\n### Product Security Incident Response Team\n- Receives report vulnerabilities\n- Investigates them\n- Passes them off to developers\n- Shares their disposition on them\n\n### The need for standardized response\n- Needed because new vulnerabilites come out every day\n- Helps quickly mitigate issues and share that with customers\n![](/assets/images/2022-02-28-11-39-29.png)\n![](/assets/images/2022-02-28-11-40-25.png)\n\n### Vulnerability researchers\n![](/assets/images/2022-02-28-11-41-32.png)\n\n### Responsible disclosure\n- Responsible disclosure\n: when all stakeholders agree on a timebox to fix/patch a vulnerability before sharing the details to the public\n- Give the vendors the time to remediate vulnerabilities\n\n### PSIRT Process\n![](/assets/images/2022-02-28-11-46-19.png)\n![](/assets/images/2022-02-28-11-46-36.png)\n![](/assets/images/2022-02-28-11-47-52.png)\n- CVSS - Common Vulnerability Scoring System\n\n![](/assets/images/2022-02-28-11-49-31.png)\n![](/assets/images/2022-02-28-11-50-46.png)\n![](/assets/images/2022-02-28-11-51-30.png)\n\n### How to have success with a response\n![](/assets/images/2022-02-28-11-52-51.png)\n\n# Module 17: Knowledge Sources\n### Why care?\n-  The basic building blocks of security knowledge are accessilbe and seamlessly integrate into the life of the security person\n\n### Common Weakness Enumeration\n![](/assets/images/2022-02-28-15-35-15.png)\n### CAPEC\n![](/assets/images/2022-02-28-15-37-40.png)\n- Explains to folks how an attack can happen\n### ATT&CK\n![](/assets/images/2022-02-28-15-40-45.png)\n### National Vulnerability Database\n![](/assets/images/2022-02-28-15-42-24.png)\n### Interconnection of Security Resources\n![](/assets/images/2022-02-28-15-43-22.png)\n### OWASP\n![](/assets/images/2022-02-28-15-45-20.png)\n![](/assets/images/2022-02-28-15-45-59.png)\n\n### National Institute of Standards and Technology\n- Provides a catalog of standards and controls to use within security\n- It's beneficial to programs that need to kick off their guidance, standards and policies\n\n\n# Module 18: OWASP Universe\n### Why care?\n- it's THE open source resources for awareness docs, process, measurement, tools, conferences, and local meet ups\n\n### Top Resources:\n- OWASP Top 10 - awareness document\n![](/assets/images/2022-02-28-16-01-26.png)\n- OWASP ProActive Controls - follow up to the Top 10\n![](/assets/images/2022-02-28-16-01-18.png)\n- OWASP Cheat Sheet Project\n![](/assets/images/2022-02-28-16-01-07.png)\n- Juice Shop - vulnerable web app to practice\n![](/assets/images/2022-02-28-16-00-54.png)\n- Software Assurance Maturity Model\n![](/assets/images/2022-02-28-16-00-46.png)\n- Application Security Verification Standard\n![](/assets/images/2022-02-28-16-01-54.png)\n    - Use as a guideline\n- Code Review Guide\n![](/assets/images/2022-02-28-16-03-04.png)\n- Web Security Testing Guide\n![](/assets/images/2022-02-28-16-03-28.png)\n    - Aimed at testers\n- ModSecurity Core Rule Set\n![](/assets/images/2022-02-28-16-04-27.png)\n- Dependency Check\n![](/assets/images/2022-02-28-16-04-48.png)\n- ZAP\n![](/assets/images/2022-02-28-16-05-02.png)\n- Threat Dragon\n![](/assets/images/2022-02-28-16-05-38.png)\n- Helps diagram threat modeling\n\n# Module 19: Security at Home\n![](/assets/images/2022-02-28-16-53-15.png)\n![](/assets/images/2022-02-28-16-54-27.png)\n![](/assets/images/2022-02-28-16-54-44.png)\n![](/assets/images/2022-02-28-16-58-59.png)\n![](/assets/images/2022-02-28-16-59-05.png)\n![](/assets/images/2022-02-28-16-59-14.png)\n![](/assets/images/2022-02-28-16-59-23.png)\n\n# Module 20: Threat Landscape Cloud\n### Why care?\n- Cloud is being used everywhere, there are unique security threats that come with it\n\n### Unique Security Issues\n![](/assets/images/2022-03-01-10-36-25.png)\n- Multi-tenancy - multiple customers sharing a piece of infrastructure, there may be an overlap in company data!!\n- Storages have been open to public access and they typically have customer lists on there\n- Less visibility because we cannot see the physical machines where they are hooked up\n\n### Threats to Cloud\n![](/assets/images/2022-03-01-10-39-34.png)\n![](/assets/images/2022-03-01-10-41-15.png)\n![](/assets/images/2022-03-01-10-42-25.png)\n![](/assets/images/2022-03-01-10-44-35.png)\n![](/assets/images/2022-03-01-10-46-50.png)\n![](/assets/images/2022-03-01-10-48-12.png)\n\n# Module 21: Trends and Application Security\n### Why care?\n- We need to stay ahead of the attackers and need to be aware of the trends\n![](/assets/images/2022-03-01-11-24-37.png)\n![](/assets/images/2022-03-01-11-25-53.png)\n\n### Trends\n![](/assets/images/2022-03-02-13-40-48.png)\n![](/assets/images/2022-03-02-13-40-57.png)\n![](/assets/images/2022-03-02-13-41-05.png)\n![](/assets/images/2022-03-02-13-41-15.png)\n- Linddun is a threat modeling methodology, focuses on privacy\n![](/assets/images/2022-03-02-13-41-39.png)\n\n### New tools or projects\n![](/assets/images/2022-03-02-13-57-34.png)\n- Semgrep - faster static code analysis than ever\n- OWASP pytm - threat modeling as code\n- API Security project - \n- OWASP SEDATED - source code repository scanner, finds passwords, API or keys\n","n":0.023}}},{"i":5,"$":{"0":{"v":"Pluralsight","n":1}}},{"i":6,"$":{"0":{"v":"Scrum","n":1}}},{"i":7,"$":{"0":{"v":"Serving in Agile Teams","n":0.5},"1":{"v":"\n- BDD does not have to automated\n- Pomodoro technique\n- ","n":0.333}}},{"i":8,"$":{"0":{"v":"Quality Management and Continuous Improvement in Project Environments","n":0.354},"1":{"v":"\n- Focus on value, quality and vvalue are inherently tied together\n- Recognize and address complexity\n  - Root cause analysis can be helpfull\n- Users need to know how to use the product and how to troubleshoot and how to get help needs to be communicated well too\n- Resilency is a quality metric too\n- Poor quality outcomes increase threats of project failure or underperformance\n- Be a good steward, it's a matter of care and respect for our customers and people\n- Tailor approach to context, quality aspirations should always be high\n- Seek to understand stakeholders\n  - Those that perceive themselves as important will also benefit\n  - Quality measured is up to the stakeholder perspective\n    - We will be judged based on the perceived quality for our customers. More productive, more adoption and adaptation\n- Commitment to quality must be exemplifed by project leaders\n- Foster accountability and respect\n  - Quality results earn respect and trust from clients, customers, and sponsors\n- Integrate quality into work\n  - Planning >>> Delivery\n\n### The quality mindset\n- ![The Quality Mindset](/assets/images/2022-07-11-16-03-55.png)\n- ![The Quality Mindset - further explained](/assets/images/2022-07-11-16-04-31.png)\n- ![Solution Fitness](/assets/images/2022-07-11-16-05-21.png)\n- ![Solution Fitness - Part 2](/assets/images/2022-07-11-16-06-24.png)\n\n### Quality Considerations\n\n#### Customer Satisfaction\n\n- What does the customer expect?\n- What does the customer need?\n- What agreements have been made?\n- Requirements should be\n  - Understood\n  - Evaluated\n  - Defined\n  - Managed\n\n#### Management Responsibility\n\n- Define quality criteria and guidelines prior to work taking place\n- Lead by example\n- Monitor quality of work and results\n- Coordinate necessary revisions to quality management\n\n#### Continuous Improvement\n\n- Plan-do-check-act cycle drives improvement efforts\n- Other methodologies too\n\n#### Prevention Over Inspection\n\n- Plan, design, and build quality into the entire project\n- Preventing mistakes is less costly\n\n\n#### Cost of Quality\n\n- Preventing issues\n- Assessing conformance\n- Internal and external failure\n- Rework of substandard results\n- Upfront costs can pay off in the long run\n![Customer-Driven](/assets/images/2022-07-11-16-28-13.png)\n![Detect & Correct](/assets/images/2022-07-11-16-29-09.png)\n![Assure Quality](/assets/images/2022-07-11-16-29-31.png)\n![Incorporate Quality](/assets/images/2022-07-11-16-29-53.png)\n![Foster Quality Culture](/assets/images/2022-07-11-16-30-14.png)\n\n### The Language of Quality Management\n\n#### Costs of Conformance  \n\n- Proactively focus on reducing failure  \n- Prevention costs\n- appraisal costs\n\n#### Costs of Non-formance\n\n- Repairs, rework, loss of functionality\n- Internal failure costs (project team)\n- External failure costs (Customers)\n\n#### Quality vs. Grade\n\n![Quality vs. Grade](/assets/images/2022-07-11-16-34-52.png)\n![Quality vs. Grade Matrix](/assets/images/2022-07-11-16-35-49.png)\n\n#### Precision vs. Accuracy\n\n- Precision\n  - How **exact** are the results\n- Accuracy\n  - How **correct** are the results\n\n![Precision vs. Accuracy Matrix](/assets/images/2022-07-11-16-41-20.png)\nDifferent projects have different needs, sometimes it might be okay to have low grade (less features) but high quality\n\n### Measuring and Analyzing Quality\n\n- What are our quality metrics?\n  - We need to think about this, we cannot do this retroactively\n\n![Measure and analyzing quality](/assets/images/2022-07-11-16-49-40.png)\n\n#### Sources of Quality Data\n\n- Checklists\n  - Ensures we're doing the right work and reviewing it\n  - Standardization\n  - Needs to be living and breathing\n  - Internal checklists may be useful to the customer, may become the operation manual or some other helpful reference\n  - \n- Sensors\n- Output\n- Feedback\n\n\n### Developing a Quality Management Strategy\n\n- We need to place Quality high up on our list of priorities\n\n### Continuous Improvement and Assessing Quality Challenges\n\n","n":0.046}}},{"i":9,"$":{"0":{"v":"Communicating Effectively in Project Environments","n":0.447},"1":{"v":"\n### Understanding Project Communication\n\n- Projects succeed with effective communication\n- Cultural barriers\n- Gaps in expertise\n- Differing perspectives\n- Conflicting interests\n\n### Communication Methods and Considerations\n\n- Be careful about spelling and grammar\n- Only use the words that you need to\n- Structure documents to help others understand it\n- Costs of Poor Communication Planning\n  - ![Costs of Poor Communication](/assets/images/2022-06-03-13-52-56.png)\n\n### Managing Project Communications\n\n- Review early and often the project\n- Communications Management Plan\n  - ![Communications Management Plan](/assets/images/2022-06-03-14-18-05.png)\n- Effective communications empower effective teams\n- Communication management ***is*** project management!\n- Understand the medium to communicate\n  - Email vs. Teams chat vs. in-person vs. PowerPoint vs. etc.\n    - Understand the \"weight\" behind all of them\n- Effective meetings\n  - ![em](/assets/images/2022-06-03-14-31-28.png)\n  - Have an agenda and a scope\n  - Make sure only the people that need to be there are there, no more and no less\n- Actively listen\n  - Acknowledge comms\n  - Ask clarifying questions\n  - Rephrase and state intent\n\n### Comunication Skills for Project Leaders  \n\n- Risk-related communication, prepare for the worst\n- Manage expecations, ensures alignment, bridge out any gaps\n- Need to persuade, convince key decision makers, explain the benefits\n- Understand any redlines that will hinder the success of the project\n- Eliminate conflicts early\n- Summarize and share the vision\n- Be prepared to explain to others\n  - What's been done\n  - The current state of things\n  - What's coming up in the project's future\n- Learn my communication style\n  - Stay consistent\n    - Shows confidence and competence\n    - Comforts the stakeholders\n  - Consider political dynamics\n    - Find how to meet stakeholders half way\n  - Uphold my values\n    - Credibility is built slowly and lost quickly\n    - Consider what to share and what NOT to share\n      - Don't over promise and under deliver\n  - Make sure your body language matches the message you're sending  \n- Practice [[Servant Leadership | servant-leadership]]\n  - Encourage conversation between team members\n  - Identify opportunities and overcome challenges\n  - Provide menorting to team members to help develop effective communication practices\n  - Honor transparency and respectfully frank dialog\n  - Moderate discussions to ensure they remain constructive and focused\n- Communication Factors to Monitor\n  - ![Communication Factors to Monitor](/assets/images/2022-06-03-16-48-59.png)\n","n":0.054}}},{"i":10,"$":{"0":{"v":"Collaboration and Self Management in Agile Environments","n":0.378},"1":{"v":"\n[[Collaboration & Self Management in Agile Environments|training.pluralsight.scrum.agile-transformation#collaboration--self-management-in-agile-environments]]","n":0.378}}},{"i":11,"$":{"0":{"v":"Training Scrum Agile-Transformation","n":0.577},"1":{"v":"\n- Change is the heart of every project\n- Agility is our ability to initiate and respond to change\n- When processes can help, we should embrace them\n  - When they get in our way, we should question them to determine if they serve as important guard rails or as roadblocks \n- Embrace and leverage change\n  - ![](/assets/images/2022-04-28-10-49-53.png)\n- Make corrections along the way\n  - ![](/assets/images/2022-04-28-10-50-33.png)\n- Value is vision made real\n  - ![](/assets/images/2022-04-28-10-54-13.png)\n> \"Real artists ship.\" - Steve Jobs\n\n- Be realistic and conversative in our approach to cadence delivery\n- ![](/assets/images/2022-04-28-11-05-55.png)\n- Maximize work not done\n- ![](/assets/images/2022-04-28-11-15-24.png)\n- ![](/assets/images/2022-04-28-11-17-50.png)\n  - Team members should feel safe to speak up when they think something is wrong\n- ![](/assets/images/2022-04-28-11-19-26.png)\n- Scrum Master\n  - ![](/assets/images/2022-04-28-13-34-50.png)\n  - Servant Leadership\n    - ![](/assets/images/2022-04-28-13-36-06.png)\n    - ![](/assets/images/2022-04-28-13-36-39.png)\n- Scrum Ceremonies\n  - ![](/assets/images/2022-04-28-13-39-36.png)\n- Kanban vs. Scrum\n  - ![](/assets/images/2022-04-28-13-40-20.png)\n- Estimation\n  - ![](/assets/images/2022-04-28-13-46-53.png)\n    - Planning Poker\n      - ![](/assets/images/2022-04-28-13-47-55.png)\n    - T-Shirt Sizing\n      - ![](/assets/images/2022-04-28-13-48-25.png)\n  - Backlog\n    - ![](/assets/images/2022-04-28-13-51-05.png) \n- Definition of Ready\n  - ![](/assets/images/2022-04-28-14-06-36.png)\n  - Be careful to not let the DoR become a phase gate, dependent upon and waiting for one thing to be finished before another can be begin\n  - Should outline best practices, **not hard and fast rules**\n  - Avoid definitions that prvent concurrent work\n    - ex. \"every new story _must_ include solution architecture documentation\"\n  - Definitions should encourage just enough detail to do the work, not exhaustive coverage\n  - Should NOT get in the way\n- INVEST model\n  - ![](/assets/images/2022-04-28-14-07-47.png)\n- Definition of Done\n  - aka \"releaseable\"\n  - ![](/assets/images/2022-04-28-14-13-49.png)\n- Acceptance Criteria\n  - ![](/assets/images/2022-04-28-14-14-33.png)\n- ![](/assets/images/2022-04-28-14-16-00.png)\n- The Sprint Backlog\n  - Is what's being done\n- Story Points\n  - ![](/assets/images/2022-04-28-14-20-28.png)\n  - Using velocity as a metric of the team's success is a **poor practice**\n  - In fibonaci sequence, each # is roughly 60% greater than the previous number\n- Scope\n  - ![](/assets/images/2022-04-28-14-22-19.png)\n  - Negotiate what needs to change and ask why\n- Timeboxing\n  - ![](/assets/images/2022-04-28-14-26-20.png)\n- Scrum Ceremonies\n  - Daily Scrum\n    - ![](/assets/images/2022-04-28-14-27-57.png)\n    - ![](/assets/images/2022-04-28-14-28-34.png)\n    - Ideally first thing in the morning\n    - 3 questions:\n      - What did you do?\n      - What are you doing?\n      - What's blocking you?\n      - ![](/assets/images/2022-04-28-14-30-11.png)\n  - Sprint Planning\n    - ![](/assets/images/2022-04-28-14-31-51.png)\n    - ![](/assets/images/2022-04-28-14-32-21.png)\n    - ![](/assets/images/2022-04-28-14-32-57.png)\n    - Anti-patterns\n      - ![](/assets/images/2022-04-28-14-33-48.png)\n  - Sprint Review\n    - Could be seen as a demo\n    - ![](/assets/images/2022-04-28-14-34-21.png)\n    - ![](/assets/images/2022-04-28-14-35-13.png)\n    - Inspect and adapt\n      - ![](/assets/images/2022-04-28-14-36-06.png)\n    - Anti-patterns\n      - ![](/assets/images/2022-04-28-14-36-33.png)\n  - Sprint Retros\n    - ![](/assets/images/2022-04-28-14-37-25.png)\n    - ![](/assets/images/2022-04-28-14-37-59.png)\n## Collaboration & Self Management in Agile Environments\n- ![](/assets/images/2022-04-28-14-57-24.png)\n- ![](/assets/images/2022-04-28-14-58-25.png)\n- ![](/assets/images/2022-04-28-14-58-42.png)\n- Teams need to be self-managed\n  - ![](/assets/images/2022-04-28-14-59-22.png)\n  - ![](/assets/images/2022-04-28-15-25-29.png)\n  - Trust is key\n  - Respect - the whole is greater than the individual, each member has something to contribute\n  - Transparency\n  - Shared authority\n- Effective Collaboration: Skills Required\n  - Influencing\n    - ![](/assets/images/2022-04-28-15-37-25.png)\n  - Conflict resolution\n    - ![](/assets/images/2022-04-28-15-38-47.png)\n    - ![](/assets/images/2022-04-28-15-39-10.png)\n  - Open-mindedness\n    - ![](/assets/images/2022-04-28-15-39-55.png)\n- Leveraging Agile Principles for Success\n  - ![](/assets/images/2022-04-28-15-45-17.png)\n- Leveraging Reviews and Retros\n  - ![](/assets/images/2022-04-28-15-47-38.png)\n- ![](/assets/images/2022-04-28-16-06-28.png)\n","n":0.047}}},{"i":12,"$":{"0":{"v":"Guaging Project Team Performance","n":0.5},"1":{"v":"\n### Setting Project Goals\n\n#### Applying Project Principles to Performance Management\n\n- Stay focused on Value\n- Recognize and address complexity\n- Enable and facilitate change\n- Exhibit adaptability and resilency\n- Address Opportunites and Threats\n- Be a good steward","n":0.171}}},{"i":13,"$":{"0":{"v":"Coordinating with Virtual Teams","n":0.5},"1":{"v":"\n### Course Overview\n\n![Biggest Struggle Working Remotely](/assets/images/2022-07-20-16-33-22.png)\n\n![Remote Work](/assets/images/2022-07-20-16-37-59.png)\n\n![Co-located Work](/assets/images/2022-07-20-16-39-48.png)\n\n### Working Virtually\n\n- Individuals should have the option to choose working remotely or not\n- Relationships matter virtually\n  - Build a healthy work environment\n  - Team bonding activities\n\n- Always Be Communicating  \n  - Provide feedback\n  - Manage conflicts\n    - Leads to better teams and trust\n  - Supporting mental health\n  - Take personal time into account and emphasize this\n  - Reward performance\n    - Measure performance where possible\n  - Build rapport and recognize efforts\n  - Build community and culture\n  - Have a separate space for **celebrations** and discussions\n- Remote excuses\n  - Don't attach performance to number of hours working\n  - There are many distractions at home\n  - Make the employee self responsible\n    - If there are distractions, it's ultimately their responsibility to limit them, but help them where possible\n  - Help the team understand that an immediate response is *not* always needed\n\n### Following an Ideal Work Process\n\n#### Employee Onboarding\n\n1. Pre-onboarding\n   1. Deal with docs and paperwork, DocuSign, etc.\n   2. Make them aware of company policies\n2. Orientation\n   1. Interactive and role-specific training\n   2. Create cohorts\n   3. Tech tools familiarize \n   4. Fun & swag\n   5. Official welcome\n3. First assignments\n   1. First small project, helps them get familiar with cross team collaboration, knowledge discovery and/or remote work ceremonies\n   2. Set goals and specify expectations\n4. Ongoing support\n   1. Feedback and follow-up\n\n- Emotional connection within team members is more difficult to emulate\n\n#### Strategically Partnering Team Members\n\n- Team formation\n- Take into account\n  - Time zone\n  - Culture\n  - Experience\n- Ask constantly\n  - Are the team members happy?\n  - Is the team productive?\n  - Do we need to reshuffle to help the team?\n\n#### Communication Process\n\n- Tech needs to be **friction free**\n- ![Remote Communication Channels](/assets/images/2022-07-20-17-08-33.png)\n- ![IM and PM Tools](/assets/images/2022-07-20-17-10-12.png)\n- ![KB and Email Tools](/assets/images/2022-07-20-17-10-30.png)\n- ![Phone Calls, Video Conferencing & Video Calls](/assets/images/2022-07-20-17-10-52.png)\n- Knowlegebase\n  - Identify company's single source of truth\n\n#### Team Meetings\n\n- Remote meetings\n  - Focused\n  - Structured\n  - Result-oriented\n- Use best tech\n- Have an agenda and share in advance\n- Keep difference in time zones in mind\n  - [ ] ! Check with Mel to see how we're doing\n- Invite only required folks\n- Keep members **engaged**\n- Follow up after a remote meeting\n  - Send communication\n\n#### Hosting a Team Kickoff\n\n- Make it fun\n- Give meaningful meeting title\n- Goal or Project Outline\n- Identify stakeholders & their roles\n- Risks, roadblocks, and past failures (opportunities)\n- Team bonding activities\n  - Donuts\n  - Icebreakers\n- Agenda, role, deliverables, next steps\n- Project kickoffs\n- Questions, poll audience\n- Communication plan\n- Next steps\n\n\n#### Team Building\n\n![Team Building Activities](/assets/images/2022-07-20-17-33-14.png)\n\n- Icebreaker\n  - Meant for newer folks\n- Virtual birthday celebrations\n- Online games\n- Informal chat\n- Online gorup based fitness or yoga classes\n- Online real-time lunch/coffee breaks\n- Online parties and meetups\n  - Movie nights\n- Team outing\n- Virtual water cooler\n  - Discuss anything other than work\n- Celebrate every team win and loss\n\n#### Goal Setting Framework OKR\n\n- Measure productivity by the outcome of the completion of goals\n- Objectives & Key Results (OKR)\n  - Structure goals for better results\n  - \"Should be simple enough for a 5th grader to understand\"\n  - ![OKR](/assets/images/2022-07-20-17-39-03.png)\n- Objectives - Long Term Goal\n  - ![Objectives](/assets/images/2022-07-20-17-40-03.png)\n- Key Results - Ways to Measure Your Objectives\n  - ![Key Results](/assets/images/2022-07-20-17-40-56.png)\n- ![OKR Benefits](/assets/images/2022-07-20-17-42-07.png)\n\n#### OKR Examples\n\n- Objective = Long Term Goal\n- Results = How Objective is measured\n- Numeric, trackable\n- ![OKR Example 1](/assets/images/2022-07-20-17-43-38.png)\n- ![OKR Example 2](/assets/images/2022-07-20-17-44-24.png)\n- [OKR Examples](okrexamples.co)\n- ![Summary of OKR's](/assets/images/2022-07-20-17-48-47.png)\n\n#### Decision Making 1\n\n- Decision making framework by Coinbase\n- ![Good and Bad Decision Making - 1](/assets/images/2022-07-20-17-50-31.png)\n- ![Good and Bad Decision Making - 2](/assets/images/2022-07-20-17-51-15.png)\n\n#### Decision Making 2\n\n- Coinbase Decision Making Framework\n- Set parameters\n  - What are we deciding\n  - When \n  - Who are our Decision Makers?\n  - Input Providers\n    - 3 - 8 individuals\n  - Affected parties?\n  - Type of decision\n    - Yes or no?\n    - Prioritization\n    - Choice\n  - Revisit date?\n    - Allow this to happen any time\n  - ![Coinbase Parameters Example](/assets/images/2022-07-20-17-54-11.png)\n\n- Deliberate\n  - Enumerate options\n  - Present data\n  - Voting round one (cold vote)\n  - Discussion of Pros and Cons\n  - Voting round two\n  - ![Coinbase Deliberate Example](/assets/images/2022-07-20-17-56-51.png)\n\n- Decide\n  - ![Coinbase Decide Example](/assets/images/2022-07-20-17-57-49.png)\n\n- When high risks need to be decided, then this framework should be considered\n\n#### Conflict Management\n\n- Issues can escalte more because communication is less personal and communication can be more rapid between the teams\n- !!! The Team derives energy from their leader!\n\n#### Project Management (Agile)\n\n- Remote Scrum Ceremonies\n  - Sprint Planning & Backlog Refinement\n    - ![Remote Sprint Planning & Backlog Refinement](/assets/images/2022-07-20-18-03-26.png)\n  - Daily Scrum, Sprint Review, Sprint Retro\n\n\n### Utilizing the Ideal Technology\n\n","n":0.037}}},{"i":14,"$":{"0":{"v":"Agile Fundamental Training","n":0.577}}},{"i":15,"$":{"0":{"v":"Part 2","n":0.707},"1":{"v":"\n### Coaches\n\n@agile-coach.RyanFish\n@agile-coach.JayBrummet\n\n### Previous\n\n[[Part 1|training.agile-fundamental-training.part-1]]\n\nWorking Agreements\n\n- Update *with the team* as needed\n\n#### Developing Soft Skills\n\n- Listen for understanding, one of the most important things we can do\n  - Don't jump into response mode right away\n- Continuous Learning\n\n#### Understanding Communication Barriers\n\n![Communication Barrier Matrix](/assets/images/2022-07-15-08-37-17.png)\n\n#### Collaboration Techniques\n\n#### Techniques for Shared Understanding\n\n- Make sure we're using the same verbiage on the team\n- Stay persistent\n\n### Value Based Work\n\n- Receive and record the feedback, have the conversation at a different time\n- MVP\n  - There can be multiple\n- Definition of Ready\n  - Every team has there own definition\n  - May contain the following benchmarks\n    - User story is ordered in the backlog by the Product Owner\n    - AC documented in story\n    - Team has reviewed the user story and discussed as a group\n    - User story is sized, est. and can be completed within the sprint\n    - No open dependencies that will block completion of the user story\n- Definition of Done\n\n#### Work in Progress\n\nAgile teams should focus on doing a few things at a time and doing them very well!\n\n#### Estimation\n\n![Estimation](/assets/images/2022-07-15-10-49-05.png)\n\n![Estimation with a Roadmap](/assets/images/2022-07-15-11-10-11.png)\n\n- The *less* we know, the bigger the estimation should be initially\n- Protect the team from these estimation forecasting type blaming\n\n- Reach for that good enough\n\nWe are limited in structure in Jira\nWe don't serve the tool, the tool serves us\nHave the crucial conversation if anyone is subverting the culture of the team, this can be seen as a blocker\n\n\n### Insights\n\n- Be vocal and bubble up that information\n- Ask other teams what their Defitinition of Ready is\n- Never assign points alone\n- Every question is meant to learn from\n- Bill reviews the cards before each stand up and the team appreciates it\n\n### Questions\n\n- ??? What do we mean by \"Unit test case scenarios\"  \n","n":0.059}}},{"i":16,"$":{"0":{"v":"Part 1","n":0.707},"1":{"v":"\n#### Hylaine Folks\n\n@agile-coach.RyanFish  \n@agile-coach.EthanMiller  \n@agile-coach.BetsyKauffman  \n\n### Notes\n\n#### Values and Principles\n\n- Agile manifesto\n- Agile Principles\n\n- The tool should serve you\n- Working software --> value  \n- Responding to change\n- Change the way the business gives us work\n\n#### Doing Agile vs. Being Agile\n\n- Being Agile\n  - Constantly applies Agile values and priciples with an Agile mindset\n- In-between a solid and liquid; a plasma  \n- Agile Mindset\n  - Being flexible, adaptable\n  - Transparency, Inspection and Adaptation\n    - Is the same story being told, the line of sight\n- Playbook pg. 10\n- Customer Obsession\n- Always Learning\n- continuous Innovation\n- Agile by Default\n- Collaboration at Scale\n  - MUST HAPPEN!\n  - Healthy debate and discussion\n  - See each other as people\n\n#### Agile Team Characteristics\n\n- Each person should have the ability to any job at any given time\n\n- Scrum Roles\n  - Product Owner\n    - Provides value\n    - Owns the quality stories\n    - Should only be 1 person\n    - People can learn to be a PO\n  - Scrum Master\n    - Be the grease\n    - Become obsolete\n    - Not the team admin, not the admin\n    - Servant leadership\n    - Coaches outside the team\n    - Interactions with the team will change as things, the team change\n    - The Team will always need a Scrum Master\n  - Developers\n    - **Anyone** who contributes to the completion of any aspect of a digital product\n\n#### Scrum Framework\n\n- Product Backlog\n  - PO owns this but everyone works on it\n- Sprint Planning\n- Sprint Backlog\n  - The conversations must happen\n- Refinement can happen at any time\n\n### Retros\n\n- There are multiple possible approaches for Retros\n  - A chance for honest and open conversation\n    1. Set the Stage\n    2. Gather Data\n    3. Generate Insights\n    4. Decided What to Do\n    5. Close the Retro\n\n---\n\n### Product Owner Training\n\n#### Product Owner Time Commitment\n\n- Good product owners do whatever is necessary to build the best product possible, need to be actively engaged\n- They have full time jobs\n- In our situation, the PO's are not dedicated and it's not just our team, it's a company culture thing\n  - We're a more traditional company, change is slow\n  - They've been rewarded for their previous behavior\n\n#### Working with the Stakeholders\n\n- Gemba walks\n  - Walk to the source, have others see where the action happens\n- Start saying **no**\n  - \"Not right now\"\n- Don't treat all stakeholders equally\n  - Some needs are more \"important\" than others\n- Diplomacy, negotiation\n- Users have the greatest stake in the product\n- Don't be a proxy between stakeholders and devlopers\n- Changing focus\n- Involve your SM/Agile Coach in stakeholder management\n- Communication **MUST** happen\n- Manage the *product*, not the team\n  - The team is an equal partner\n  - Help the team see the bigger picture\n  - Involve the team in product decisions\n- Not high pressure\n  - Be available, but don't neglect your other duties\n\n---\n\n### Scrum Master Training\n\n#### Scrum Values\n\n- Courage\n- Focus\n  - Protect the team, so they can stay focused\n- Committment\n- Respect\n  - Everyone wants to do a good job\n  - Build that trust through relationships\n- Openness\n\nPressure from outside team\n\n- Be able to say no\n- Protect the team\n- Might need to keep repeating, be respectful, professional\n\n#### Pillars of Scrum\n\n- Transparency\n- Inspection\n- Adaptation\n- Empiricism\n  - Want to have data around our decisions\n    - Use that data to improve\n\n#### Scrum Roles - Scrum Master\n\n> Promotes and supports Scrum by helping everyone understand Scrum theory, practices, rules, and values.\n\n- Be a good listener, need to understand them to help them\n- A lot of suggesting\n\n- All Scrum events should incorporate these pillars\n\n- Allow the team to solve their own problems, become self-managing and self-efficient\n\n#### Story Points\n\n- Weather forecasting, story points can help with this\n- Accuracy vs. precision\n  - Get close enough\n- Outside of the team the points should be worthless\n- Should be done *before* Sprint Planning\n\n#### Status\n\n- Use metrics to spot a trend, don't use it as punishment\n\n#### Team Building  \n\n- Small\n- Self-organizing\n- Cross-functional\n- Stable membership\n  - Can allow for more predictability\n- One team  \n  - One Sherwin\n\n---\n\n### Questions\n\n- What is the \"flywheel effect\"?\n  - Flywheel in the engine, gives power to essential parts in a car\n  - Snowball effect\n    - Katamari ball\n\n### Advice/ Words of Wisdom\n\n- Know who talk to\n- In battleship exercise, in the 1 big iteration, there was a lot of talk that was important for the team but did not provide value to the business\n- THINK Townhall type events every quarter, talk with Dennis & Chirayu\n- Simple tasks combined can be complex, in-regards to multi-tasking\n- !!! When things are getting uncomfortable, refer to the Agile Manifesto and Principles\n- We're building relationships as Scrum Masters\n- Getting into a pattern can lead to laziness and going through the motions\n- \"Does this fit your business case? Your business need?\"\n  - Is the edge case truly important, have that discussion\n- What's the best ability? Availability\n","n":0.036}}},{"i":17,"$":{"0":{"v":"Certified Scrum Master","n":0.577},"1":{"v":"\n### Instructor\n- Jan Beaver\n\n## Logigistics\n- Timing\n- 2 Breaks each before lunch and after lunch\n- Stay signed in during breaks and lunch, mute and turn off camera\n- Don't get distracted\n- 1.25 million CSM's worldwide!!\n- Make sure camera stays on, VERY IMPORTANT\n- Email will come from scrumalliance.org, use personal email address, within 10 minutes of finishing tomorrow\n  - A self-assessment of 50 multiple choice questions, *open-book* test, need 37/50, 60 minute timebox, slidedeck is a great reference, 2 attempts\n  - Accept the license and trademark\n  - Certification is good for 2 years, renewal is $100, document 20 hours of scrum education, on scrum alliance site\n\n## Process Control Models\n- Defined process control (outdated)\n  - Causal determinism\n    - \"Plan the work, work the plan\"\n    - Reality does NOT care about our plans, this doesn't work\n    - Focuses on:\n      - Efficiency\n      - Utilization (butts in seats)\n    - Assembly line of (Model T's) is really when it worked the best \n  - Software and IT was defined by this to our detriment\n- Empirical Process Control\n  - Knowledge from experience and make decisions based on observations from the work\n  - \"Scrum is iterative, incremental approach to optimize predictability and control risk\"\n  - 3 pillars\n    - Transparency\n    - Inspection\n    - Adaptation\n  - We need Empirical Process Control because of the Complex Work\n    - Emerged from the uniqueness of software\n    - Software is always new, if it already existed why would we recreate it\n      - Reuse as much as possible\n    - Stakeholders don't know what they want, they will change their minds\n    - We don't know what we're creating, let alone *how* to do it!\n## The Agile Manifesto\n- Agile Manifesto Principles\n  - Discuss each one, discuss into 3 words\n\n## Scrum\n### Origins of Scrum\n- 'Relay race' approach is akin to waterfall!\n- A holistic or 'rugby' approach - where a team tries to go the distance as a unit, passing the ball back and forth\n  - Small, cross functional, highly skilled individuals, self-managed\n- *Havard Business Review*, \"The New New Product Development Game\"\n### Overview\n- Roles are the accountabilities\n### Continuous Improvement\n- Plan, Do, Inspect, Adapt\n```mermaid\n    flowchart LR\n    p(plan)\n    d(do)\n    i(inspect)\n    a(adapt)\n    p --> d\n    d --> i\n    i --> a\n    a --> p\n    \n```\n### Values\n- Treat people the way *they* want to be treate\n\n- Put people in a position to take action\n- Characteristics are like jigsaw puzzle pieces, each element, by itself, does not bring about speed and flexibility. Taken as a whole, the characteristics can produce a powerful new set of dynamics that will make a difference\n\n- Scrum Master training is great for everyone, formal training is definitely recommended\n### The Scrum Team\n- Accountable for all product-related activities\n- Stakeholder collaboration\n- Product development & maintenance\n- Cross-functional\n- Self-managing\n  - This is NOT a boss, someone who dictates what needs to be done\n- Works at a sustainable pace\n  - And is *accountable* for this\n- Collective accountability for creating a valuable, useful product Increment every Sprint\n  - No busy work\n- Full-time, dedicated Team members\n  - A team is a team!!!\n  - Try playing for the Cavs and the Lakers at the same time :-)\n#### Scrum Master\n- Accountable for Team's effective use of Scrum\n- Removes barriers, facilitates effective communication, enables teamwork\n- Shields the team from external interference\n- Team facilitator, teacher, mentor, & coach\n  - Not realistic for SM to train everyone on the team on Scrum\n- Facilitates all Scrum Events\n- Organizational Scrum coach and change agent\n- Leads by example and influence, not managerial authority\n  - Interpersonal relationships\n  - Servant leader\n- Increases openness and visibility of impediments and successes\n  - Putting people in the right place for success\n  - Celebrate successes and wins\n- *Everyone* needs to be bought-in!!!!\n  - Fist of Five, Thumbs up/sideways/down, dot voting\n- Listen and provide options\n- Where there's lag, find a SME and fill in that gap\n\n#### Product Owner\n- Defines and share the Product Goal\n- Defines the content and ordering of the Product Backlog\n- Decided when to release based on emergent product features\n- Owns the product development budget\n- Is the focal point for stakeholders, customers, SMEs, etc.\n- Max the value of the Developers' work\n- Accepts or rejects work results\n- Participats in Backlog Refinement, Sprint Planning, Sprint Review, Daily Scrum (Optional), and Sprint Retrospective\n- Makes sure the Team always has something to work on\n\n#### Developers\n- Accountable for delivering a quality product at a sustainable pace\n- Size: 3 - 8 people\n  - Scale by building more teams\n- Full-time, dedicated to one Scrum Team only\n- No titles other than \"Developer\"\n  - This does not mean other skills are ignored ;)\n- Cross-functional and collaborative\n- Self-managing - collectively decide who does what and when\n- Own all work item estimates\n  - They tell the Product Owner how long something will take to develop\n- Accountable for improving engineering practices (quality)\n  - Stay up-to-date on the latest technologies\n- Demonstrate Product Increment to Product Owner and stakeholders every Sprint\n- Full participation in all Scrum Events/Activities\n- They determine when the work is going to get done, they set the pace\n\n### Team Development\n- Forming, Storming, Norming, Performing\n  - Creative conflict\n- Whenever the team changes, we go back to a \"Forming\" phase\n- Optimize for the humans! (Scrum does this)\n- Keep teams challenged and refreshed\n- Conversational equality\n- Celebrate the fails, what was learned\n  - Failure is part of the human condition\n- Fixed team roster, helps simplify the budget\n\n### Scrum Events\n- Sprint planning\n- Daily Scrums\n  - Backlog refinements as needed\n- Sprint review\n- Sprint retrospective\n- 1-2 week sprints are preferred and most common\n  - NO to 3-4 week sprints, things tend to slow down\n\n#### Sprint Planning\n- Two-sprint = 4 hour time box (our deadline)\n\n#### Daily Scrum\n- It's for the developers, PO's need to behave themselves\n- What happened in the last 24 hours and what's coming up in the next 24 hours\n\n#### Sprint Review\n- Share with stakeholders, are we on the right path, get their feedback\n\n#### Retros\n- Without retros, we lose the opportunity to improve ourselves\n- Make the retros relevant!\n- People should look forward to them the most!\n- Performing teams look forward to these the most\n\n### Product Goal\n- The desired outcome of the product\n  - Idea --> Goal --> Release\n  - Good product goal, 100 words or less\n    - Elevator pitch (in tallest building)\n    - Shared and unifying\n    - Broad and engaging\n    - Brief and easy to consume\n    - Fosters simplicity and innovation\n    - iPod's product goal\n      - ![](/assets/images/2022-05-05-16-41-59.png)\n\n### The Product Backlog\n- Single-dimensional, **ordered** list of everything needed for the product\n  - If it's NOT in the backlog, we are NOT doing it\n  - All items into the future\n- Commitment: Product Goal\n- Artifact: Product backlog\n- Each item provides value to the business, end users, or customers\n- Ordered by hte Product Owner\n  - Re-ordered for the start of each Sprint\n  - Dynamic - can change at any time\n  - Each item has: Description, Order, Estimate, Value\n- Sprint backlog is a slice off the top of this, and it should NOT be disrupted\n- Developers tell the PO and SM what the estimate is\n#### User Stories\n- Comes from XP, not Scrum but is borrowed\n- A Thin, vertical slice of valuable functionality as told from the perspective of the end user\n  - Slice through the whole tech stack\n  - You wouldn't pull a layer out of cake, you would slice it vertically, experience is the same with each slice (usually)\n  - Focuses the developers to work together, cross-functional\n- Get stakeholders thinking in-terms of customer value, what the customer needs/wants\n- Scrum Master's job is to make sure the Fan 4's are happening and they are effective\n- Why user stories?\n  - \"Voice of the customer\" thread throughout the process\n  - Very small complex independent problems\n- Definition of Ready (for Sprint Planning)\n  - INVEST\n\n### Sprints\n- Nothing happens outside the boundaries of the Sprint (event)\n- Duration is fixed, it should be permanent, if it changes it should be a permanent change!\n  - Typically 1-2 weeks\n  - We *need* to control the time, otherwise our work will determine it\n    - Slice work to fit within time\n- Protected from *external* interruptions/scope changes\n  - Protect the Sprint Plan\n  - \"Because I said so\" doesn't work in Scrum\n    - The PO needs to protect the Sprint Plan\n#### Sprint Backlog\n- A slice off the top of the Product Backlog\n- Extremely transparent, a real-time snapshot (this is the \"status update\")\n- Developers, self-manage their work\n- Sprint Backlog visualized\n- There's \"Not Done\" and \"Done\" at the most basic level\n  - \"In-Progress\" falls under \"Not Done\"\n- Minimize waste - minimize work in Sprint\n#### Sprint Cadence\n- ![](/assets/images/2022-05-06-11-08-01.png)\n- Don't choose Sprint Planning for Mondays\n  - People are tired, not into it\n  - Holidays typically fall on Monday's\n    - Pushing it out to Tuesday makes a big deal\n    - Plan less work on Holidays\n  - Sprint Review, take a break, Retro\n  - Go into the next day and start with Sprint Planning\n- We should NOT be exhausted, because we work at a sustainable pace\n#### Canceling a Sprint Plan\n- If the Sprint Goal becomes obsolete\n  - The Sprint Plan may be canceled\n- This is an extreme circumstance, the exception\n- Sprints are too long or the PO doesn't have focus\n- PO has authority to cancel the Sprint Plan, accountable for the budget ramifications\n- The Sprint does NOT get canceled!!\n\n#### Product Increment\n- Artifact: Product Increment\n- Commitment: Definiton of Done\n  - Created, owned and committed to by the Developers\n  - If multiple teams, need to come up with a shared DoD\n- Shift focus of DoD to the Product Increment, can be used at the story level, but be careful to not change quality per story\n- The Quality of work\n- There is no value added in FIXING bugs, we want to PREVENT them\n- New requirements/agreements = new story, no if's/and/buts!\n\n### Technical Debt\n- Super easy to create\n- Poor implementation, quality, code yet to be integrated\n- Lack of test coverage, work-in-progress, doesn't meet naming conventions\n- Major source of bugs\n  - Need to be fixed or the debt piles up\n- Developers are accountable for this\n- Metaphor - credit card debt, interest accruing, needs to be paid off\n\n#### Practices to Prevent Tech Debt\n- Agile architecture\n- Modern programming practices\n- Continuous refactoring\n- Automated Unit Tests\n- TDD - red-green-refactor coding cycle\n- Continuous Integration\n- Static analysis\n- Automated functional tests\n\n### Story Points\n- Includes effort, complexity, risk\n- Relative size of numbers\n- \"How big is this?\" is fundamentally easier to answer than \"How long will this take?\"\n- Separates estimates from commitments\n- Apply timebox to Spikes/chores\n- All Developers need to agree on the size!\n- Conceptualization of work\n- Does NOT indicate the number of hours it takes\n  - If only 3 choices are needed, just stick with T-Shirt sizes\n- Anything that slows us down is not good\n- What we got done last sprint is a good indication of what we can get done in the next sprint\n- Consistency is important vs. precision, this way we can use velocity as a valuable estimation metric\n\nScrum is minimally perscriptive\n\n### Questions\n- I asked about having a PO being the manager of several developers and coming to the retro\n  - We do NOT want hierarchy within the Scrum team, it does not work\n    - It does not work with humans\n- Where do Continuous Improvement and Innovation fit?\n  - It happens daily just by practicing Scrum, and retros\n  - Put Innovation Days and things like that in the backlog!\n- Fan 4's should be done BEFORE the Sprint Planning, NOT during the Sprint\n- Create awareness, \"New thing!\", \"Want to try this?\", feed insights into team\n  - If they say no to something, keep trying a little slice at a time, \"Let's just try it\" timebox\n  - Find the right level of engagement, it could shift from day-to-day and hour-to-hour, what's the vibe\n  - SM's domain is Human interaction, psychology\n  - His mentor is: Jeff McKenna, who got a degree is Family Counseling to become a great SM\n\n### Miscellaneous\n- Ken Schwaber started Scrum.org, big in eastern Europe\n  - Ken was with ScrumAlliance, big clash of egos, so he started his own\n- ScrumAlliance.org is used throughout the rest of the world typically, 10x bigger than Scrum.org\n\n### Action items\n#todos\n- [x] Download and review Scrum Master Checklist\n- THINK Book - *Agile Retrospectives: Making Good Teams Great*\n- [x] Read Scrum Guide before taking the exam","n":0.022}}},{"i":18,"$":{"0":{"v":"Pcg B","n":0.707}}},{"i":19,"$":{"0":{"v":"Quick Conversations","n":0.707}}},{"i":20,"$":{"0":{"v":"2022","n":1}}},{"i":21,"$":{"0":{"v":"06","n":1}}},{"i":22,"$":{"0":{"v":"Terms","n":1},"1":{"v":"\nDFT = dry film thickness  \nCOA = certificate of analysis\nDPD = Digital Product Delivery","n":0.267}}},{"i":23,"$":{"0":{"v":"Business Analyst Discussion Tom Lenker","n":0.447},"1":{"v":"\n@people.TomLenker\n\n- There were no docs at the time when he started\n  - There were 4 at one point, so he combined them \n\n<https://app.mural.co/t/poc1069/m/poc1069/1652885072048/5a62d682897f4fe0074213b09dbc51f0907ee12f?sender=u263a5e858a140ece63ee1576>\n\n- Used for Product Owners to get discussions going, then used for Story Mapping sessions\n- Scope planning meeting, he meets with PO separately\n  - Statement of Work meeting\n- Bi-weekly automotive meeting (1-on-1's)\n- Then Dev manager, assign to team based on capability then capacity\n- BA's handle 3-4 features\n- Sends Mural out before meeting\n- Goals become requirements\n- Allows the team to really work together\n- The Word doc helped get to this point\n- After USM, there's a technical solutioning meeting/review without the Business present\n  - Review with Business afterwards\n- Works with Bill and Dan\n- Took a year to get to the Mural\n  - Lot of trial and error\n  - Always looking for feedback\n    - Meets with UX \n  - Each design is always different\n  - \n\n- Why we did it source of truth is the Mural\n- What we did source of truth is Rally/Jira\n\n- [x] Check with Katie Campbell to get Tom's time to work with Scott and Brian\n","n":0.075}}},{"i":24,"$":{"0":{"v":"2022","n":1}}},{"i":25,"$":{"0":{"v":"07","n":1}}},{"i":26,"$":{"0":{"v":"29","n":1}}},{"i":27,"$":{"0":{"v":"Workbench Feedback","n":0.707},"1":{"v":"\n- IDEA Cancel work order option, currently anyone can cancel a work order, even if it's a mistake, could only a manager only have this access\n- Toggle back and forth between Aurora and Workbench, an easy option\n  - Scott will email the Incognito instructions, this is the workaround right now\n- Mike likes the \"Hold\" status, \"very nice feature\"\n\nRajesh and Laura Kelleher, and Sr. Leaders,  need to be in workshops, to help others know that they are empowered","n":0.114}}},{"i":28,"$":{"0":{"v":"Team Norms Discussion","n":0.577},"1":{"v":"\n\nPlanning\nwaited until the last minute to prioritize Increment 3\n- Did we know the end of the Increment was coming? \n\n- Thoughtboard and Matrix board \n\nQC Product\n\nAfter 2 months of the current Increment, do we start planning for them at that point\n\nSchedule Team Norms once every quarter","n":0.147}}},{"i":29,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[Stand Up|dpd.pcg-b.2022.07.22.stand-up]]\n\n### Notes\n\n- Rick accepted but did not show up\n  - This type of engagement is new and people \n  - Was there an expectation  \n- We need to show the broader team the value in these types of discussion\n\n### Board\n\n| **Key**                 | **Assignee**                     | **Notes**                                                                                                   | **Components**            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                                               | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                                                                                         | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                                             | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                                         | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | The security scan team, not super sure about getting security Scan, cannot get approval without Shannon | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                                                                                         | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | @people.RahulLandge The microservice(s) need to be deployed still                                       |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                                         |                       |\n| @stories.PCGQC-34   | Assignee                     |                                                                                                         | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           | Once the infrastructure is created in Prod, this can be closed                                          |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                                           | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                                             | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason to create prod user                                                      |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                     | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                                             | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                                                | **DONE**              |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-231    | @people.EarlSioson           |                                                                                                         |                       |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                                         |                       |\n| @stories.POW-223    | Assignee                     |                                                                                                         | Testing; UI Front End |\n\nBrian and Hieu on Tuesday are doing Research on Hold tab and rush indicator\n\nPOW-4, Architecture Increment Reviews are really never done, they are on-going\n\nSecurity Scan is in-process, Suresh is coordinating with the Security team\n\nHieu:\n\n- PCGQC-81 Personas \n- Prepping for final stage 3 designs, need to get feedback from end users \n\nHooked save button up in Dev, it's not working, going to work with the backend microservice team to test","n":0.047}}},{"i":30,"$":{"0":{"v":"Discuss End Users Communication","n":0.5},"1":{"v":"\n### People\n\n@people.MattWalter\n@people.ScottStorm\n\n### Notes\n\nRelationships started on the business side, with the facilities, engagement starts there\nCurrently this is not happening\nGet what we can get\nConsider user analytics, tag Workbench and IOM\nPenDo, WalkMe\nThis route is less intrustive\nThey can provide feedback right into the tool\nScott could be doing the analytics too\nWe're probably not going to get the direct engagement from them right now\n\n- Busy, perceived value\n- Possible resistance to using the new tool\n\nNeed to get our business people more engaged\nPO and a Product Manager (strategy, working with end users, research, data analytics, work with UX) will be hired\n\nNeed to measure the value, are they actually getting value\nAllowing for efficencies? Metrics\n\nO&KRs\n\nTake feedback, match against data and business\n\nBusiness, UX, IT\nViability, Usability, Feasability\nScoring metrics to weigh the outcomes we're trying to get to\nWhat are the main things we're focusing on, it should have a positive impact\nSuccess should be measured by Results\nDirect Impact needs to be measured\nImpact should be leading to our prioritization\n\nAssuming up front, but get real data to help us prioritize\n\n\"Inspired\" book Marty Cagan can be expensed, book club, talk with Matt every week,\n\nSame API to serve up different experiences\n\nCSRs and Ops Manager are who we should be targeting now, most likely\n\nWe need to have empathy for our business stakeholders, they have other full-time jobs as well\nBusiness is ramping up their digital literacy\nHave some pre-work for the business before coming to meetings, share the outcome and be prepared\n\nBe proactive in understanding the health of the app\nBe confident in every release, 100% Prod-like environments\n\nThe next 12 months, we need to deliver a lot\n\nMonitors and things in place to be alerted of issues in Prod\n\nNot acceptable to ship broken things, strive for greatness\n\n- [ ] Create a list of gaps and share with Matt\n\n### Scott's notes\n\n- Matrix weighted according to the main problems/outcomes we are trying to achieve\n- measure the success\n- business viability, UX usability and IT feasibility.\n- our success should not be measured because we release something- we need to measure on results.\n- we release has direct impacts that are measurable according to the outcomes.\n- Solving High Value / High Impact problems.\n- Inspired.\n- give them homework so they come prepared for meetings and participate.\n- What can I do to help overcome? solve problems proactively BEFORE they go to prod and understanding the health of the application\n- as confidant as we can before we go to prod. if not what\n\nGAPS-WRITE UP FOR MATT:\n\n- environments configured like production\n- monitors setup in prod to we don't want facilities tell us about issues in prod we want to know them in advance, and testing gaps.\n- so we can service and keep the business functioning.\n- things breaking and blowing up in prod is not acceptable.\n- release to smaller facilities first and let it bake in for a couple of days before we release.\n- 0 disruptions and 0 downtime.\n","n":0.046}}},{"i":31,"$":{"0":{"v":"26","n":1}}},{"i":32,"$":{"0":{"v":"Discussions","n":1},"1":{"v":"\nThe way we're working looks like waterfall\n\nWe don't have to have an ENTIRE screen completed before we deliver something\n\nDon't get hung up on the terminology\n\nRethinking how we're going to deliver it \n\nHow long will it take to deliver an epic, discuss it, break it into stories (deliverable), not the whole functionality, pieces to the puzzle, when completed is the FULL deliverable\n\nWhy spend the time making the tasks, rather than just do them\n\nAllentown/Macungie is our biggest facility, why did we ship to them first?!?!?!?!?!?!\n\nDan, Marianne and Kyle need to stop being the voice of the customer\n\nWorking and working as well as it could are different things\n\nUX and agile timelines are not in-alignment ","n":0.095}}},{"i":33,"$":{"0":{"v":"25","n":1}}},{"i":34,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\nSecurity Scan made it into Shannon's team, so that's in-progress\n\n239, 240 will be handed to Suresh when Paul is on vacation til August 11 (Glacier National Park),\nthere's no end-to-end test, there's manual testing steps provided \n\nPOW-251 NPM l\n\nPOW-250, Github security alerts, on our dependencies \n\n\nMel, Suresh and Earl to see if saving could be \n\nWe want to make sure the logout is the same as Workbench, where as in QC it's an arrow right now, make it more uniform\n\n","n":0.113}}},{"i":35,"$":{"0":{"v":"22","n":1}}},{"i":36,"$":{"0":{"v":"July 22 Stand Up","n":0.5},"1":{"v":"\n### Previous\n\n[[July 21 Stand Up|dpd.pcg-b.2022.07.21.stand-up]]\n\n### Notes\n\n| Key                 | Assignee                     | Notes                                                                                                   | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                                               | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                                                                                         | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                                             | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                                         | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | The security scan team, not super sure about getting security Scan, cannot get approval without Shannon | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                                                                                         | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        |                                                          | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | @people.RahulLandge The microservice(s) need to be deployed still                                       |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                                         |                       |\n| @stories.PCGQC-34   | Assignee                     |                                                                                                         | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           | Once the infrastructure is created in Prod, this can be closed                                          |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                                           | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                                             | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason to create prod user                                                       |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                     | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                                             | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                                                | **DONE**              |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-231    | @people.EarlSioson           |                                                                                                         |                       |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                                         |                       |\n| @stories.POW-223    | Assignee                     |                                                                                                         | Testing; UI Front End |\n\nBrian, to ping Edina facility manager to confirm that no one is working in the site\n\nSchedule call tonight at 8:00 \n\nJay, issues with Microservices, no support for JDK 17, Guna, Rahul to be in a meeting\n\n- [x] Place team block on calendar for Monday\n\nTest details and saving, API connecting could be an issue, a React issue, the unknown, does not have the data\n","n":0.049}}},{"i":37,"$":{"0":{"v":"Go Live Backup Plan","n":0.5},"1":{"v":"\nPlan B\n\n- Let the Aurora support handle this, so there will be a remedy ticket, we will be the Remedy PoC\n- Jen Kiffer - Aurora\n- Facility Managers\n- Chirayu\n- If we get a critical issue (more 1-2 hours to fix) we will revert back to the PowerApps version and we'll need help from\n  - Justin, Paul and Narendhar\n    - Do they have the time blocked for this\n    - Revert to the 2 old Boomi services\n      - Azure SQL service\n      - Getting data from the Aurora service\n      - New service was tested in QA by Suresh\n    - There's the Migration PPM\n\n- We cannot we create orders in Prod, so we'll need to have someone monitor this at 6:30 AM\n\nPPM's\n248330 \n\n- GEA Change Request 248330 - APIM PCG Workbench WorkorderQuery and WorkOrderTransaction Migration is in Change management step can we progress the ppm workflow for this.\n\n245684\n\n- Only to revert\n  - Two Boomi Services:\n    - Get WO from POS - This should be new service for Azure SQL, existing data verse one should not be modified\n    - Get WO Status from Aurora - This will be modification of existing one as OSB is calling the Booomi endpoint. this supposed to be migrated today after 8 PM\n\nNarendhar\n> There are other deployments happening tomorrow, could we do the deployment tomorrow?\n\nFacilities are closed on the weekends\n\n10am tomorrow re-schedule\n\n\n\n- No one is on call for this weekend","n":0.066}}},{"i":38,"$":{"0":{"v":"21","n":1}}},{"i":39,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[July 19 Stand Up|dpd.pcg-b.2022.07.19.stand-up]]\n\n### Notes\n\n| Key                 | Assignee                     | Notes                                                                                                   | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                                               | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                                                                                         | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                                             | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                                         | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | The security scan team, not super sure about getting security Scan, cannot get approval without Shannon | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                                                                                         | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        |                                                          | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | @people.RahulLandge The microservice(s) need to be deployed still                                       |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                                         |                       |\n| @stories.PCGQC-34   | Assignee                     |                                                                                                         | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           | Once the infrastructure is created in Prod, this can be closed                                          |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                                           | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                                             | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason will need to                                                             |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                     | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                                             | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                                                | **DONE**              |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-231    | @people.EarlSioson           |                                                                                                         |                       |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                                         |                       |\n| @stories.POW-223    | Assignee                     |                                                                                                         | Testing; UI Front End |\n\nWe told Dan that go-live is Monday, we'll inform him on Thursday\n\nPOW-225, why did we pull this into the Sprint?\n\n@people.GunabalanAnatharajan is working on the deployment\n\n@people.BrianComiskey to get list of users from the 3 facilities, already received them for Edina\n\nJason is out this week\n\nJason to create additional users in QA and Prod, to query the DB when he comes back\n\n- NPM Epic is being worked on by Earl, we need a story for this\n\n- IOM discovery work for Blend Order Status is starting ","n":0.048}}},{"i":40,"$":{"0":{"v":"20","n":1}}},{"i":41,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[July 19 Stand Up|dpd.pcg-b.2022.07.19.stand-up]]\n\n\n\n| Key                 | Assignee                     | Notes                                                                                                   | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                                               | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                                                                                         | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                                             | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                                         | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | The security scan team, not super sure about getting security Scan, cannot get approval without Shannon | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                                                                                         | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        | Paul, working on the local env. for development                                                         | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | @people.RahulLandge The microservice(s) need to be deployed still                                                                                                        |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                                         |                       |\n| @stories.PCGQC-34   | Assignee                     |                                                                                                         | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           | Once the infrastructure is created in Prod, this can be closed                                                                                                        |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                                           | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                                             | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason will need to                                                             |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                     | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                                             | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                                                | **DONE**              |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-231    | @people.EarlSioson           |                                                                                                         |                       |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                                         |                       |\n| @stories.POW-223    | Assignee                     |                                                                                                         | Testing; UI Front End |\n\nWe told Dan that go-live is Monday, we'll inform him on Thursday\n\nPOW-225, why did we pull this into the Sprint?\n\n@people.GunabalanAnatharajan is working on the deployment\n\n@people.BrianComiskey to get list of users from the 3 facilities, already received them for Edina\n\nJason is out this week\n\nJason to create additional users in QA and Prod, to query the DB when he comes back\n\n- NPM Epic is being worked on by Earl, we need a story for this\n\n- IOM discovery work for Blend Order Status is starting ","n":0.047}}},{"i":42,"$":{"0":{"v":"Increment Planning","n":0.707},"1":{"v":"\n#### People\n\n@stakeholder.KyleRich  \n@stakeholder.DanDrellishak  \n@stakeholder.MarianneBrooks  \n@stakeholder.EbonieBarnett  \n@stakeholder.AriannMartinez\n@people.SamanthaGrayshaw  \n@people.ChirayuPoundarik  \n@people.ScottStorm  \n@people.SureshThota  \n@people.HieuNgo  \n@people.BrianComiskey  \n@people.SoumyajitPaul\n\n### Notes\n\n- Chirayu said we are going live on Monday, this is dependent on the Security scan\n- Kyle is taking a vacation on Friday, so need to let him know about the our launch so he can get the GTI report\n- ![PCG Workbench Increment 2](/assets/images/2022-07-20-10-05-46.png)\n\n- By introducing notes, waste management will be reduced, this reduces time walking around in the facility\n\nKyle\n> how are we communicating these Increment 2 changes to the sites?\n\nScott\n> Send out email everyday to the sites, leading up to the launch and keep asking them to review the site\n\nKyle\n> Is the data on workbench accessible to be reported on? This is more of a management tool\n\nDan\n> Could we assign a value to the white and clear to say we've never made this before","n":0.085}}},{"i":43,"$":{"0":{"v":"19","n":1}}},{"i":44,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[July 18 Stand Up|dpd.pcg-b.2022.07.18.stand-up]]\n\n\n\n| Key                 | Assignee                     | Notes                                                                                                   | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                                               | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                                                                                         | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                                                                                         | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                                             | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                                         | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | The security scan team, not super sure about getting security Scan, cannot get approval without Shannon | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                                                                                         | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        | Paul, working on the local env. for development                                                         | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                                                                                         | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | @people.RahulLandge The microservice(s) need to be deployed still                                                                                                        |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                                         |                       |\n| @stories.PCGQC-34   | Assignee                     |                                                                                                         | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           | Once the infrastructure is created in Prod, this can be closed                                                                                                        |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                                           | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                                         | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                                             | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason will need to                                                             |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                     | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                                             | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                                                | **DONE**              |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                                         | Testing; UI Front End |\n| @stories.POW-231    | @people.EarlSioson           |                                                                                                         |                       |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                                         |                       |\n| @stories.POW-223    | Assignee                     |                                                                                                         | Testing; UI Front End |\n\n\n@people.GunabalanAnatharajan is working on the deployment\n\n@people.BrianComiskey to get list of users from the 3 facilities, already received them for Edina\n\nJason is out this week\n\nJason to create additional users in QA and Prod, to query the DB\n\n- [x] Work with Suresh on getting the Security Scan by Thursday!!!\n\n- NPM Epic is being worked on by Earl, we need a story for this\n\n- IOM discovery work for Blend Order Status is starting ","n":0.048}}},{"i":45,"$":{"0":{"v":"Quick Touchpoint with Marianne","n":0.5},"1":{"v":"\nQuick touchpoint with Marianne\n\nWe probably don't need the beta test\n\nKyle Rich (Used to run Garfield Hts. facility), QC Product Demo\nFocus on this location","n":0.209}}},{"i":46,"$":{"0":{"v":"18","n":1}}},{"i":47,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[July 14 Stand Up|dpd.pcg-b.2022.07.14.stand-up]]\n\n\n\n| Key                 | Assignee                     | Notes                                       | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                   | **TO DO**             |\n| @stories.POW-232    | @people.SoumyajitPaul        |                                             | Testing; UI Front End |\n| @stories.POW-35     | @people.SoumyajitPaul        |                                             | Testing; UI Front End |\n| @stories.PCG-125    | Assignee                     |                                             | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                             | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                             | Testing; UI Front End |\n| @stories.POW-234    | Assignee                     |                                             | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                             | Testing; UI Front End |\n| @stories.PCG-91     | Assignee                     |                                             | Testing; UI Front End |\n| @stories.PCG-104    | @people.HieuNgo              |                                             | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                 | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                             | **IN PROGRESS**       |\n| @stories.POW-227    | @people.SureshThota          | We need this Scan by Thursday               | Testing; UI Front End |\n| @stories.POW-235    | @people.SureshThota          |                                             | Testing; UI Front End |\n| @stories.POW-239    | @people.SoumyajitPaul        |                                             | Testing; UI Front End |\n| @stories.POW-240    | @people.SoumyajitPaul        |                                             | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     |                                             |                       |\n| @stories.PCGQC-1    | Assignee                     |                                             |                       |\n| @stories.PCGQC-34   | Assignee                     |                                             | Microservices and API |\n| @stories.PCGQC-131  | @people.RahulLange           |                                             |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                             | Testing; UI Front End |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                               | **ON HOLD**           |\n| @stories.PCG-97     | @people.MelClifford          |                                             | Testing; UI Front End |\n| **TESTING**         | **TESTING**                  | **TESTING**                                 | **BLOCKED**           |\n| @stories.POW-152    | @people.GunabalanAnatharajan | Suresh, will be testing. Jason will need to |                       |\n| @stories.POW-231    | @people.EarlSioson           |                                             |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                         | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                 | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                    | **DONE**              |\n| @stories.POW-177    | @people.HieuNgo              |                                             |                       |\n| @stories.POW-223    | Assignee                     |                                             | Testing; UI Front End |\n\nJason is out this week\n\nJason to create additional users in QA and Prod, to query the DB\n\n- [x] Work with Suresh on getting the Security Scan by Thursday!!!\n","n":0.053}}},{"i":48,"$":{"0":{"v":"14","n":1}}},{"i":49,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[Stand Up|dpd.pcg-b.2022.07.12.stand-up]]\n\n\n\n| Key                 | Assignee                     | Notes                                                                           | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                       | **TO DO**             |\n| @stories.POW-223    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-99     | @people.HieuNgo              |                                                                                 | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**       |\n| @stories.POW-97     | @people.JustinDruga          |                                                                                 |                       |\n| @stories.POW-145    | @people.Ameya                | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API |\n| @stories.POW-227    | @people.SureshThota          | Scan will be performed in QA, request has been submitted by Suresh              | Testing; UI Front End |\n| @stories.POW-232    | @people.SoumyajitPaul       |                                                                                 | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         |                       |\n| @stories.PCGQC-34   | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         | Microservices and API |\n| @stories.PCGQC-1    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-131  | @people.RahulLange           | Will be working with Jason, follow-up                                           |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End |\n| @stories.POW-233    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.POW-177    | @people.HieuNgo              | Hieu should have this done by end of day                                        |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**           |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**           |\n| @stories.POW-39     | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                        | **DONE**              |\n| @stories.POW-152    | @people.GunabalanAnatharajan |                                                                                 |                       |\n| @stories.POW-202    | @people.SoumyajitPaul       |                                                                                 | Integration           |\n| @stories.POW-130    | @people.BrianComiskey        |                                                                                 | Testing; UI Front End |\n| @stories.POW-228    | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| @stories.POW-230    | @people.EarlSioson           |                                                                                 | Microservices and API |\n| @stories.POW-215    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.POW-40     | @people.HieuNgo              |                                                                                 |                       |\n| @stories.POW-229    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.PCGQC-3    | Assignee                     |                                                                                 |                       |\n\n\nReview meeting at 2:30 to determine the Workbench launch delay\nSuresh will discuss with developers \nWaiting for QA, Azure SQL DB creation, APIM waiting for this, no users in QA DB, no tables in DB\nWorking with Murali, need to create passwords in CyberArk\nJason to get access to CyberArk\n\nSteps are unkown, \n!!! Jason to document the steps\n\nSplit PCGQC-131, so QA is done and Prod will be separate\n","n":0.047}}},{"i":50,"$":{"0":{"v":"12","n":1}}},{"i":51,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[Stand Up|dpd.pcg-b.2022.07.11.stand-up]]\n\n| Key                 | Assignee                     | Notes                                                                           | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                       | **TO DO**             |\n| @stories.POW-223    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-99     | @people.HieuNgo              |                                                                                 | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**       |\n| @stories.POW-97     | @people.JustinDruga          |                                                                                 |                       |\n| @stories.POW-145    | @people.Ameya                | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API |\n| @stories.POW-227    | @people.SureshThota          |                                                                                 | Testing; UI Front End |\n| @stories.POW-232    | @people.SoumyajitPaul       |                                                                                 | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         |                       |\n| @stories.PCGQC-34   | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         | Microservices and API |\n| @stories.PCGQC-1    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-131  | @people.RahulLange           | Will be working with Jason, follow-up                                           |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End |\n| @stories.POW-233    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.POW-177    | @people.HieuNgo              | Justin, has identified data that will be shared during stand up on Wednesday    |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**           |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**           |\n| @stories.POW-39     | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                        | **DONE**              |\n| @stories.POW-152    | @people.GunabalanAnatharajan |                                                                                 |                       |\n| @stories.POW-202    | @people.SoumyajitPaul       |                                                                                 | Integration           |\n| @stories.POW-130    | @people.BrianComiskey        |                                                                                 | Testing; UI Front End |\n| @stories.POW-228    | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| @stories.POW-230    | @people.EarlSioson           |                                                                                 | Microservices and API |\n| @stories.POW-215    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.POW-40     | @people.HieuNgo              |                                                                                 |                       |\n| @stories.POW-229    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.PCGQC-3    | Assignee                     |                                                                                 |                       |\n\n- Justin will be reducing his time on this project, shifting capacity on other projects\n\nWorkbench\n\n- Terraforming script\n- Call set up with Platform ops team at 10am, Paul confident it's a smaller problem, should be resolved by demo\n- 10:30 we will make the decision to switch to Plan B\n\n- Hieu - mocked up personalized dashboards, showed with the team\n  - Changes the strategy of the UX brief\n\n\nQC Tool\n\n- Dan, needs to be at the demo, Chirayu checking with him \n\n### Not in Attendance\n\n- Jason\n\n- [-] Follow up with Chirayu, about who should be in the demos \n  - Control who gets the invite\n  - We want to have a demo for QC for next week\n","n":0.045}}},{"i":52,"$":{"0":{"v":"Pcg Workbench Backlog Refinement","n":0.5},"1":{"v":"\nSecurity scanning needs to be performed asap, work with @people.SureshThota\n- Could we have figured this out sooner, why are we discussing this now???\n- There are 2 email distribution lists for the team\n\n- ??? Are we assigning 8's to issues because we don't understand the scope of them? \n\n\n- Review whether we will make the launch by Thursday ???\n\n- [x] Invite Earl to Backlog Refinement meetings\n- [x] Split out POW-232 into\n  - [x] MQ config (External)\n    - MQ Team needed, \n    - StoreP team needed\n  - [x] Microservice Development\n\n- [x] POW-233 should be an Epic\n\n\n- Do we understand what an Epic is supposed to be?","n":0.098}}},{"i":53,"$":{"0":{"v":"Demo","n":1},"1":{"v":"\nMarrianne's Comments\nMarianne asked about the QC demo, we said today is just the workbench, QC will be later is what we told her\n\nDan's Comments\nNice improvements, listening to the customer, adding in the features.\nFormat and features have been really good \n- [x] Townhall, Dan will want some screenshots to show the App, Townhall is next week\n  - [x] Screenshots to show Shop Floor notes and Scheduling, \n- Logging in and out, has this been addressed? \n  - Suresh said we'll be able to get this fixed for the initial launch for MVP\n- Looks great, very much appreciate everyone's hardwork \n\nChirayu shared that we might have to delay the launch by 2 weeks, Dan is okay with this\n\n\nMatt's Comments\n\"Are there work orders that are on hold that the Facility would want to be aware of how long they have been on-hold? How do these Holds impact OTIF?\" - Matt Walter\n    - \"Could we color code or prioritize and filter to bring the on-hold orders to the top?\"\n    - These are metrics we can track and get metrics to see if we're improving OTIF or not\n  - Get Dan involved in the planning phases","n":0.072}}},{"i":54,"$":{"0":{"v":"11","n":1}}},{"i":55,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[Stand Up|dpd.pcg-b.2022.07.05.stand-up]]\n\n| Key                 | Assignee                     | Notes                                                                           | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                       | **TO DO**             |\n| @stories.POW-223    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-99     | @people.HieuNgo              |                                                                                 | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**       |\n| @stories.POW-97     | @people.JustinDruga          |                                                                                 |                       |\n| @stories.POW-145    | @people.Ameya                | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API |\n| @stories.POW-227    | @people.SureshThota          |                                                                                 | Testing; UI Front End |\n| @stories.POW-232    | @people.SoumyajitPaul       |                                                                                 | Testing; UI Front End |\n| @stories.PCGQC-2    | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         |                       |\n| @stories.PCGQC-34   | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         | Microservices and API |\n| @stories.PCGQC-1    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-131  | @people.RahulLange           | Will be working with Jason, follow-up                                           |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End |\n| @stories.POW-233    | @people.EarlSioson           |                                                                                 |                       |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**           |\n| @stories.POW-177    | @people.HieuNgo              | Justin, has identified data that will be shared during stand up on Wednesday    |                       |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**           |\n| @stories.POW-39     | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                        | **DONE**              |\n| @stories.POW-152    | @people.GunabalanAnatharajan |                                                                                 |                       |\n| @stories.POW-202    | @people.SoumyajitPaul       |                                                                                 | Integration           |\n| @stories.POW-130    | @people.BrianComiskey        |                                                                                 | Testing; UI Front End |\n| @stories.POW-228    | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| @stories.POW-230    | @people.EarlSioson           |                                                                                 | Microservices and API |\n| @stories.POW-215    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.POW-40     | @people.HieuNgo              |                                                                                 |                       |\n| @stories.POW-229    | @people.EarlSioson           |                                                                                 |                       |\n| @stories.PCGQC-3    | Assignee                     |                                                                                 |                       |\n\nQC Testing\nFrontend  is working\nBackend\nSuresh to get endpoints to Mel\n\nGuna to connect with Kiran to  \n\nWorkbench\n\n- Jason to get up and running in QA today\n- User creation\n- Scott and Chirayu to do testing  \n\n### Not in attendance\n\n- Hieu, Jason and Guna\n\nIf we could deliver something tomorrow,\n how could we slice it?  We need to think about this differently  \n\n PCGQC-34\n\n- Break off into smaller pieces  \n- If Matt or Rajesh were to ask me about the launch, I would say we are good, based on what people have told me, but I could NOT quanitify it, this scares me\n- Stay organized\n- Get the team talking, and get them engaged, they tend to be waiting for me to say something\n- Showing cameras and backgrounds, people tend to want to talk about their stuff\n- Ryan will look into removing this roadblock of Jira standards and seeing where we are with this\n- Happy hours and games, team builders outside of team hours 4 -5,6\n","n":0.043}}},{"i":56,"$":{"0":{"v":"05","n":1}}},{"i":57,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 28 Stand Up|dpd.pcg-b.2022.06.28.stand-up]]\n\n| Key                 | Assignee                     | Notes                                                                           | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                       | **TO DO**             |\n| @stories.POW-227    | @people.SureshThota          |                                                                                 | Testing; UI Front End |\n| @stories.POW-232    | @people.SoumyajitPaul       |                                                                                 | Testing; UI Front End |\n| @stories.POW-228    | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| @stories.POW-39     | @people.EarlSioson           |                                                                                 | Testing; UI Front End |\n| @stories.POW-223    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-225    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.POW-226    | Assignee                     |                                                                                 | Testing; UI Front End |\n| @stories.PCG-98     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-97     | @people.MelClifford          |                                                                                 | Testing; UI Front End |\n| @stories.PCG-99     | @people.HieuNgo              |                                                                                 | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**       |\n| @stories.POW-145    | @people.Ameya                | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API |\n| @stories.POW-230    | @people.EarlSioson           |                                                                                 | Microservices and API |\n| @stories.PCGQC-2    | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         |                       |\n| @stories.PCGQC-34   | Assignee                     | Is being reviewed by Suresh and will be tested by Scott                         | Microservices and API |\n| @stories.PCGQC-1    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-131  | @people.RahulLange           | Will be working with Jason, follow-up                                           |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**           |\n| @stories.POW-177    | @people.HieuNgo              | Justin, has identified data that will be shared during stand up on Wednesday    |                       |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**           |\n| @stories.POW-130    | @people.BrianComiskey        | Brian will be testing in Dev later                                              | Testing; UI Front End |\n| @stories.POW-215    | @people.EarlSioson           | Brian will be testing in Dev later                                              |                       |\n| @stories.POW-229    | @people.EarlSioson           | Brian will be testing in Dev later                                              |                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**           |\n| **DONE**            | **DONE**                     | **DONE**                                                                        | **DONE**              |\n| @stories.POW-152    | @people.GunabalanAnatharajan | There is a Dell Boomi issue, Jason and Guna are on it                           |                       |\n| @stories.POW-202    | @people.SoumyajitPaul       | Testing can be completed today                                                  | Integration           |\n| @stories.POW-40     | @people.HieuNgo              |                                                                                 |                       |\n| @stories.PCGQC-3    | Assignee                     |                                                                                 |                       |\n","n":0.049}}},{"i":58,"$":{"0":{"v":"Product Planning Session","n":0.577},"1":{"v":"\n@people.ChirayuPoundarik wants to have these meetings to discuss the *quarterly increments* a brainstorm\n\nWant a uniformed experience for the blenders\n\nNeed to communicate Value and not features!\n","n":0.2}}},{"i":59,"$":{"0":{"v":"06","n":1}}},{"i":60,"$":{"0":{"v":"28","n":1}}},{"i":61,"$":{"0":{"v":"June 28 Stand Up","n":0.5},"1":{"v":"\n### Previous\n\n[[June 27 Stand Up|dpd.pcg-b.2022.06.27.stand-up]]\n\n| Key                 | Assignee                     | Notes                                                                           | Components            |\n| ------------------- | ---------------------------- | ------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                    | **TO DO**                                                                       | **TO DO**             |\n| @stories.POW-145    | @people.SoumyajitPaul       | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API |\n| @stories.PCGQC-9    | Assignee                     |                                                                                 | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**       |\n| @stories.POW-152    | @people.GunabalanAnatharajan | There is a Dell Boomi issue, Jason and Guna are on it                           |                       |\n| @stories.POW-199    | @people.HieuNgo              | Justin and Hieu and him will analyze the data                                   | UX                    |\n| @stories.PCGQC-2    | Assignee                     | Meeting with Suresh, will move to testing, dev infrastructure created           |                       |\n| @stories.PCGQC-34   | Assignee                     | Meeting with Suresh, will move to testing, dev infrastructure created           | Microservices and API |\n| @stories.PCGQC-3    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-1    | Assignee                     |                                                                                 |                       |\n| @stories.PCGQC-131  | @people.RahulLange           | Will be working with Jason, follow-up                                           |                       |\n| @stories.PCGQC-135  | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End |\n| **IN REVIEW**       | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**           |\n| @stories.POW-177    | @people.HieuNgo              |                                                                                 |                       |\n| **TESTING**         | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**           |\n| @stories.POW-202    | @people.SoumyajitPaul       | Testing can be completed today                                                  | Integration           |\n| @stories.POW-215    | @people.EarlSioson           | Testing API later today                                                         |                       |\n| @stories.POW-130    | @people.BrianComiskey        | Will meet with Suresh on this one                                               | Testing; UI Front End |\n| **READY TO DEPLOY** | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**           |\n| @stories.POW-222    | @people.JustinDruga          | Hieu sent an email to Kristina, asked to forward to me                          |                       |\n| **DONE**            | **DONE**                     | **DONE**                                                                        | **DONE**              |\n| @stories.POW-139    | @people.GunabalanAnatharajan |                                                                                 | Microservices and API |\n| @stories.POW-146    | @people.GunabalanAnatharajan |                                                                                 | Microservices and API |\n| @stories.POW-181    | @people.EarlSioson           |                                                                                 | UI Front End          |\n\nSimilar card for POW-202 will be needed for QC\n\nDo we understand when we say \"parent card\"?\n\nTasks and subtasks\n\nDefintion of done and what's demoable\n","n":0.053}}},{"i":62,"$":{"0":{"v":"Retro","n":1},"1":{"v":"\n\nA lot of unknowns as we migrate to QA to Prod\n- This slowed down everything\n- We can get to Dev much faster\n\n- Confusion of business, they were out of sync\n  - There was frustration to see this\n  - We will have conflicting business requirement\n  - PO to sit down with business folks ahead of meeting rather than have a discussion and negotiation in that meeting\n  - Lack of relationship and investment in that \n  - Feedback structure up? with PO and Business, with lack of time with PO, we need to get their buy-in\n\n\n- Reach out to Mel and help him with figuring out when to reach out to Earl\n  - Switch Mel's focus to React\n- Maybe even turn the camera on for the first 3 minutes\n\n- Developers can see meetings as a waste of time, it's time not getting development done\n  - Stagger meetings\n- Stand-ups are vauable\n- Backlog grooming not seem super important\n- Getting things done, and not being able to focus is frustrating\n- Sprint planning not super valuable\n- \"I want to know why I'm doing this card\"\n- \"Give me the requirements.\" \n\nBacklog Grooming and Sprint Planning - Suresh\nStand-ups and Retros - everyone\n\nDemos - optional because they're recorded\n\nMel needs to eat lunch, give him the opportunity","n":0.07}}},{"i":63,"$":{"0":{"v":"27","n":1}}},{"i":64,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 24 Stand Up|dpd.pcg-b.2022.06.24.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                      | Components            |\n| ------------------- | -------------------------------------------- | ---------------------------- | -------------------------------------------------------------------------------------------------------------------------- | --------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                  | **TO DO**             |\n| @stories.POW-145    | Blender Admin API                            | @people.SoumyajitPaul       | Ameya asked for the design structure for the API to proceed with the QA testing                                            | Microservices and API |\n| @stories.PCGQC-9    | Print Batch Panel Label                      | Assignee                     |                                                                                                                            | Testing; UI Front End |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                | **ON HOLD**           |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                            | **IN PROGRESS**       |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan | Endpoints have been validated, OAuth working, Jason to have meeting with Murali on Wednesday, SQL db scripts need to added |                       |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | Once Justin is back, Hieu and him will analyze the data                                                                    | UX                    |\n| @stories.POW-215    | UI Changes for MVP Stage 3                   | @people.EarlSioson           | Suresh to reach out to Earl                                                                                                |                       |\n| @stories.POW-177    | UX Design and Research for PCG               | @people.HieuNgo              |                                                                                                                            |                       |\n| @stories.POW-222    | Logos & Favicons                             | @people.JustinDruga          | Hieu is on this, the                                                                                                       |                       |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     | Meeting with Suresh, will move to testing, dev infrastructure created                                                      |                       |\n| @stories.PCGQC-34   | Capture Test Results - Stage 1               | Assignee                     | Meeting with Suresh, will move to testing, dev infrastructure created                                                      | Microservices and API |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                            |                       |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     | Scott sent email with Screenshot to Sam and others, requesting feedback on UI                                              |                       |\n| @stories.PCGQC-131  | Infrastructure Creation for BaT QC           | @people.RahulLange           | Will be working with Jason, follow-up                                                                                      |                       |\n| @stories.PCGQC-135  | Review Oracle QC Items                       | @people.ChirayuPoundarik     |                                                                                                                            | Testing; UI Front End |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                              | **ON HOLD**           |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                | **BLOCKED**           |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Workbench endpoints will be tested in Dev, then test in QA                                                                 | Integration           |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        | Will meet with Suresh on this one                                                                                          | Testing; UI Front End |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                        | **BLOCKED**           |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                | **BLOCKED**           |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                   | **DONE**              |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Brian had access issues                                                                                                    | Microservices and API |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                            | Microservices and API |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be moved to Done                                                                                                      | UI Front End          |\n\nJason got pulled into other things that took him away from the QC project\n","n":0.044}}},{"i":65,"$":{"0":{"v":"24","n":1}}},{"i":66,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 23 Stand Up|dpd.pcg-b.2022.06.23.stand-up]]\n\nRyan will be in Tuesday morning\n\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                           | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | ------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                       | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | @people.SoumyajitPaul       | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                 | Testing; UI Front End              |\n| @stories.PCGQC-9    | Print Batch Panel Label                      | Assignee                     |                                                                                 | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**                    |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan | Once demo is completed, will move to Testing                                    |                                    |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | User interview yesterday                                              | UX                                 |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Will be completed after the demo                                                | Integration                        |\n| @stories.POW-215    | UI Changes for MVP Stage 3                   | @people.EarlSioson           |                                                                                 |                                    |\n| @stories.POW-177    | UX Design and Research for PCG               | @people.HieuNgo              |                                                                                 |                                    |\n| @stories.POW-222    | Logos & Favicons                             | @people.JustinDruga          | Hieu is on this, the                                                            |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     | Rahul is out sick, we will resume subtask on Monday                             |                                    |\n| @stories.PCGQC-34   | Capture Test Results - Stage 1               | Assignee                     | Rahul is out sick, we will resume subtask on Monday                             | Microservices and API              |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                 |                                    |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     | Scott sent email with Screenshot to Sam and others, requesting feedback on UI   |                                    |\n| @stories.PCGQC-131  | Infrastructure Creation for BaT QC           | @people.RahulLange           | Will be working with Jason, follow-up                                           |                                    |\n| @stories.PCGQC-135  | Review Oracle QC Items                       | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**                        |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                        | **DONE**                           |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Brian had access issues                                                         | Microservices and API              |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                 | Microservices and API              |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be moved to Done                                                           | UI Front End                       |\n\nPOW-213, convert to task and move to backlog\n\n- [x] Follow up with Hieu on the user interviews from yesterday\n  \nOnce we get Sam's blessing, we will be 99% complete for the QC Product\n\nChirayu to send data structures to Scott and Suresh for QC Product\n","n":0.045}}},{"i":67,"$":{"0":{"v":"23","n":1}}},{"i":68,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 22 Stand Up|dpd.pcg-b.2022.06.22.stand-up]]\n\n### Notes\n\n- [x] Share with Team the training for next Wednesday and Agile coach \n\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                           | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | ------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                       | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | @people.SoumyajitPaul       | Ameya asked for the design structure for the API to proceed with the QA testing | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                 | Testing; UI Front End              |\n| @stories.PCGQC-9    | Print Batch Panel Label                      | Assignee                     |                                                                                 | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                     | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                 | **IN PROGRESS**                    |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan | Sub-task - 156 will be done today, will be ready for demo tomorrow with Dan     |                                    |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | User interview yesterday and today                                              | UX                                 |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Mapping will be reviewed today and completed today                              | Integration                        |\n| @stories.POW-215    | UI Changes for MVP Stage 3                   | @people.EarlSioson           |                                                                                 |                                    |\n| @stories.POW-177    | UX Design and Research for PCG               | @people.HieuNgo              |                                                                                 |                                    |\n| @stories.POW-222    | Logos & Favicons                             | @people.JustinDruga          | Hieu is on this, the                                                            |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     | Waiting on DB and test data                                                     |                                    |\n| @stories.PCGQC-34   | Capture Test Results - Stage 1               | Assignee                     |                                                                                 | Microservices and API              |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                 |                                    |\n| @stories.POW-8      | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Will be moved to testing today                                                  |                                    |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     | Scott will testing the sub-tasks                                                |                                    |\n| @stories.PCGQC-131  | Infrastructure Creation for BaT QC           | @people.RahulLange           | Will be working with Jason, follow-up                                           |                                    |\n| @stories.PCGQC-135  | Review Oracle QC Items                       | @people.ChirayuPoundarik     |                                                                                 | Testing; UI Front End              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                   | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                     | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Brian had access issues                                                         | Microservices and API              |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                 | Microservices and API              |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested by Brian in Dev                                                  | UI Front End                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                             | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                     | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                        | **DONE**                           |\n\n\n","n":0.046}}},{"i":69,"$":{"0":{"v":"22","n":1}}},{"i":70,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 21 Stand Up|dpd.pcg-b.2022.06.21.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                                         | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                                     | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                               | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                               | Testing; UI Front End              |\n| @stories.PCGQC-135    | Review Oracle QC Items                       | @people.ChirayuPoundarik     |                                                                                                                                               | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                                   | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                               | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Mapping will be reviewed today and completed today                                                                                            | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | Technical review will be done                                                                                                                 | UX                                 |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                               | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan | Sub-task - 156 will be done today, will be moved to testing, Jason and Guna are in workshop today and tomorrow, Suresh to follow up with them |                                    |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                               |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     | Waiting on DB and test data                                                                                                                   |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                               |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     | Waiting on DB and test data                                                                                                                   | Microservices and API              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                                 | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                                   | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Brian had access issues                                                                                                                       | Microservices and API              |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested by Brian in Dev                                                                                                                | UI Front End                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                                           | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                                   | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                                      | **DONE**                           |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                               | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                               | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                               | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                               |                                    |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Converted to a subtask                                                                                                                        |                                    |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                               | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                               |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                               |                                    |\n","n":0.044}}},{"i":71,"$":{"0":{"v":"21","n":1}}},{"i":72,"$":{"0":{"v":"Whos Who in Project","n":0.5},"1":{"v":"\n\n- Ebonie reported to Deborah Minor (Data), but will be moving over with Ari Martinez (Intake)\n  - Will be getting work intake with Aurora \n\nLorene McMahon (Color Data)\nJen Kiffer (Rollout, Training, Support)","n":0.177}}},{"i":73,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 17 Stand Up|dpd.pcg-b.2022.06.17.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                                         | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                                     | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                               | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                               | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                                   | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                               | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | Mapping will be reviewed today and completed today                                                                                            | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | Technical review will be done                                                                                                                 | UX                                 |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                               | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan | Sub-task - 156 will be done today, will be moved to testing, Jason and Guna are in workshop today and tomorrow, Suresh to follow up with them |                                    |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                               |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     | Waiting on DB and test data                                                                                                                   |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                               |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     | Waiting on DB and test data                                                                                                                   | Microservices and API              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                                 | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                                   | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Brian did API with Guna and Chirayu                                                                                                           | Microservices and API              |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested by Brian in Dev                                                                                                                | UI Front End                       |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                                           | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                                   | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                                      | **DONE**                           |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                               | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                               | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                               | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                               | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                               |                                    |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Converted to a subtask                                                                                                                        |                                    |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                               | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                               |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                               |                                    |\n\n\n\n@people.SureshThota showed the Workbench app, we don't have a Favicon yet, it still shows the React logo\n\nScott and Hieu to get the static data in the Figma screen for the demo \n","n":0.043}}},{"i":74,"$":{"0":{"v":"17","n":1}}},{"i":75,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 15 Stand Up|dpd.pcg-b.2022.06.15.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                                                                                                     | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                                                                                                 | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                                                                                           | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                                                                                               | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                                                                                           | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | There may be a risk, and Paul will share with Guna, Azure SQL possible performance issue, Paul will be working with Boomi on this                                                                         | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              | Technical review will be done                                                                                                                                                                             | UX                                 |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | @people.GunabalanAnatharajan |                                                                                                                                                                                                           |                                    |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested once it's been deployed                                                                                                                                                                    | UI Front End                       |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     |                                                                                                                                                                                                           | Microservices and API              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                                                                                             | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                                                                                               | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Chirayu and Brian completed testing yesterday, will review with Guna on UI confirmation, appears to be out of office, all microservices need to in APIM, there's no sandbox, but there will be one in Dev | Microservices and API              |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                                                                                                       | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                                                                                               | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                                                                                                  | **DONE**                           |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                                                                                           | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                                                                                           | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                                                                                           |                                    |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Converted to a subtask                                                                                                                                                                                    |                                    |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                                                                                           | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                                                                                           |                                    |\n\n\n@POW-215 - this will not be split, we will move forward with MVP\n\n---\n@people.MattWalter  \n\n- Understand priority to business\n- Understanding the dependencies \n- If there are complex components, try and do that earlier in the Sprint\n\n---\n\n- [x] POW-146, follow up with Guna get this by EoD\n","n":0.042}}},{"i":76,"$":{"0":{"v":"15","n":1}}},{"i":77,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 15 Stand Up|dpd.pcg-b.2022.06.14.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                                                                                                     | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                                                                                                 | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                                                                                           | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                                                                                               | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                                                                                           | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | There may be a risk, and Paul will share with Guna, Azure SQL possible performance issue, Paul will be working with Boomi on this                                                                         | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              |                                                                                                                                                                                                           | UX                                 |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested once it's been deployed                                                                                                                                                                    | UI Front End                       |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     |                                                                                                                                                                                                           | Microservices and API              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                                                                                             | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                                                                                               | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Chirayu and Brian completed testing yesterday, will review with Guna on UI confirmation, appears to be out of office, all microservices need to in APIM, there's no sandbox, but there will be one in Dev | Microservices and API              |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                                                                                                       | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                                                                                               | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                                                                                                  | **DONE**                           |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                                                                                           | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                                                                                           | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                                                                                           | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                                                                                           |                                    |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Converted to a subtask                                                                                                                                                                                    |                                    |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                                                                                           | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                                                                                           |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                                                                                           |                                    |\n\n- @people.ScottStorm is working on QC area - technical doc\n  - Organize info from Jira and Mural for frontend components\n  - From a technical perspective\n\n","n":0.043}}},{"i":78,"$":{"0":{"v":"14","n":1}}},{"i":79,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 13 Stand Up|dpd.pcg-b.2022.06.13.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                             | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                         | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                   | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                   | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                       | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                   | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | There may be a risk, and Paul will share with Guna, Azure SQL possible performance issue, Paul will be working with Boomi on this | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              |                                                                                                                                   | UX                                 |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                   | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | Assignee                     |                                                                                                                                   |                                    |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | Will be tested once it's been deployed                                                                                            | UI Front End                       |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     |                                                                                                                                   | Microservices and API              |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                     | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                       | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Chirayu and Brian completed testing yesterday, will review with Guna                                                              | Microservices and API              |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                               | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                       | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                          | **DONE**                           |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                   | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                   |                                    |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                   | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                   | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                   | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                   |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                   |                                    |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Converted to a subtask                                                                                                            |                                    |\n\n- UX to get QC designs to be approved  \n","n":0.045}}},{"i":80,"$":{"0":{"v":"13","n":1}}},{"i":81,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 10 Stand Up|dpd.pcg-b.2022.06.10.stand-up]]\n\n| Key                 | Summary                                      | Assignee                     | Notes                                                                                                                             | Components                         |\n| ------------------- | -------------------------------------------- | ---------------------------- | --------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**           | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                                                         | **TO DO**                          |\n| @stories.POW-145    | Blender Admin API                            | Assignee                     |                                                                                                                                   | Microservices and API              |\n| @stories.POW-130    | Test data / API for UI development           | @people.BrianComiskey        |                                                                                                                                   | Testing; UI Front End              |\n| **ON HOLD**         | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                                                                       | **ON HOLD**                        |\n| **IN PROGRESS**     | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                                                                   | **IN PROGRESS**                    |\n| @stories.POW-202    | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | There may be a risk, and Paul will share with Guna, Azure SQL possible performance issue, Paul will be working with Boomi on this | Integration                        |\n| @stories.POW-199    | Workbench Card                               | @people.HieuNgo              |                                                                                                                                   | UX                                 |\n| @stories.PCGQC-1    | Customer Details                             | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-2    | Order Details                                | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-3    | MVP Test Data                                | Assignee                     |                                                                                                                                   |                                    |\n| @stories.PCGQC-34   | Capture Test Results                         | Assignee                     |                                                                                                                                   | Microservices and API              |\n| @stories.POW-146    | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                                                                   | Microservices and API              |\n| @stories.POW-152    | Infrastructure Creation for BAT App          | Assignee                     |                                                                                                                                   |                                    |\n| @stories.POW-181    | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           |                                                                                                                                   | UI Front End                       |\n| @stories.POW-214    | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          |                                                                                                                                   |                                    |\n| **IN REVIEW**       | **IN REVIEW**                                | **IN REVIEW**                | **IN REVIEW**                                                                                                                     | **ON HOLD**                        |\n| **TESTING**         | **TESTING**                                  | **TESTING**                  | **TESTING**                                                                                                                       | **BLOCKED**                        |\n| @stories.POW-139    | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Chirayu and Brian are testing this, should be completed by tomorrow                                                               | Microservices and API              |\n| **READY TO DEPLOY** | **READY TO DEPLOY**                          | **READY TO DEPLOY**          | **READY TO DEPLOY**                                                                                                               | **BLOCKED**                        |\n| **BLOCKED**         | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                                                                       | **BLOCKED**                        |\n| **DONE**            | **DONE**                                     | **DONE**                     | **DONE**                                                                                                                          | **DONE**                           |\n| @stories.PCGQC-70   | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                                                                   | UI Front End                       |\n| @stories.PCGQC-68   | Login Process                                | @people.SureshThota          |                                                                                                                                   |                                    |\n| @stories.POW-22     | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                                                                   | Microservices and API              |\n| @stories.POW-142    | AD Authentication POC for React App          | @people.SureshThota          |                                                                                                                                   | Microservices and API;UI Front End |\n| @stories.POW-138    | Workorder Query Microservice                 | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-144    | Operator LOV API                             | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-141    | User Tiles details API                       | @people.MelClifford          |                                                                                                                                   | Microservices and API              |\n| @stories.POW-131    | MUI components design and React Theming      | @people.EarlSioson           |                                                                                                                                   | UI Front End;UX                    |\n| @stories.POW-157    | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                                                                   |                                    |\n| @stories.PCGQC-87   | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                                                                   |                                    |\n\n- @people.BrianComiskey will touch base with @people.SureshThota on getting set up for testing\n\n- We may not be ready until the end of the week to do the Workbench demo\n- We are not most likely on target for these \n\n- We went through another team to get a (Workbench) DB, we had no idea that it was going to take this long\n","n":0.043}}},{"i":82,"$":{"0":{"v":"10","n":1}}},{"i":83,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 9 Stand Up|dpd.pcg-b.2022.06.09.stand-up]]\n\n| Key               | Summary                                      | Assignee                     | Notes                                                                                    | Components                         |\n| ----------------- | -------------------------------------------- | ---------------------------- | ---------------------------------------------------------------------------------------- | ---------------------------------- |\n| **TO DO**         | **TO DO**                                    | **TO DO**                    | **TO DO**                                                                                | **TO DO**                          |\n| @stories.POW-145  | Blender Admin API                            | Assignee                     |                                                                                          | Microservices and API              |\n| @stories.POW-130  | Test data / API for UI development           | @people.BrianComiskey        |                                                                                          | Testing; UI Front End              |\n| **IN PROGRESS**   | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                                                          | **IN PROGRESS**                    |\n| @stories.POW-202  | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       | There may be a risk, and Paul will share with Guna, Azure SQL possible performance issue | Integration                        |\n| @stories.POW-199  | Workbench Card                               | @people.HieuNgo              |                                                                                          | UX                                 |\n| @stories.PCGQC-1  | Customer Details                             | Assignee                     |                                                                                          |                                    |\n| @stories.PCGQC-2  | Order Details                                | Assignee                     |                                                                                          |                                    |\n| @stories.PCGQC-3  | MVP Test Data                                | Assignee                     |                                                                                          |                                    |\n| @stories.PCGQC-34 | Capture Test Results                         | Assignee                     |                                                                                          | Microservices and API              |\n| @stories.POW-139  | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Chirayu will be testing this                                                             | Microservices and API              |\n| @stories.POW-146  | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                                                          | Microservices and API              |\n| @stories.POW-152  | Infrastructure Creation for BAT App          | Assignee                     |                                                                                          |                                    |\n| @stories.POW-181  | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           |                                                                                          | UI Front End                       |\n| @stories.POW-214  | Add Basic Auth to WoQuery Microservices      | @people.MelClifford          | Added in 2 days ago                                                                                  |                                    |\n| **ON HOLD**       | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                                                              | **ON HOLD**                        |\n| **BLOCKED**       | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                                                              | **BLOCKED**                        |\n| **DONE**          | **DONE**                                     | **DONE**                     | **DONE**                                                                                 | **DONE**                           |\n| @stories.PCGQC-70 | QC - React UI App setup from Template        | @people.MelClifford          |                                                                                          | UI Front End                       |\n| @stories.PCGQC-68 | Login Process                                | @people.SureshThota          |                                                                                          |                                    |\n| @stories.POW-22   | APIM for Microservices                       | @people.SoumyajitPaul       |                                                                                          | Microservices and API              |\n| @stories.POW-142  | AD Authentication POC for React App          | @people.SureshThota          |                                                                                          | Microservices and API;UI Front End |\n| @stories.POW-138  | Workorder Query Microservice                 | @people.MelClifford          |                                                                                          | Microservices and API              |\n| @stories.POW-144  | Operator LOV API                             | @people.MelClifford          |                                                                                          | Microservices and API              |\n| @stories.POW-141  | User Tiles details API                       | @people.MelClifford          |                                                                                          | Microservices and API              |\n| @stories.POW-131  | MUI components design and React Theming      | @people.EarlSioson           |                                                                                          | UI Front End;UX                    |\n| @stories.POW-157  | Web application Hosting in Azure Web         | @people.SureshThota          |                                                                                          |                                    |\n| @stories.PCGQC-87 | Usability Contact List                       | @people.ChirayuPoundarik     |                                                                                          |                                    |\n","n":0.049}}},{"i":84,"$":{"0":{"v":"Qc Mvp Reqs","n":0.577},"1":{"v":"\n@people.SamanthaGrayshaw, @people.ScottStorm, @people.SureshThota, @stakeholder.MarianneBrooks, @people.BrianComiskey, @people.ChirayuPoundarik\n\n### Notes\n\n- The team needs to understand these cards are not 1:1 with Jira\n- We need to figure out the timing of the project\n\n> \"We are marching towards [Hieu's] design\"  \nSam\n\n### Action Items\n\n- [x] Update the \"stories\" in Jira to match this discussion","n":0.144}}},{"i":85,"$":{"0":{"v":"09","n":1}}},{"i":86,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[June 6 Stand Up|dpd.pcg-b.2022.06.06.stand-up]]\n\n| Key               | Summary                                      | Assignee                     | Notes                                            | Components                         |\n| ----------------- | -------------------------------------------- | ---------------------------- | ------------------------------------------------ | ---------------------------------- |\n| **TO DO**         | **TO DO**                                    | **TO DO**                    | **TO DO**                                        | **TO DO**                          |\n| @stories.POW-145  | Blender Admin API                            | Assignee                     |                                                  | Microservices and API              |\n| @stories.POW-130  | Test data / API for UI development           | @people.BrianComiskey        |                                                  | Testing; UI Front End              |\n| **IN PROGRESS**   | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                  | **IN PROGRESS**                    |\n| @stories.POW-202  | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       |                                                  | Integration                        |\n| @stories.PCGQC-70 | QC - React UI App setup from Template        | @people.MelClifford          |                                                  | UI Front End                       |\n| @stories.POW-199  | Workbench Card                               | @people.HieuNgo              | should be unblocked by EoD today                 | UX                                 |\n| @stories.PCGQC-1  | Customer Details                             | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-2  | Order Details                                | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-3  | MVP Test Data                                | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-34 | Capture Test Results                         | Assignee                     |                                                  | Microservices and API              |\n| @stories.POW-139  | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Needs to be redeployed                                                 | Microservices and API              |\n| @stories.POW-146  | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                  | Microservices and API              |\n| @stories.POW-152  | Infrastructure Creation for BAT App          | Assignee                     |                                                  |                                    |\n| @stories.POW-181  | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           |                                                  | UI Front End                       |\n| @stories.PCGQC-12 | Finalize the user stories for QC MVP         | @people.ScottStorm           |                                                  |                                    |\n| @stories.PCGQC-35 | QC MVP Product Requirements Documentation    | @people.ScottStorm           |                                                  |                                    |\n| **ON HOLD**       | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                      | **ON HOLD**                        |\n| **BLOCKED**       | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                      | **BLOCKED**                        |\n| **DONE**          | **DONE**                                     | **DONE**                     | **DONE**                                         | **DONE**                           |\n| @stories.PCGQC-68 | Login Process                                | @people.SureshThota          |                                                  |                                    |\n| @stories.POW-22   | APIM for Microservices                       | @people.SoumyajitPaul       | Paul spoke with Ram, there's a meeting tomorrow. | Microservices and API              |\n| @stories.POW-142  | AD Authentication POC for React App          | @people.SureshThota          |                                                  | Microservices and API;UI Front End |\n| @stories.POW-138  | Workorder Query Microservice                 | @people.MelClifford          | should be completed by EoD                       | Microservices and API              |\n| @stories.POW-144  | Operator LOV API                             | @people.MelClifford          |                                                  | Microservices and API              |\n| @stories.POW-141  | User Tiles details API                       | @people.MelClifford          |                                                  | Microservices and API              |\n| @stories.POW-131  | MUI components design and React Theming      | @people.EarlSioson           |                                                  | UI Front End;UX                    |\n| @stories.POW-157  | Web application Hosting in Azure Web         | @people.SureshThota          |                                                  |                                    |\n\nWe should be able to demo in Dev at the very least\n\n- [x] POW-210, 211 convert to subtasks and link to UI development part 2 card\n- [x] Delete PCGQC-12, PCGQC-35\n\n- What is our Definiton of Done?!?!?!\n\n- [x] Update board based on conversation\n  - Keep On-Hold,\n  - Columns show what we need to talk about\n  - Testing and Ready to Deploy are subtasks for \"In-Progress\"\n  - In Review is needed\n  - This is for the team's benefit\n","n":0.045}}},{"i":87,"$":{"0":{"v":"08","n":1}}},{"i":88,"$":{"0":{"v":"Quick Touchpoint","n":0.707},"1":{"v":"\n@people.ChirayuPoundarik, @people.ScottStorm\n\nChirayu reviewed the document \nJuly 19 - Workbench launch \nJuly 26 deadline for QC MVP\n","n":0.25}}},{"i":89,"$":{"0":{"v":"06","n":1}}},{"i":90,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[dpd.pcg-b.2022.06.03.stand-up]]\n\n| Key               | Summary                                      | Assignee                     | Notes                                            | Components                         |\n| ----------------- | -------------------------------------------- | ---------------------------- | ------------------------------------------------ | ---------------------------------- |\n| **TO DO**         | **TO DO**                                    | **TO DO**                    | **TO DO**                                        | **TO DO**                          |\n| @stories.PCGQC-68 | Login Process                                | @people.SureshThota          |                                                  |                                    |\n| @stories.POW-145  | Blender Admin API                            | Assignee                     |                                                  | Microservices and API              |\n| @stories.POW-130  | Test data / API for UI development           | @people.BrianComiskey        |                                                  | Testing; UI Front End              |\n| @stories.POW-202  | BaT App Integration with StoreP and Aurora   | @people.SoumyajitPaul       |                                                  | Integration                        |\n| **IN PROGRESS**   | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                                  | **IN PROGRESS**                    |\n| @stories.PCGQC-70 | QC - React UI App setup from Template        | @people.MelClifford          |                                                  | UI Front End                       |\n| @stories.POW-199  | Workbench Card                               | @people.HieuNgo              | should be unblocked by EoD today                 | UX                                 |\n| @stories.PCGQC-1  | Customer Details                             | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-2  | Order Details                                | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-3  | MVP Test Data                                | Assignee                     |                                                  |                                    |\n| @stories.PCGQC-34 | Capture Test Results                         | Assignee                     |                                                  | Microservices and API              |\n| @stories.POW-138  | Workorder Query Microservice                 | @people.MelClifford          | should be completed by EoD                       | Microservices and API              |\n| @stories.POW-139  | Workorder transaction Microservice           | @people.GunabalanAnatharajan |                                                  | Microservices and API              |\n| @stories.POW-142  | AD Authentication POC for React App          | @people.SureshThota          |                                                  | Microservices and API;UI Front End |\n| @stories.POW-146  | WB Sequence Number Update API                | @people.GunabalanAnatharajan |                                                  | Microservices and API              |\n| @stories.POW-152  | Infrastructure Creation for BAT App          | Assignee                     |                                                  |                                    |\n| @stories.POW-181  | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           |                                                  | UI Front End                       |\n| **ON HOLD**       | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                                      | **ON HOLD**                        |\n| @stories.POW-22   | APIM for Microservices                       | @people.SoumyajitPaul       | Paul spoke with Ram, there's a meeting tomorrow. | Microservices and API              |\n| **BLOCKED**       | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                                      | **BLOCKED**                        |\n| @stories.PCGQC-12 | Finalize the user stories for QC MVP         | @people.ScottStorm           |                                                  |                                    |\n| @stories.PCGQC-35 | QC MVP Product Requirements Documentation    | @people.ScottStorm           |                                                  |                                    |\n| **DONE**          | **DONE**                                     | **DONE**                     | **DONE**                                         | **DONE**                           |\n| @stories.POW-144  | Operator LOV API                             | @people.MelClifford          |                                                  | Microservices and API              |\n| @stories.POW-141  | User Tiles details API                       | @people.MelClifford          |                                                  | Microservices and API              |\n| @stories.POW-131  | MUI components design and React Theming      | @people.EarlSioson           |                                                  | UI Front End;UX                    |\n| @stories.POW-157  | Web application Hosting in Azure Web         | @people.SureshThota          |                                                  |                                    |\n\n- @people.HieuNgo has the Functional Requirements design doc for QC Product and will share with @people.ScottStorm\n\n- [x] Follow up with @people.BrianComiskey on the demo for Workbench on Tuesday the 14th\n- [x] Follow up with @people.ChirayuPoundarik on getting the contacts to Hieu for the QC Product research, Hieu needs about 3 contacts\n","n":0.046}}},{"i":91,"$":{"0":{"v":"Bat Workbench UX Discussion","n":0.5},"1":{"v":"\n### People\n\n- @people.SureshThota\n- @people.EarlSioson\n- @people.HieuNgo\n- @people.BrianComiskey\n- @people.JustinDruga\n- @people.ScottStorm\n- @people.MelClifford\n\n### Notes\n\n- Want alignment with the Dev team after the audit  \n- Hieu and Justin worked on this in Figma\n- The Cancel option will most likely be used sparingly\n  - Some users might only be able to Cancel\n\nKUDOS  \n\n- Hieu, Justin, Suresh, Earl for audit review very thorough and audit review and discussio[[n|scratch.2022.06.09.170259.n]]","n":0.128}}},{"i":92,"$":{"0":{"v":"03","n":1}}},{"i":93,"$":{"0":{"v":"Status Update","n":0.707},"1":{"v":"@people.MattWalter\n\n- User stories are too technical\n- Wants them to use Personas, journeys\n- Focus on the bigger value\n- This all needs to be baked in\n- Will be pushing for the Facility experience\n- Need to drive into the logic and security model\n  - What data they are able to see\n- The UI development is integrated with the stories and comments are added from GitHub\n- We don't have a \"Quality\" step\n  - We are missing the Quality aspect\n- Unit testing\n  - At the atomic level, functions\n- Integration testing\n- Test engineer is needed, we want as much automation\n- Dedicated tester across the teams!!!\n  - QA lead needed too, testing approach, strategy\n  - IMPORTANT Come up with the strategy\n- We need these teams fully staffed\n- I shared with Matt that we don't have a dedicated Product Owner\n  - He's meeting with Laura K. to discuss some of these things\n  - Need a dedicated PO\n    - Need to be writing the functional user stories\n  - Maybe a dedicated Product Manager\n- We need to be working ahead of the team, having the backlog grooming sessions\n- We are getting an agile coach at the end of June\n  - We can bounce ideas off of them\n- Let's start with the WHY! \n  - \"We think if we build this\"\n  - IMPORTANT Create hypotheses and radiate this\n  - How do we work towards proving, validating these?\n    - How do we measure these things\n- Move towards a Product team!!!! \n- When people are passionate their work shows it\n- [x] List out the Risks\n  - [x] PO\n  - [x] QA Testers\n  - [x] Security, roles\n    - [x] UI experience\n    - [x] Integrations\n    - [x] Data\n\n- Keep it simple, clean, we can all read and digest, owners and answers \n","n":0.059}}},{"i":94,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n[[June 2 Stand up | dpd.pcg-b.2022.06.02.stand-up]]\n\n| Key               | Summary                                      | Assignee                     | Components                         |\n| ----------------- | -------------------------------------------- | ---------------------------- | ---------------------------------- |\n| **TO DO**         | **TO DO**                                    | **TO DO**                    | **TO DO**                          |\n| @stories.PCGQC-68 | Login Process                                | @people.SureshThota          |                                    |\n| @stories.PCGQC-70 | QC - React UI App setup from Template        | @people.MelClifford          | UI Front End                       |\n| @stories.POW-145  | Blender Admin API                            | Assignee                     | Microservices and API              |\n| @stories.POW-199  | Workbench Card                               | @people.HieuNgo              | UX                                 |\n| **IN PROGRESS**   | **IN PROGRESS**                              | **IN PROGRESS**              | **IN PROGRESS**                    |\n| @stories.PCGQC-1  | Customer Details                             | Assignee                     |                                    |\n| @stories.PCGQC-2  | Order Details                                | Assignee                     |                                    |\n| @stories.PCGQC-3  | MVP Test Data                                | Assignee                     |                                    |\n| @stories.PCGQC-34 | Capture Test Results                         | Assignee                     | Microservices and API              |\n| @stories.POW-131  | MUI components design and React Theming      | @people.EarlSioson           | UI Front End;UX                    |\n| @stories.POW-138  | Workorder Query Microservice                 | @people.MelClifford          | Microservices and API              |\n| @stories.POW-139  | Workorder transaction Microservice           | @people.GunabalanAnatharajan | Microservices and API              |\n| @stories.POW-141  | User Tiles details API                       | @people.MelClifford          | Microservices and API              |\n| @stories.POW-142  | AD Authentication POC for React App          | @people.SureshThota          | Microservices and API;UI Front End |\n| @stories.POW-144  | Operator LOV API                             | @people.MelClifford          | Microservices and API              |\n| @stories.POW-146  | WB Sequence Number Update API                | @people.GunabalanAnatharajan | Microservices and API              |\n| @stories.POW-157  | Web application Hosting in Azure Web         | @people.SureshThota          |                                    |\n| @stories.POW-152  | Infrastructure Creation for BAT App          | Assignee                     |                                    |\n| @stories.POW-181  | UI Development of PCG Workbench MVP (Part 2) | @people.EarlSioson           | UI Front End                       |\n| **ON HOLD**       | **ON HOLD**                                  | **ON HOLD**                  | **ON HOLD**                        |\n| @stories.POW-22   | APIM for Microservices                       | @people.SoumyajitPaul       | Microservices and API              |\n| **BLOCKED**       | **BLOCKED**                                  | **BLOCKED**                  | **BLOCKED**                        |\n| @stories.PCGQC-12 | Finalize the user stories for QC MVP         | @people.ScottStorm           |                                    |\n| @stories.PCGQC-35 | QC MVP Product Requirements Documentation    | @people.ScottStorm           |                                    |\n\n- Transaction microservice was deployed\n- @stories.PCGQC-70\n  - Suresh and Mel to meet with UI team to discuss\n- QC Testing\n  - Rahul\n- @stories.PCGQC-3\n  - @people.HieuNgo looking for feedback from @people.ScottStorm  \n- Chirayu Do we have Personas for QC Product?\n  - @personas.BrendanTheBlender\n- Global Business Process Manager - Kyle Rich has been hired\n  - Chirayu will get 3 blenders for Hieu to interview\n\n- [x] Figure out the WV room situation, snacks, food, drink, breaks\n","n":0.051}}},{"i":95,"$":{"0":{"v":"02","n":1}}},{"i":96,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous\n\n[[Sprint Planning | dpd.pcg-b.2022.06.01.sprint-planning]]\n\n| Key               | Summary                                   | Assignee                     | Components                         |\n| ----------------- | ----------------------------------------- | ---------------------------- | ---------------------------------- |\n| **TO DO**         | **TO DO**                                 | **TO DO**                    | **TO DO**                          |\n| @stories.PCGQC-68 | Login Process                             | @people.SureshThota          |                                    |\n| @stories.PCGQC-70 | QC - React UI App setup from Template     | @people.MelClifford          | UI Front End                       |\n| @stories.POW-145  | Blender Admin API                         | Assignee                     | Microservices and API              |\n| @stories.POW-199  | Workbench Card                            | @people.HieuNgo              | UX                                 |\n| **IN PROGRESS**   | **IN PROGRESS**                           | **IN PROGRESS**              | **IN PROGRESS**                    |\n| @stories.PCGQC-1  | Customer Details                          | Assignee                     |                                    |\n| @stories.PCGQC-2  | Order Details                             | Assignee                     |                                    |\n| @stories.PCGQC-3  | MVP Test Data                             | Assignee                     |                                    |\n| @stories.PCGQC-34 | Capture Test Results                      | Assignee                     | Microservices and API              |\n| @stories.POW-138  | Workorder Query Microservice              | @people.MelClifford          | Microservices and API              |\n| @stories.POW-139  | Workorder transaction Microservice        | @people.GunabalanAnatharajan | Microservices and API              |\n| @stories.POW-141  | User Tiles details API                    | @people.MelClifford          | Microservices and API              |\n| @stories.POW-142  | AD Authentication POC for React App       | @people.SureshThota          | Microservices and API;UI Front End |\n| @stories.POW-144  | Operator LOV API                          | @people.MelClifford          | Microservices and API              |\n| @stories.POW-146  | WB Sequence Number Update API             | @people.GunabalanAnatharajan | Microservices and API              |\n| @stories.POW-157  | Web application Hosting in Azure Web      | @people.SureshThota          |                                    |\n| **ON HOLD**       | **ON HOLD**                               | **ON HOLD**                  | **ON HOLD**                        |\n| @stories.POW-22   | APIM for Microservices                    | @people.SoumyajitPaul       | Microservices and API              |\n| **BLOCKED**       | **BLOCKED**                               | **BLOCKED**                  | **BLOCKED**                        |\n| @stories.PCGQC-12 | Finalize the user stories for QC MVP      | @people.ScottStorm           |                                    |\n| @stories.PCGQC-35 | QC MVP Product Requirements Documentation | @people.ScottStorm           |                                    |\n| @stories.POW-152  | Infrastructure Creation for BAT App       | Assignee                     |                                    |\n","n":0.059}}},{"i":97,"$":{"0":{"v":"01","n":1}}},{"i":98,"$":{"0":{"v":"Sprint Planning","n":0.707},"1":{"v":"\n- Chiaryu, to get final UI approval from Sam and Marianne\n\n- UX will focus more on the Workbench versus QC Product\n- Documents have been put in the Files section of a team chat, a Word doc has been\n- Brainstorm session on technical deep dive\n  - Figure out who needs to be involved\n- Workbench and UX are focusing on future state\n","n":0.129}}},{"i":99,"$":{"0":{"v":"07","n":1},"1":{"v":"\n- For carry over, this is common, which my teams still struggle wit\n","n":0.277}}},{"i":100,"$":{"0":{"v":"Story Alignment with Sam","n":0.5},"1":{"v":"\n- @people.SamanthaGrayshaw\n- @people.ScottStorm\n\n3 different Delta E's\n\n- What is the target date for MVP?\n  - Date for increment 2\n\n- Record all 3 glosses but only 1 is printed\n\n- Frog hopper example for gloss\n- 3 test types\n  - range, pass/fail, derived range off of target\n- Strictly within Workbench, no Aurora\n\n- Save vs. complete\n  - Only a label should be printed when it's \"Complete\"\n  - Print things that won't change, print only saved things\n  - Save as you go, so you can print as you go\n- Let's get the labels out there to our facilities get some feedback\n\n- Figure out how it's used and build it based off of that\n\n- Uvilten has helped the Zebra label and Suresh will need to knowledge share with him\n\n- Invite Sam to stand-up when we create a new Story!!!!\n  - Put these new stories into the Thoughtboard\n\n### Questions for Marianne from Sam\n\n@stakeholder.MarianneBrooks\n\n1. What tests are preloaded?\n2. Are they always the same tests on label? Standardized?\n   1. If they are standardized there's no need for the panel checkboxes\n3. Will they need to attach orders like they do now in POS?\n","n":0.074}}},{"i":101,"$":{"0":{"v":"04","n":1}}},{"i":102,"$":{"0":{"v":"30","n":1}}},{"i":103,"$":{"0":{"v":"Dpd Pcg-Blending 2022 04 30 Qc-Product-Touchpoint","n":0.408},"1":{"v":"\n## People\n@people.ScottStorm  \n@people.SamanthaGrayshaw  \n@people.ChirayuPoundarik  \n@people.HieuNgo  \n\n## Notes\n- How would COA tests be selected?\n- Panel label should be for MVP\n- 15 - 16 tests\n- 3 parameters for label test\n- COA to be for increment 2\n- Sherwin vs. customer tests?\n- Marianne will be test master, she will be creating the tests, we want default ones available\n\n## Questions\n- Why are developers not in this meeting?\n","n":0.127}}},{"i":104,"$":{"0":{"v":"28","n":1}}},{"i":105,"$":{"0":{"v":"Dpd Pcg-Blending 2022 04 28 Stand-Up","n":0.408},"1":{"v":"### People\n@people.SureshThota  \n@people.WaltEbertz  \n@people.HieuNgo  \n@people.ScottStorm  \n\n### Previous Stand up\n[[dpd.pcg-b.2022.04.27.stand-up]]\n\n### Cards Discussed\n#### Card Number\n- POW-121\n#### Owner\n- @people.SureshThota\n#### Notes\n- Completed in QA\n- Walter tested in QA\n- Should we send it to Prod now? Let's hold off\n---\n#### Card Number\n- POW-34\n#### Owner\n- @people.MelClifford\n#### Notes\n- Met with Yuna yesterday, Guna to help\n- Service is set up\n---\n#### Card Number\n- POW-71\n#### Owner\n- @people.SureshThota\n#### Notes\n- Still waiting for Elias storep developer\n- DBA not responding, reached out to them yesterday\n---\n#### Card Number\n- POW-118\n#### Owner\n-  @people.SureshThota\n#### Notes\n- Should go to QA tomorrow night \n---\n#### Card Number\n- POW-90\n#### Owner\n- @people.SureshThota\n#### Notes\n- Will meet later today\n---\n#### Card Number\n- POW-120\n#### Owner\n- @people.WaltEbertz\n#### Notes\n- \n---\n#### Card Number\n- POW-122\n#### Owner\n- @people.ScottStorm\n#### Notes\n- Meeting for tomorrow to discuss 2-3\n---\n#### Card Number\n- POW-124\n#### Owner\n- @people.SureshThota\n#### Notes\n- List has been sent to Power Apps group\n---\n#### Card Number\n- POW-\n#### Owner\n- \n#### Notes\n-\n---\n## Miscellaneous\n- @people.SamanthaGrayshaw, was at Garfield location with devs, feedback, major issues with login, auth between issues. No order selected workflow. They need to log out of both systems for their orders to be cleared\n  - They are very uncomfortable right now, logging out 8-10 times a day to drop the order\n  - Workbench search functionality is quicker than Aurora\n  - May need to reach out to the AD team, Suresh to discuss with them later today, Mike Thomas on Azure team\n- Should Workbench Increment 2 and Retooling epics be kept separate? For now it seems they should be\n","n":0.066}}},{"i":106,"$":{"0":{"v":"27","n":1}}},{"i":107,"$":{"0":{"v":"Dpd Pcg-Blending 2022 04 27 Stand-Up","n":0.408},"1":{"v":"\n@people.SureshThota\n@people.WaltEbertz\n@people.HieuNgo\n@people.ScottStorm\n\n### Previous Stand up\n[[meet.2022.04.26.blending-standup]]\n\n### Cards Discussed\n#### Card Number\n- POW-120\n#### Owner\n- @people.WaltEbertz\n#### Notes\n- May 9 go-live\n- Walt to reach out a week before to the site and give them a timeline\n---\n#### Card Number\n- POW-71\n#### Owner\n- @people.SureshThota\n#### Notes\n- \n---\n#### Card Number\n- POW-122\n#### Owner\n- @people.ScottStorm\n#### Notes\n- Will be working with @people.SamanthaGrayshaw and @people.HieuNgo\n- Asked Scott to include me\n---\n#### Card Number\n- POW-\n#### Owner\n- @ \n#### Notes\n-\n---\n#### Card Number\n- POW-\n#### Owner\n- @ \n#### Notes\n-\n---\n## Miscellaneous\n- \n\n---\n\n**I**ndependent  \n**N**egotiable  \n**V**aluable  \n**E**stimable  \n**S**mall  \n**T**estable\n\nFibonacci sequence\n0, 1, 2, 3, 5, 8, 13\n","n":0.11}}},{"i":108,"$":{"0":{"v":"Dpd Pcg-Blending 2022 04 27 Scrum-Master-1on1on1","n":0.408},"1":{"v":"\n## People\n- @people.Tamara\n- @people.ChirayuPoundarik\n\n## Notes\n\n## Goals\n### Scrum Master Role\n- Best defined role just about anywhere, yet there's a lot of confusion around the role\n- SM is NOT a Project Manager\n- Project Managers will not necessarily become Scrum Masters\n- Define vision\n  - Embrace Scrum throughout value chain\n  - Smoothly onboard new employees/team members on agile practices\n  - Max business outcomes via Scrum\n- Removing Roadblocks\n  - Document and comm roadblocks\n    - Not necessarily to create PPT's, etc.\n    - Will contribute to reports\n  - Look for things that cannot be removed **by the team members themselves**\n  - Implement roadblock solutions\n- Shielding interference\n  - Maintain team's focus\n  - Intercept external interference\n  - Work should NOT be done if it's not coming through the SM, they must work with the SM\n  - Be the servant leader\n- Assisting Product Owner\n  - Implement feedback \n  - Help groom product backlog\n    - Understand when to pull in tech debt as needed\n- Being a Servant Leader\n  - Ensure the team's highest priorities are being met\n  - \"What can I do to help you and the team be more effective?\" mindset\n  - Not a traditional leader\n- Process Authority\n  - Ensure team adheres to Scrum values, principles and practices\n  - Enact team-specific approaches\n- Coaching team member(s)\n  - Improve use of Scrum and tech skills at a team and individual level\n  - Host stand-up meetings for the team\n    - Make sure to lead the stand-ups\n  - Ensure a sense of project ownership among the team\n\n- Scrum Master's do NOT give orders\n- SM to be closer to a consultant who analyzes and makes suggestions\n- Team's are self-managed\n- If there are things to be worked on outside of the team, make sure that's **highly agreed on** and **temporary**\n- SM's make suggestions, does NOT have authority\n  - Ex. Team does NOT want the PO in the retro:\n    - \"Hey team, figure out how to get the information to the PO.\"\n\n- SM's are helpful to their team\n- Encourages the team to carry out tasks that were agreed upon\n  - Don't leave any tasks behind\n- SM is successful if hte team learns to manage itself\n- SM should teach the team about the principles & rules of scrum\n- SM should help clear any roadblocks the team faces\n  - Make sure situations are taken care of\n\n\n### What's up next, including training?\n- There is a training program for PO's and team\n- Dates are tentative\n- Will be PluralSight and Udemy (05/02 - 05/16)\n  - 5-8 hours total, 2 weeks given\n- Full team training (05/16)\n  - Tamara will find out from the 3rd party\n- Role Based Training (05/30)\n  - As soon as this is available, I will be doing it\n","n":0.048}}},{"i":109,"$":{"0":{"v":"Dpd Pcg-Blending 2022 04 29","n":0.447},"1":{"v":"\n### Previous Stand-up\n\n[[dpd.pcg-b.2022.04.28.stand-up]]\n\n### Cards Discussed\n\n#### Card Number\n\n- @stories.POW-121\n\n#### Owner\n\n- @people.SureshThota\n\n#### Notes\n\n-\n---\n\n#### Card Number\n\n- POW-34\n\n#### Owner\n\n- @people.MelClifford\n\n#### Notes\n\n- Working session with Suresh and Integration and Power Apps team 2-3\n\n---\n\n#### Card Number\n\n- POW-71\n\n#### Owner\n\n- @people.SureshThota\n\n#### Notes\n\n- Should be completed by eod, testing to begin Monday\n\n---\n\n#### Card Number\n\n- POW-118\n\n#### Owner\n\n- @people.SureshThota\n\n#### Notes\n\n- Should be migrated to QA with OSB\n- Ram said the developer said the Dell Boomi will be ready by eod\n\n---\n\n#### Card Number\n\n- POW-90\n\n#### Owner\n\n- @people.SureshThota\n\n#### Notes\n\n- All options require PoCs\n  - UI options\n  - May go with AOM SSO sync\n  - Next week move to done, hopefully\n\n---\n\n#### Card Number\n\n- POW-120\n\n#### Owner\n\n- @people.WaltEbertz\n\n#### Notes\n\n-\n---\n\n#### Card Number\n\n- @stories.POW-122\n\n#### Owner\n\n- @people.ScottStorm\n\n#### Notes\n\n- Marianne on vacation, Sam available at 2-3, meeting\n\n---\n\n#### Card Number\n\n- @stories.POW-124\n\n#### Owner\n\n- @people.SureshThota\n\n#### Notes\n\n- Will add users to QA app\n\n---\n\n#### Card Number\n\n- @stories.POW-128\n\n#### Owner\n\n- @people.EarlSioson\n\n#### Notes\n\n- He started development, needs Jira access on laptop\n\n---\n\n## Miscellaneous\n\n- TAG and TCS are losing some developers, @people.RamGummadala cannot guarantee when Workbench work will be done\n  - Will get info next week\n- Set out the components for the Tasks for Workbench\n- [x] Schedule an informal meeting, UX and Ram's team\n- [x] Schedule stand-ups 9:30\n- [x] Put touchpoint on calendar for next Friday with Chirayu weekly\n","n":0.071}}},{"i":110,"$":{"0":{"v":"05","n":1}}},{"i":111,"$":{"0":{"v":"31","n":1}}},{"i":112,"$":{"0":{"v":"Retro","n":1},"1":{"v":"\n- Include Brian, next time\n\n### What's going well?\n- Communication is going well\n  - Being able to reach out at a moment's notice to any one, informal and formal meeting\n- Team foundations are getting established\n\n### What's not going well? And Ideas\n- How are Workbench and QC Product integrated and how are the 2 projects being allocated, to help us unblock cards, etc. \n- MVP change?\n  - Having a doc to state what's to be done in the MVP, should be created, source of truth, signed off\n  - \n- We need consistency on the project\n- Working out of order? \n- It feels very Waterfall-like \n- What's the value that we are providing? \n- Workbench vs. IOM\n  - Work is being duplicated across the teams/projects\n  - There appears to not be any communication about the overlap on these 2 projects\n- We have personas and we are not using them!!\n- Does Matt need to have a discussion with Sam's manager, Tom? To help with PO availability\n- Business Relationships\n  - Do I need to talk with Joe?","n":0.076}}},{"i":113,"$":{"0":{"v":"27","n":1}}},{"i":114,"$":{"0":{"v":"May 27 Stand Up","n":0.5},"1":{"v":"\n- Share with Team\n  - POW-132 split into 2 cards\n- Peaches and pits?\n\n### Workbench Epic\n#### In Progress\n@stories.POW-138  \n@stories.POW-139 \n- URL should be ready by end of today\n- @people.SureshThota will provide update\n- We are waiting on review from @people.JasonBarr and @people.GunabalanAnatharajan\n- Should be ready by Tuesday\n@stories.POW-141  \n@stories.POW-144  \n@stories.POW-142  \n@stories.POW-4  \n@stories.POW-157  \n@stories.POW-181  \n#### On-Hold\n@stories.POW-22  \n#### To Do\n@stories.POW-145  \n@stories.POW-146  \n@stories.POW-152  \n#### Done\n@stories.POW-132  \n\n### QC Product Epic\n#### In Progress\n@stories.PCGQC-11  \n@stories.PCGQC-2  \n@stories.PCGQC-1\n@stories.PCGQC-34  \n@stories.PCGQC-3  \n#### Blocked\n@stories.PCGQC-35  \n@stories.PCGQC-12  \n#### To Do\n@stories.PCGQC-70  ","n":0.116}}},{"i":115,"$":{"0":{"v":"23","n":1}}},{"i":116,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous Meeting\n\n[[May 20 Stand Up|dpd.pcg-b.2022.05.20.stand-up]]\n\n### Cards Discussed\n\n- @stories.PCGQC-11\n- Owner @people.JasonBarr\n- Notes\n  - @people.RahulLandge continuing to work on this with Jason\n\n---\n\n- @stories.PCGQC-35\n- Owner\n- Notes\n\n---\n\n- @stories.PCGQC-2\n- Owner @people.HieuNgo\n- Notes\n  - Still need to figure out the Definition of Done\n\n---\n\n- @stories.PCGQC-1\n- Owner @people.HieuNgo\n- Notes  \n  - Still need to figure out the Definition of Done\n\n---\n\n- @stories.PCGQC-34\n- Owner\n- Notes\n![[dpd.pcg-b.2022.05.20.stand-up#^yh8dangfz1xs:#^m96ua976pj9w]]\n\n---\n\n- @stories.PCGQC-3\n- Owner\n- Notes\n\n---\n\n- @stories.POW-138\n- Owner @people.MelClifford\n- Notes\n  - Currently deploying these, Sirni is helping with this\n\n---\n\n- @stories.POW-139\n- Owner @people.GunabalanAnatharajan\n- Notes\n  - Development is done, Review is being done by Kiran and Jason\n\n---\n\n- @stories.POW-22\n- Owner @people.SoumyajitPaul\n- Notes\n\n---\n\n- @stories.POW-141\n- Owner @people.MelClifford\n- Notes\n\n---\n\n- @stories.POW-144\n- Owner @people.MelClifford\n- Notes\n\n---\n\n- @stories.POW-4\n- Owner @people.JasonBarr\n- Notes\n\n---\n\n- @stories.POW-157\n- Owner @people.SureshThota\n- Notes\n\n---\n\n- @stories.POW-132\n- Owner @people.EarlSioson\n- Notes\n  - Should be updated by today\n\n---\n\n- @stories.POW-161\n- Owner @people.EarlSioson\n- Notes\n\n---\n\n- @stories.POW-162\n- Owner @people.EarlSioson\n- Notes\n\n---\n\n- @stories.POW-163\n- Owner @people.EarlSioson\n- Notes\n\n---\n\n### Action Items\n\n- [x] Create Epic for Increment 3\n- Difference between \"On-Hold\" and \"Blocked\" do we understand\n- Hieu to check with Sam and Marianne about the Target values, for the MVP this should be static\n\n## Tasks\n","n":0.078}}},{"i":117,"$":{"0":{"v":"20","n":1}}},{"i":118,"$":{"0":{"v":"Workflow Config Discussion","n":0.577},"1":{"v":"\n### People\n- @people.Devi\n\n### Notes\n- As a group we started coming up with a workflow\n- Get Devi a good artifact of the workflow\n- ![](/assets/images/2022-05-20-11-36-54.png)\n\n```mermaid\n    flowchart LR\n    n[New]\n    ba[BA]\n    ux[UX]\n    dr[Design Review]\n    uit[UI/Todo]\n    c[Coding]\n    dc[Done Coding]\n    unit[Code/Unit Testing]\n    at[Acceptance Testing]\n    closed[Closed]\n\n    n-->ba\n    ba-->ux \n    ux-->dr\n    dr-->uit\n    uit-->c\n    c-->dc\n    dc-->unit\n    unit--Testing passed-->at\n    unit--Failed unit testing-->c\n    at-->closed\n\n```\n","n":0.137}}},{"i":119,"$":{"0":{"v":"May 20 Stand Up","n":0.5},"1":{"v":"\n### Previous Meeting\n[[dpd.pcg-b.2022.05.19.stand-up]]\n\n### Cards Discussed\n\n- @stories.PCGQC-11\n- @stories.PCGQC-10\n- @stories.PCGQC-2\n  - For the subtasks we don't have Acceptance Criteria, so @people.HieuNgo not entirely sure what to do\n  - Microservices portion being worked on\n- @stories.PCGQC-1  - or the subtasks we don't have Acceptance Criteria, so @people.HieuNgo not entirely sure what to do\n- @stories.PCGQC-34 ^yh8dangfz1xs\n  - @stakeholder.MarianneBrooks provided a new Target point, we're not entirely sure where to go with this one, Target value column\n    - @people.ScottStorm, meeting with @people.SamanthaGrayshaw and Marianne, hopefully this afternoon\n    - @people.ChirayuPoundarik says that each Target Value is different for each product ^m96ua976pj9w\n- @stories.PCGQC-3\n  - or the subtasks we don't have Acceptance Criteria, so @people.HieuNgo not entirely sure what to do\n- @stories.POW-138\n\n  - Wondering about the Acceptance Criteria\n  - Coding is done, Services are not usable\n  - Meeting with Srini and Suresh\n- @stories.POW-139\n\n- @stories.POW-22\n\n  - Depends on Microservice\n  - Should be on-hold\n- @stories.POW-141\n\n- @stories.POW-144\n\n- @stories.POW-4\n\n  - This should be a reocurring issue for each Increment\n  - Architecture review, review with OIM and Stakeholders\n  - @people.JasonBarr will communicate with other team\n- @stories.POW-132\n- @stories.POW-158\n\n### Next Meeting\n[[dpd.pcg-b.2022.05.23.stand-up]]\n\n### Action Items\n#todos \n- [x] Update POW board to be like QCP\n- [x] Create a team vacation calendar to \n","n":0.072}}},{"i":120,"$":{"0":{"v":"Qc Testing Discussion","n":0.577},"1":{"v":"\n### People\n- @stakeholder.MarianneBrooks\n- @people.SamanthaGrayshaw\n- @people.ScottStorm\n\n### Notes\n- We will need the Target column for the MVP\n- Min and Max would be 5% down or up from Target\n  - Before blending begins\n  - Will be static\n  - This will have to be part of the Admin functionality\n  - Integer to up to 2 decimal places\n- Result \n  - After blending\n- What would Pass/Fail look like?\n  - Marianne will mock somthing up in Excel\n","n":0.119}}},{"i":121,"$":{"0":{"v":"19","n":1}}},{"i":122,"$":{"0":{"v":"May 19 Stand Up","n":0.5},"1":{"v":"\n### Previous Meeting\n[[dpd.pcg-b.2022.05.18.stand-up]]\n\n### Notes\n- @stories.POW-22\n  - @people.SureshThota worked with Integration team and this is deployed in QA\n  - Suresh will need a sandbox for the Azure website, will work with @people.GunabalanAnatharajan\n- Per Guna, Rahul is working on the label for the microservices\n\n- With Workbench in Jira, do we start making the epics for them to follow suit with QC\n  - Work Order story/epic to be created by @people.HieuNgo\n\n- @people.MattWalter\n  - Background in Product Development, started out at Progressive and then consulting\n  - Software development and architecture\n  - Wants us to feel comfortable reaching out\n\n### Next Meeting\n[[dpd.pcg-b.2022.05.20.stand-up]]\n","n":0.102}}},{"i":123,"$":{"0":{"v":"18","n":1}}},{"i":124,"$":{"0":{"v":"Stand Up","n":0.707}}},{"i":125,"$":{"0":{"v":"Sprint Planning","n":0.707},"1":{"v":"\n### \n- [d] Get Brian access to Jira and the projects\n\n- Mel on vacation next week, working on Workbench this week\n\nWhat does the Workflow look like\n- [x] Set up the Workflow sessions\n\n- [x] Check with people's in-office preference\n  - [x] Still need one more\n","n":0.151}}},{"i":126,"$":{"0":{"v":"17","n":1}}},{"i":127,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous Stand-up\n[[dpd.pcg-b.2022.05.16.stand-up]]\n\n### Repurpose as Backlog grooming refinement\n\n- @stories.PCGQC-11\n  - Earl, Rahul and Suresh will be reviewing the documents and will be marked Done after the Review\n- @stories.PCGQC-51\n  - Might need a Cosmos DB with 2 Collections per Jason\n    - Test Methods collection\n\n- [x] Get a Workflow session set up\n- [x] Set up Story point session\n","n":0.134}}},{"i":128,"$":{"0":{"v":"16","n":1}}},{"i":129,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous Stand-up\n[[dpd.pcg-b.2022.05.13.stand-up]]\n\n## \n- Bring up having QC Product Backlog building/grooming session\n  - Need to determine what is MVP\n","n":0.229}}},{"i":130,"$":{"0":{"v":"Quality Test Naming","n":0.577},"1":{"v":"\n### People\n- @people.ScottStorm\n- @stakeholder.MarianneBrooks\n\n### Agenda\n- Want to nail down the naming of the Tests\n\n### Notes\n- Every work/shop order should be unique\n- 3 Tests for the MVP\n  - Delta E, is the unit\n  - Change to Color Delta E\n  - Gloss\n    - 20, 60 and 85\n    - Choose 60 gloss \n- Methods should be auto-populated and static\n  - Reference to a doc that shows them how to run the Test\n- Unit should also be auto-populated and static\n- Methods and Units will be stored in Admin section\n- Does Admin functionality get included with the MVP? \n  - Marianne doesn't think so\n- Methods could be located in different data spots\n  - MES, Oracle and/or Product Vision\n","n":0.094}}},{"i":131,"$":{"0":{"v":"Qc Design Review","n":0.577},"1":{"v":"\n- Hieu leading it\n\n- Wants to include a status indicator either of the workbench or an individual order\n- Additionally functionality can be added in the 3 dots menu, would stack vertically\n- Test would be a drop down with type ahead on Tests\n- Sam owes us the Tests\n- Removing the Tests will probably happen later\n- Product Details not needed until COA comes into the picture\n- Trying to keep the primary buttons within view\n- Batches last 1-2 hours long\n","n":0.114}}},{"i":132,"$":{"0":{"v":"13","n":1}}},{"i":133,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n### Previous Stand-up\n[[dpd.pcg-b.2022.05.10.stand-up]]\n\n### Notes\n- Go over design review on Monday during the Stand-up time\n  - Need Marrianne and Sam\n- Hieu shared the PRISM platform mission statement\n  - Preston Williams is the Lead developer\n  - We may have to get a new URL and name for the project\n\n- @stories.POW-138\n\n  - Filter req not met\n- @stories.POW-144\n\n  - Needs to send Earl the JSON\n- @stories.POW-141\n\n  - Suresh will provid Mel the table(s)\n- @stories.POW-139\n\n  - Suresh, to talk with Guna and get an update on this\n\n\n- Suresh, asked if we need OAuth for the Microservices, Mel will contact the OIM or API team\n\n- POW-131\n  - Needs to be tested\n- @stories.POW-132\n  - Being worked on\n  - Suresh will schedule a demo for this\n- POW-148\n  - Could be marked as done\n\n### Miscellaneous\n- Talk with Scott about Sam not coming to meetings\n\n### Questions\n- Do we need another column for \"In-Testing\"\n\n### To Do\n- [x] Let Sam know to be there on Monday morning\n","n":0.08}}},{"i":134,"$":{"0":{"v":"04","n":1}}},{"i":135,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n## Previous Day's Meetings\n[[dpd.pcg-b.2022.05.03.stand-up]]\n\n## People\nHave conflicts\n- @people.JasonBarr\n- @people.GunabalanAnatharajan\n- @people.EarlSioson\n\n## Cards\n### In-Progress\n- POW-143\n  - Sub-task of POW-123\n  - HALS will **not be** used going forward\n    - Internal, North American only\n- POW-122\n- @stories.POW-138\n\n  - Had meeting yesterday\n  - Need to agree on the format\n  - Backend and frontend developers are in agreement of the format, the fields, the structure, generic components\n  - @people.HieuNgo will set up meeting to **sync up** on Workbench with components and where they're at in the process with PoC and Figma\n- @stories.POW-139\n\n- POW-131\n- @stories.POW-132\n- POW-118\n- POW-90\n- POW-120\n- POW-124\n### To Do\n- POW-123\n- POW-100\n- @stories.POW-141\n\n- @stories.POW-144\n\n- POW-146\n- POW-142\n- POW-135\n- POW-129\n- POW-130\n- POW-147\n  - Just created by Chirayu and put into this sprint\n- POW-148\n  - Just created by Chirayu and put into this sprint\n  - Dependent on POW-120\n\n## Miscellaneous\n- Edina site training set for Wednesday (05/11)\n  - @people.WaltEbertz to share with them that they will have access by Wednesday\n  - @people.SureshThota, we need employee details, @people.RamGummadala and him to meet\n","n":0.079}}},{"i":136,"$":{"0":{"v":"03","n":1}}},{"i":137,"$":{"0":{"v":"Dpd Pcg-Blending 2022 05 03","n":0.447},"1":{"v":"\n## Previous Day's Meetings\n[[dpd.pcg-b.2022.05.02.workbench-backlog-grooming]]\n\n## Cards\n- POW-122\n  - Meeting tomorrow morning with Sam\n  - Mural cards\n  - Microservices, table design and structure\n  - Should be good by tomorrow\n- @stories.POW-4\n\n  - Been working on IoM\n  - Move to next Sprint\n  - Ram working with Dennis to figure out\n- POW-128\n  - Suresh said he completed the React UI setup\n- @stories.POW-139\n\n- POW-34\n    - Move both to backlog\n- POW-118\n  - Testing to be done\n- POW-90\n  - Suresh will discuss with Chirayu\n- POW-120\n  - dependent on testing passing in QA in Edina site\n  - Edina start date, give them 3 days for testing/training\n- POW-35 \n  - Move to backlog\n- Marianne and Sam will be available tomorrow\n  - 10-11 \n","n":0.094}}},{"i":138,"$":{"0":{"v":"02","n":1}}},{"i":139,"$":{"0":{"v":"Dpd Pcg-Blending 2022 05 02 Workbench-Backlog-Grooming","n":0.408},"1":{"v":"\n## Notes\n- POW-48 set as a New Feature\n- Suresh and Chirayu, mainly discussing \n- Components in Jira\n  - Each story will have multiple tasks\n  - Stories will be linked to components\n  - Stories will be linked to epics\n    - Look into this further\n    - Assigning a component to an issue at creation will automatically assign it to the designated/default user\n    - Can have kind of sub-projects\n    > Basically what you’re trying to do with Jira components is tag special circumstances for which you may want to change the process or create detailed reporting.\n    [Jira Components Jexo.io](https://jexo.io/blog/101-guide-to-jira-components/)\n","n":0.102}}},{"i":140,"$":{"0":{"v":"24","n":1}}},{"i":141,"$":{"0":{"v":"Q2 Feature Alignment and Roadmap","n":0.447},"1":{"v":"\n- Didn't realize this was going to be a demo for Dan\n- Where was Sam in this meeting? \n","n":0.229}}},{"i":142,"$":{"0":{"v":"10","n":1}}},{"i":143,"$":{"0":{"v":"Stand Up","n":0.707},"1":{"v":"\n- PQP-17\n  - Rahul met with Suresh, working on this one\n\n- Mel, Guna and Suresh to discuss the Microservice and API cards\n\n- POW-131, 132\n  - Per Suresh from Earl, Should be completed by end of week\n\n- POW-120\n  - Go-live for tonight\n  - Sam should be switching the toggle\n- POW-148\n  - May 18 is go-live for Allentown\n","n":0.134}}}]}
